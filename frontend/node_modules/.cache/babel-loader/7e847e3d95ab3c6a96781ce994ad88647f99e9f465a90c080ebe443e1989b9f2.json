{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node from '../core/Node.js';\nimport UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nvar ReferenceNode = /*#__PURE__*/function (_Node) {\n  _inherits(ReferenceNode, _Node);\n  var _super = _createSuper(ReferenceNode);\n  function ReferenceNode(property, uniformType) {\n    var _this;\n    var object = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    _classCallCheck(this, ReferenceNode);\n    _this = _super.call(this);\n    _this.property = property;\n    _this.uniformType = uniformType;\n    _this.object = object;\n    _this.node = null;\n    _this.updateType = NodeUpdateType.Object;\n    _this.setNodeType(uniformType);\n    return _this;\n  }\n  _createClass(ReferenceNode, [{\n    key: \"setNodeType\",\n    value: function setNodeType(uniformType) {\n      this.node = new UniformNode(null, uniformType);\n      this.nodeType = uniformType;\n      if (uniformType === 'color') {\n        this.nodeType = 'vec3';\n      } else if (uniformType === 'texture') {\n        this.nodeType = 'vec4';\n      }\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType() {\n      return this.uniformType;\n    }\n  }, {\n    key: \"update\",\n    value: function update(frame) {\n      var object = this.object !== null ? this.object : frame.object;\n      var value = object[this.property];\n      this.node.value = value;\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      return this.node.build(builder, this.getNodeType(builder));\n    }\n  }]);\n  return ReferenceNode;\n}(Node);\nexport default ReferenceNode;","map":{"version":3,"names":["Node","UniformNode","NodeUpdateType","ReferenceNode","_Node","_inherits","_super","_createSuper","property","uniformType","_this","object","arguments","length","undefined","_classCallCheck","call","node","updateType","Object","setNodeType","_createClass","key","value","nodeType","getNodeType","update","frame","generate","builder","build"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/nodes/accessors/ReferenceNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\n\nclass ReferenceNode extends Node {\n  constructor(property, uniformType, object = null) {\n    super();\n    this.property = property;\n    this.uniformType = uniformType;\n    this.object = object;\n    this.node = null;\n    this.updateType = NodeUpdateType.Object;\n    this.setNodeType(uniformType);\n  }\n\n  setNodeType(uniformType) {\n    this.node = new UniformNode(null, uniformType);\n    this.nodeType = uniformType;\n\n    if (uniformType === 'color') {\n      this.nodeType = 'vec3';\n    } else if (uniformType === 'texture') {\n      this.nodeType = 'vec4';\n    }\n  }\n\n  getNodeType() {\n    return this.uniformType;\n  }\n\n  update(frame) {\n    const object = this.object !== null ? this.object : frame.object;\n    const value = object[this.property];\n    this.node.value = value;\n  }\n\n  generate(builder) {\n    return this.node.build(builder, this.getNodeType(builder));\n  }\n\n}\n\nexport default ReferenceNode;\n"],"mappings":";;;;AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAClC,OAAOC,WAAW,MAAM,wBAAwB;AAChD,SAASC,cAAc,QAAQ,sBAAsB;AAAC,IAEhDC,aAAa,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,aAAA;EACjB,SAAAA,cAAYK,QAAQ,EAAEC,WAAW,EAAiB;IAAA,IAAAC,KAAA;IAAA,IAAfC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAAAG,eAAA,OAAAZ,aAAA;IAC9CO,KAAA,GAAAJ,MAAA,CAAAU,IAAA;IACAN,KAAA,CAAKF,QAAQ,GAAGA,QAAQ;IACxBE,KAAA,CAAKD,WAAW,GAAGA,WAAW;IAC9BC,KAAA,CAAKC,MAAM,GAAGA,MAAM;IACpBD,KAAA,CAAKO,IAAI,GAAG,IAAI;IAChBP,KAAA,CAAKQ,UAAU,GAAGhB,cAAc,CAACiB,MAAM;IACvCT,KAAA,CAAKU,WAAW,CAACX,WAAW,CAAC;IAAC,OAAAC,KAAA;EAChC;EAACW,YAAA,CAAAlB,aAAA;IAAAmB,GAAA;IAAAC,KAAA,EAED,SAAAH,YAAYX,WAAW,EAAE;MACvB,IAAI,CAACQ,IAAI,GAAG,IAAIhB,WAAW,CAAC,IAAI,EAAEQ,WAAW,CAAC;MAC9C,IAAI,CAACe,QAAQ,GAAGf,WAAW;MAE3B,IAAIA,WAAW,KAAK,OAAO,EAAE;QAC3B,IAAI,CAACe,QAAQ,GAAG,MAAM;MACxB,CAAC,MAAM,IAAIf,WAAW,KAAK,SAAS,EAAE;QACpC,IAAI,CAACe,QAAQ,GAAG,MAAM;MACxB;IACF;EAAC;IAAAF,GAAA;IAAAC,KAAA,EAED,SAAAE,YAAA,EAAc;MACZ,OAAO,IAAI,CAAChB,WAAW;IACzB;EAAC;IAAAa,GAAA;IAAAC,KAAA,EAED,SAAAG,OAAOC,KAAK,EAAE;MACZ,IAAMhB,MAAM,GAAG,IAAI,CAACA,MAAM,KAAK,IAAI,GAAG,IAAI,CAACA,MAAM,GAAGgB,KAAK,CAAChB,MAAM;MAChE,IAAMY,KAAK,GAAGZ,MAAM,CAAC,IAAI,CAACH,QAAQ,CAAC;MACnC,IAAI,CAACS,IAAI,CAACM,KAAK,GAAGA,KAAK;IACzB;EAAC;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAAK,SAASC,OAAO,EAAE;MAChB,OAAO,IAAI,CAACZ,IAAI,CAACa,KAAK,CAACD,OAAO,EAAE,IAAI,CAACJ,WAAW,CAACI,OAAO,CAAC,CAAC;IAC5D;EAAC;EAAA,OAAA1B,aAAA;AAAA,EAlCyBH,IAAI;AAsChC,eAAeG,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}