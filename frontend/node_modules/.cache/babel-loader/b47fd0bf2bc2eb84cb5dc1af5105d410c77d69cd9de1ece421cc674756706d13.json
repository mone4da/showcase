{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport TimerNode from './TimerNode.js';\nimport { add, mul, sin, round, fract, abs, sub } from '../ShaderNode.js';\nvar OscNode = /*#__PURE__*/function (_Node) {\n  _inherits(OscNode, _Node);\n  var _super = _createSuper(OscNode);\n  function OscNode() {\n    var _this;\n    var method = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : OscNode.SINE;\n    var timeNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new TimerNode();\n    _classCallCheck(this, OscNode);\n    _this = _super.call(this);\n    _this.method = method;\n    _this.timeNode = timeNode;\n    return _this;\n  }\n  _createClass(OscNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      return this.timeNode.getNodeType(builder);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var method = this.method;\n      var timeNode = this.timeNode;\n      var outputNode = null;\n      if (method === OscNode.SINE) {\n        outputNode = add(mul(sin(mul(add(timeNode, 0.75), Math.PI * 2)), 0.5), 0.5);\n      } else if (method === OscNode.SQUARE) {\n        outputNode = round(fract(timeNode));\n      } else if (method === OscNode.TRIANGLE) {\n        outputNode = abs(sub(1, mul(fract(add(timeNode, 0.5)), 2)));\n      } else if (method === OscNode.SAWTOOTH) {\n        outputNode = fract(timeNode);\n      }\n      return outputNode.build(builder);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(OscNode.prototype), \"serialize\", this).call(this, data);\n      data.method = this.method;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(OscNode.prototype), \"deserialize\", this).call(this, data);\n      this.method = data.method;\n    }\n  }]);\n  return OscNode;\n}(Node);\n_defineProperty(OscNode, \"SINE\", 'sine');\n_defineProperty(OscNode, \"SQUARE\", 'square');\n_defineProperty(OscNode, \"TRIANGLE\", 'triangle');\n_defineProperty(OscNode, \"SAWTOOTH\", 'sawtooth');\nexport default OscNode;","map":{"version":3,"names":["_defineProperty","Node","TimerNode","add","mul","sin","round","fract","abs","sub","OscNode","_Node","_inherits","_super","_createSuper","_this","method","arguments","length","undefined","SINE","timeNode","_classCallCheck","call","_createClass","key","value","getNodeType","builder","generate","outputNode","Math","PI","SQUARE","TRIANGLE","SAWTOOTH","build","serialize","data","_get","_getPrototypeOf","prototype","deserialize"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/nodes/utils/OscNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport TimerNode from './TimerNode.js';\nimport { add, mul, sin, round, fract, abs, sub } from '../ShaderNode.js';\n\nclass OscNode extends Node {\n  constructor(method = OscNode.SINE, timeNode = new TimerNode()) {\n    super();\n    this.method = method;\n    this.timeNode = timeNode;\n  }\n\n  getNodeType(builder) {\n    return this.timeNode.getNodeType(builder);\n  }\n\n  generate(builder) {\n    const method = this.method;\n    const timeNode = this.timeNode;\n    let outputNode = null;\n\n    if (method === OscNode.SINE) {\n      outputNode = add(mul(sin(mul(add(timeNode, 0.75), Math.PI * 2)), 0.5), 0.5);\n    } else if (method === OscNode.SQUARE) {\n      outputNode = round(fract(timeNode));\n    } else if (method === OscNode.TRIANGLE) {\n      outputNode = abs(sub(1, mul(fract(add(timeNode, 0.5)), 2)));\n    } else if (method === OscNode.SAWTOOTH) {\n      outputNode = fract(timeNode);\n    }\n\n    return outputNode.build(builder);\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.method = this.method;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.method = data.method;\n  }\n\n}\n\n_defineProperty(OscNode, \"SINE\", 'sine');\n\n_defineProperty(OscNode, \"SQUARE\", 'square');\n\n_defineProperty(OscNode, \"TRIANGLE\", 'triangle');\n\n_defineProperty(OscNode, \"SAWTOOTH\", 'sawtooth');\n\nexport default OscNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}