{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { ShaderMaterial, UniformsUtils } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nvar ShaderPass = /*#__PURE__*/function (_Pass) {\n  _inherits(ShaderPass, _Pass);\n  var _super = _createSuper(ShaderPass);\n  function ShaderPass(shader) {\n    var _this;\n    var textureID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'tDiffuse';\n    _classCallCheck(this, ShaderPass);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"textureID\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"uniforms\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"material\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"fsQuad\", void 0);\n    _this.textureID = textureID;\n    if (shader instanceof ShaderMaterial) {\n      _this.uniforms = shader.uniforms;\n      _this.material = shader;\n    } else {\n      _this.uniforms = UniformsUtils.clone(shader.uniforms);\n      _this.material = new ShaderMaterial({\n        defines: Object.assign({}, shader.defines),\n        uniforms: _this.uniforms,\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader\n      });\n    }\n    _this.fsQuad = new FullScreenQuad(_this.material);\n    return _this;\n  }\n  _createClass(ShaderPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      if (this.uniforms[this.textureID]) {\n        this.uniforms[this.textureID].value = readBuffer.texture;\n      }\n      this.fsQuad.material = this.material;\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer); // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\n        if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n        this.fsQuad.render(renderer);\n      }\n    }\n  }]);\n  return ShaderPass;\n}(Pass);\nexport { ShaderPass };","map":{"version":3,"names":["_defineProperty","ShaderMaterial","UniformsUtils","Pass","FullScreenQuad","ShaderPass","_Pass","_inherits","_super","_createSuper","shader","_this","textureID","arguments","length","undefined","_classCallCheck","call","_assertThisInitialized","uniforms","material","clone","defines","Object","assign","vertexShader","fragmentShader","fsQuad","_createClass","key","value","render","renderer","writeBuffer","readBuffer","texture","renderToScreen","setRenderTarget","clear","autoClearColor","autoClearDepth","autoClearStencil"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/postprocessing/ShaderPass.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { ShaderMaterial, UniformsUtils } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\n\nclass ShaderPass extends Pass {\n  constructor(shader, textureID = 'tDiffuse') {\n    super();\n\n    _defineProperty(this, \"textureID\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    _defineProperty(this, \"material\", void 0);\n\n    _defineProperty(this, \"fsQuad\", void 0);\n\n    this.textureID = textureID;\n\n    if (shader instanceof ShaderMaterial) {\n      this.uniforms = shader.uniforms;\n      this.material = shader;\n    } else {\n      this.uniforms = UniformsUtils.clone(shader.uniforms);\n      this.material = new ShaderMaterial({\n        defines: Object.assign({}, shader.defines),\n        uniforms: this.uniforms,\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader\n      });\n    }\n\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n\n  render(renderer, writeBuffer, readBuffer) {\n    if (this.uniforms[this.textureID]) {\n      this.uniforms[this.textureID].value = readBuffer.texture;\n    }\n\n    this.fsQuad.material = this.material;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer); // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\n      if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      this.fsQuad.render(renderer);\n    }\n  }\n\n}\n\nexport { ShaderPass };\n"],"mappings":";;;;;AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,SAASC,cAAc,EAAEC,aAAa,QAAQ,OAAO;AACrD,SAASC,IAAI,EAAEC,cAAc,QAAQ,WAAW;AAAC,IAE3CC,UAAU,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EACd,SAAAA,WAAYK,MAAM,EAA0B;IAAA,IAAAC,KAAA;IAAA,IAAxBC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,UAAU;IAAAG,eAAA,OAAAX,UAAA;IACxCM,KAAA,GAAAH,MAAA,CAAAS,IAAA;IAEAjB,eAAe,CAAAkB,sBAAA,CAAAP,KAAA,GAAO,WAAW,EAAE,KAAK,CAAC,CAAC;IAE1CX,eAAe,CAAAkB,sBAAA,CAAAP,KAAA,GAAO,UAAU,EAAE,KAAK,CAAC,CAAC;IAEzCX,eAAe,CAAAkB,sBAAA,CAAAP,KAAA,GAAO,UAAU,EAAE,KAAK,CAAC,CAAC;IAEzCX,eAAe,CAAAkB,sBAAA,CAAAP,KAAA,GAAO,QAAQ,EAAE,KAAK,CAAC,CAAC;IAEvCA,KAAA,CAAKC,SAAS,GAAGA,SAAS;IAE1B,IAAIF,MAAM,YAAYT,cAAc,EAAE;MACpCU,KAAA,CAAKQ,QAAQ,GAAGT,MAAM,CAACS,QAAQ;MAC/BR,KAAA,CAAKS,QAAQ,GAAGV,MAAM;IACxB,CAAC,MAAM;MACLC,KAAA,CAAKQ,QAAQ,GAAGjB,aAAa,CAACmB,KAAK,CAACX,MAAM,CAACS,QAAQ,CAAC;MACpDR,KAAA,CAAKS,QAAQ,GAAG,IAAInB,cAAc,CAAC;QACjCqB,OAAO,EAAEC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEd,MAAM,CAACY,OAAO,CAAC;QAC1CH,QAAQ,EAAER,KAAA,CAAKQ,QAAQ;QACvBM,YAAY,EAAEf,MAAM,CAACe,YAAY;QACjCC,cAAc,EAAEhB,MAAM,CAACgB;MACzB,CAAC,CAAC;IACJ;IAEAf,KAAA,CAAKgB,MAAM,GAAG,IAAIvB,cAAc,CAACO,KAAA,CAAKS,QAAQ,CAAC;IAAC,OAAAT,KAAA;EAClD;EAACiB,YAAA,CAAAvB,UAAA;IAAAwB,GAAA;IAAAC,KAAA,EAED,SAAAC,OAAOC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAE;MACxC,IAAI,IAAI,CAACf,QAAQ,CAAC,IAAI,CAACP,SAAS,CAAC,EAAE;QACjC,IAAI,CAACO,QAAQ,CAAC,IAAI,CAACP,SAAS,CAAC,CAACkB,KAAK,GAAGI,UAAU,CAACC,OAAO;MAC1D;MAEA,IAAI,CAACR,MAAM,CAACP,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAEpC,IAAI,IAAI,CAACgB,cAAc,EAAE;QACvBJ,QAAQ,CAACK,eAAe,CAAC,IAAI,CAAC;QAC9B,IAAI,CAACV,MAAM,CAACI,MAAM,CAACC,QAAQ,CAAC;MAC9B,CAAC,MAAM;QACLA,QAAQ,CAACK,eAAe,CAACJ,WAAW,CAAC,CAAC,CAAC;;QAEvC,IAAI,IAAI,CAACK,KAAK,EAAEN,QAAQ,CAACM,KAAK,CAACN,QAAQ,CAACO,cAAc,EAAEP,QAAQ,CAACQ,cAAc,EAAER,QAAQ,CAACS,gBAAgB,CAAC;QAC3G,IAAI,CAACd,MAAM,CAACI,MAAM,CAACC,QAAQ,CAAC;MAC9B;IACF;EAAC;EAAA,OAAA3B,UAAA;AAAA,EA9CsBF,IAAI;AAkD7B,SAASE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}