[{"/home/samuel/dev/blackscreen/frontend/src/index.js":"1","/home/samuel/dev/blackscreen/frontend/src/renderer.js":"2","/home/samuel/dev/blackscreen/frontend/src/app.js":"3","/home/samuel/dev/blackscreen/frontend/src/model/index.js":"4","/home/samuel/dev/blackscreen/frontend/src/view/index.js":"5","/home/samuel/dev/blackscreen/frontend/src/model/session.js":"6","/home/samuel/dev/blackscreen/frontend/src/model/rest.js":"7","/home/samuel/dev/blackscreen/frontend/src/view/appmanager.js":"8","/home/samuel/dev/blackscreen/frontend/src/view/style.js":"9","/home/samuel/dev/blackscreen/frontend/src/view/organisation.js":"10","/home/samuel/dev/blackscreen/frontend/src/view/asset.js":"11","/home/samuel/dev/blackscreen/frontend/src/view/component/index.js":"12","/home/samuel/dev/blackscreen/frontend/src/view/cli.js":"13","/home/samuel/dev/blackscreen/frontend/src/view/component/toolbar.js":"14","/home/samuel/dev/blackscreen/frontend/src/view/component/window.js":"15","/home/samuel/dev/blackscreen/frontend/src/view/component/windowish.js":"16","/home/samuel/dev/blackscreen/frontend/src/view/component/dataview.js":"17","/home/samuel/dev/blackscreen/frontend/src/view/histogram.js":"18"},{"size":183,"mtime":1681722392938,"results":"19","hashOfConfig":"20"},{"size":177,"mtime":1681722392938,"results":"21","hashOfConfig":"20"},{"size":630,"mtime":1681722392938,"results":"22","hashOfConfig":"20"},{"size":721,"mtime":1681775325338,"results":"23","hashOfConfig":"20"},{"size":1039,"mtime":1681775234418,"results":"24","hashOfConfig":"20"},{"size":1449,"mtime":1681774053098,"results":"25","hashOfConfig":"20"},{"size":601,"mtime":1681722392938,"results":"26","hashOfConfig":"20"},{"size":1514,"mtime":1681776993398,"results":"27","hashOfConfig":"20"},{"size":187,"mtime":1681722392938,"results":"28","hashOfConfig":"20"},{"size":127,"mtime":1681722392938,"results":"29","hashOfConfig":"20"},{"size":269,"mtime":1681722392938,"results":"30","hashOfConfig":"20"},{"size":303,"mtime":1681776251028,"results":"31","hashOfConfig":"20"},{"size":697,"mtime":1681775899128,"results":"32","hashOfConfig":"20"},{"size":1207,"mtime":1681722392938,"results":"33","hashOfConfig":"20"},{"size":1401,"mtime":1681724972918,"results":"34","hashOfConfig":"20"},{"size":228,"mtime":1681726122828,"results":"35","hashOfConfig":"20"},{"size":781,"mtime":1681776113838,"results":"36","hashOfConfig":"20"},{"size":1158,"mtime":1681951336108,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k3flvg",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},"/home/samuel/dev/blackscreen/frontend/src/index.js",[],[],"/home/samuel/dev/blackscreen/frontend/src/renderer.js",[],[],"/home/samuel/dev/blackscreen/frontend/src/app.js",["98"],[],"\nimport {useState} from 'react'\n\nlet sameEvents = (a,b) => {\n\treturn a.source === b.source &&\n\t\tJSON.stringify(a.data) === JSON.stringify(b.data)\n}\n\nlet App = props => {\n\tlet model = props.model\n\tlet View = props.View\n\n\tlet [state, setState] = useState(model.state)\n\tlet [event, setEvent] = useState({source:'', data:''})\n\n\tlet handleUpdate = (data,id) => {\n\t\t//setState(state => data)\n\t}\n\n\tmodel.onUpdate = (data, source) => {\n\t\tlet newEvent = {data, source}\n\t\t!sameEvents(event, newEvent) && setEvent(newEvent)\n\t}\n\n\treturn (\n\t\t<View\n\t\t\tstate={state}\n\t\t\tonUpdate = {handleUpdate}\n\t\t\tevent={event}\n\t\t\t/>\n\n\t)\n}\n\nexport default App\n","/home/samuel/dev/blackscreen/frontend/src/model/index.js",[],[],"/home/samuel/dev/blackscreen/frontend/src/view/index.js",["99"],[],"import {useState} from 'react'\n\nimport Component from './component'\nimport AppManager from './appmanager'\nimport {Copyright} from './organisation'\n\nimport style from './style'\nimport asset from './asset'\n\nlet View = props => {\n\tlet {state, event, onUpdate} = props\n\n\tlet [appTypes, setAppTypes] = useState(state.user.apps)\n\t\n\tlet handleMenu = type => {\n\t\tsetAppTypes( list => list.indexOf(type) < 0 ? [...list,  type] : list )\n\t}\n\n\tlet handleFocused = id => {\n\t\tsetAppTypes(list =>  [...list.filter(type => type !== id), id] )\n\t}\n\n\n\tlet handleClose = id => {\n\t\tsetAppTypes( list => list.filter(type => type !== id) )\n\t}\n\n\n\treturn (\n\t\t<div style={style}>\n\t\t\t<Copyright\n\t\t\t\tstyle={style.organisation.copyright}\n\t\t\t\tcontent={state.system.copyright}\n\t\t\t/>\n\n\t\t\t<AppManager\n\t\t\t\ttypes={appTypes}\n\t\t\t\tComponent={Component}\n\t\t\t\tstate={state}\n\t\t\t\tstyle={style}\n\t\t\t\tasset={asset}\n\t\t\t\tevent={event}\n\t\t\t\tonUpdate={(data,id) => onUpdate && onUpdate(data,id)}\n\t\t\t\tonFocused={handleFocused}\n\t\t\t\tonClose={handleClose}/>\n\n\t\t</div>\n\t)\n}\n\nexport default View\n","/home/samuel/dev/blackscreen/frontend/src/model/session.js",[],[],"/home/samuel/dev/blackscreen/frontend/src/model/rest.js",[],[],"/home/samuel/dev/blackscreen/frontend/src/view/appmanager.js",["100","101","102","103"],[],"import {useState} from 'react'\nimport Cli from './cli'\nimport Histogram from './histogram'\n\nconst availableTypes = ['histogram','cli']\n\nconst defaultPosition = {x: 200, y: 200}\n\nlet renderApp = (name, Component, event, asset, offset, onFocused, onDragged, onClose) => {\n\tswitch(name){\n\t\tcase 'cli' : return <Cli Component={Component} event={event} asset = {asset.cli}  offset={offset}  onFocused={onFocused} onDragged={onDragged} onClose={onClose}/>\n\t\tcase 'histogram' : return <Histogram Component={Component} event={event} asset = {asset.cli}  offset={offset}  onFocused={onFocused} onDragged={onDragged} onClose={onClose} />\n\t}\n\n\treturn null\n}\n\nlet AppManager = props => {\n\tlet {\n\t\ttypes,\n\t\tComponent,\n\t\tstate,\n\t\tasset,\n\t\tstyle,\n\t\tonUpdate,\n\t\tevent,\n\t\tonFocused,\n\t\tonClose} = props\n\n\tlet [positions, setPositions] = useState( Object.fromEntries( availableTypes.map(type => [type, defaultPosition]) ) )\n\n\n\tlet handleFocused = (id, offset) => {\n\t\tonFocused && onFocused(id, offset)\n\t}\n\n\tlet handleDragged = (id, offset) => {\n\t\tsetPositions( positions => {\n\t\t\tpositions[id] = offset\n\t\t\treturn positions\n\t\t})\n\t}\n\n\tlet handleClose = id => {\n\n\t\tsetPositions( positions => {\n\t\t\tpositions[id] = defaultPosition\n\t\t\treturn positions\n\t\t})\n\n\t\tonClose && onClose(id)\n\t}\n\n\n\treturn <>{types.map(id => renderApp(\n\t\t\t\t\tid,\n\t\t\t\t\tComponent,\n\t\t\t\t\tevent,\n\t\t\t\t\tasset,\n\t\t\t\t\tpositions[id],\n\t\t\t\t\t() => handleFocused(id),\n\t\t\t\t\toffset => handleDragged(id, offset),\n\t\t\t\t\t() => handleClose(id)\n\t\t\t\t)\n\t\t\t)}</>\n\n}\n\nexport default  AppManager\n","/home/samuel/dev/blackscreen/frontend/src/view/style.js",[],[],"/home/samuel/dev/blackscreen/frontend/src/view/organisation.js",[],[],"/home/samuel/dev/blackscreen/frontend/src/view/asset.js",[],[],"/home/samuel/dev/blackscreen/frontend/src/view/component/index.js",[],[],"/home/samuel/dev/blackscreen/frontend/src/view/cli.js",[],[],"/home/samuel/dev/blackscreen/frontend/src/view/component/toolbar.js",["104","105"],[],"import Draggable from 'react-draggable'\n\n\nlet Toolbar = props => {\n\tlet offset = props.offset || {x:0, y:0}\n\n\tlet handleFocus = () => {\n\t}\n\n\treturn\t<Draggable defaultPosition={offset}>\n\t\t\t<div style={{\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'row',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'space-between',\n\t\t\tposition: 'absolute',\n\n\t\t\theight: props.height || '30px',\n\t\t\twidth: props.width || '60px',\n\n\t\t\tpadding: '2px',\n\n\t\t\tborder: 'solid black 1px',\n\t\t\tborderRadius: '2px',\n\n\t\t\tuserSelect: 'none',\n\t\t\tbackgroundColor: 'white'\n\t\t\t}}\n\t\t\ttabIndex = {props.tabIndex || 0}\n\t\t\tonFocus={handleFocus}\n\t\t\tonClick={e => e.stopPropagation()}>\n\t\t\t\t{props.children}\n\t\t\t</div>\n\t\t</Draggable>\n\n}\n\n\nlet Button = props => {\n\tlet handleClick = e => {\n\t\tprops.onClick && props.onClick()\n\t\te.stopPropagation()\n\t}\n\n\treturn <img\n\t\t\tstyle = {{\n\t\t\t\theight: props.height || '30px',\n\t\t\t\twidth: props.width || '30px',\n\t\t\t\tcursor: 'pointer'\n\t\t\t}}\n\t\t\tsrc = {props.icon}\n\t\t\tonClick = {e => handleClick(e) }\n\t\t/>\n}\n\nlet Icon = props => {\n\treturn <img\n\t\t\tstyle = {{\n\t\t\t\tpointerEvents: 'none',\n\t\t\t\theight: props.height || '30px',\n\t\t\t\twidth: props.width || '30px',\n\t\t\t}}\n\t\t\tsrc = {props.icon}\n\t\t/>\n}\n\n\nexport {\n\tToolbar,\n\tButton,\n\tIcon\n}\n","/home/samuel/dev/blackscreen/frontend/src/view/component/window.js",["106"],[],"import {useState} from 'react'\nimport Draggable from 'react-draggable'\n\nlet Holder = props => {\n\treturn <div style={{\n\t\t\t\theight: props.height,\n\t\t\t\twidth: props.width,\n\t\t\t\tcursor: 'move',\n\t\t\t\ttouchAction: 'none',\n\t\t\t\tbackgroundImage: `url(\"${props.icon}\")`,\n\t\t\t\tbackgroundRepeat: 'no-repeat',\n\t\t\t\tbackgroundColor: 'white',\n\t\t\t\tpointerEvents: 'none'\n\n\t\t\t}} />\n}\n\nlet Window = props => {\n\tlet offset = props.offset || {x:0, y:0}\n\n\tlet handleFocus = () => {\n\t\tprops.onFocused && props.onFocused()\n\t}\n\n\tlet handleDragging = e => {\n\t\tprops.onDragged && props.onDragged( {x: e.clientX - e.offsetX, y: e.clientY - e.offsetY} )\n\t}\n\n\tlet handleClick = e => {\n\t\te.stopPropagation()\n\t}\n\n\treturn\t<Draggable\n\t\t\tdefaultPosition={offset}\n\t\t\tonDrag = {handleDragging} >\n\t\t\t<div style={{\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'row',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t\tposition: 'absolute',\n\n\t\t\theight: props.height || '200px',\n\t\t\twidth: props.width || '400px',\n\n\t\t\tpadding: '2px',\n\n\t\t\tborder: 'solid black 1px',\n\t\t\tborderRadius: '2px',\n\n\t\t\tuserSelect: 'none',\n\t\t\tbackgroundColor: 'white'\n\t\t\t}}\n\n\t\t\ttabIndex={props.tabIndex || 0}\n\t\t\tonFocus={handleFocus}\n\t\t\tonClick={e => handleClick(e)}>\n\t\t\t\t<Holder\n\t\t\t\t\ticon={props.icon}\n\t\t\t\t\twidth={(props.grabber && props.grabber.width) || '60px'}\n\t\t\t\t\theight={props.height || '200px'} />\n\n\t\t\t\t{props.children}\n\t\t\t</div>\n\t\t</Draggable>\n\n}\n\nexport {\n\tWindow\n}\n","/home/samuel/dev/blackscreen/frontend/src/view/component/windowish.js",[],[],"/home/samuel/dev/blackscreen/frontend/src/view/component/dataview.js",[],[],"/home/samuel/dev/blackscreen/frontend/src/view/histogram.js",["107","108"],[],"import { Component } from \"react\"\n\nlet data = [...new Array(500)].map(() => 0)\n\nlet Content = props => {\n\tlet {Chart, event} = props\n\n\tconst style = {\n\t\tdisplay:'flex',\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tbackground: '#0C0C00',\n\n\t\tglass: {\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t\tjustifyContent: 'center',\n\t\t\theight: '92px',\n\t\t\twidth: '310px',\n\t\t\tposition: 'absolute',\n\t\t\tfontSize: '8px',\n\n\t\t\tline: {\n\t\t\t\tbackgroundColor: 'orange', \n\t\t\t\tborderWidth: 0, \n\t\t\t\theight: 1 ,\n\t\t\t\twidth: '310px'\n\t\t\t}\n\t\t}\n\t}\n\n\tdata.unshift(props.event.data)\n\tdata.pop()\n\n\treturn <div style={style} >\n\t\t\t<Chart width={500} height={100} data={[0,...data,0]} max={1000} />\n\t\t\t<div style={style.glass}>\n\t\t\t\t<label>500 miliseconds</label>\n\t\t\t\t<hr style={style.glass.line} />\n\t\t\t</div>\n\t\t</div>\n}\n\nconst Histogram = props => {\n\tlet {Component, event, asset, offset, onFocused, onDragged, onClose} = props\n\n\n\treturn <Component.Window\n\t\t\twidth={360} \n\t\t\theight={100}\n\t\t\toffset={offset}\n\t\t\tonFocused={onFocused}\n\t\t\tonDragged={onDragged}\n\t\t\ticon={asset.icon}>\n\t\t<Content Chart={Component.Lines} event={event} onClose={onClose} />\n</Component.Window>\n\n\n}\n\nexport default Histogram\n",{"ruleId":"109","severity":1,"message":"110","line":13,"column":14,"nodeType":"111","messageId":"112","endLine":13,"endColumn":22},{"ruleId":"109","severity":1,"message":"113","line":15,"column":6,"nodeType":"111","messageId":"112","endLine":15,"endColumn":16},{"ruleId":"114","severity":1,"message":"115","line":10,"column":2,"nodeType":"116","messageId":"117","endLine":13,"endColumn":3},{"ruleId":"109","severity":1,"message":"118","line":22,"column":3,"nodeType":"111","messageId":"112","endLine":22,"endColumn":8},{"ruleId":"109","severity":1,"message":"119","line":24,"column":3,"nodeType":"111","messageId":"112","endLine":24,"endColumn":8},{"ruleId":"109","severity":1,"message":"120","line":25,"column":3,"nodeType":"111","messageId":"112","endLine":25,"endColumn":11},{"ruleId":"121","severity":1,"message":"122","line":45,"column":9,"nodeType":"123","endLine":53,"endColumn":5},{"ruleId":"121","severity":1,"message":"122","line":57,"column":9,"nodeType":"123","endLine":64,"endColumn":5},{"ruleId":"109","severity":1,"message":"124","line":1,"column":9,"nodeType":"111","messageId":"112","endLine":1,"endColumn":17},{"ruleId":"109","severity":1,"message":"125","line":1,"column":10,"nodeType":"111","messageId":"112","endLine":1,"endColumn":19},{"ruleId":"109","severity":1,"message":"126","line":6,"column":14,"nodeType":"111","messageId":"112","endLine":6,"endColumn":19},"no-unused-vars","'setState' is assigned a value but never used.","Identifier","unusedVar","'handleMenu' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'state' is assigned a value but never used.","'style' is assigned a value but never used.","'onUpdate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Component' is defined but never used.","'event' is assigned a value but never used."]