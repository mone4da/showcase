{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport ContextNode from '../core/ContextNode.js';\nimport VarNode from '../core/VarNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport { PhysicalLightingModel } from '../functions/BSDFs.js';\nimport { Vector3 } from 'three';\nvar LightContextNode = /*#__PURE__*/function (_ContextNode) {\n  _inherits(LightContextNode, _ContextNode);\n  var _super = _createSuper(LightContextNode);\n  function LightContextNode(node) {\n    _classCallCheck(this, LightContextNode);\n    return _super.call(this, node);\n  }\n  _createClass(LightContextNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType() {\n      return 'vec3';\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var material = builder.material;\n      var lightingModel = null;\n      if (material.isMeshStandardMaterial === true) {\n        lightingModel = PhysicalLightingModel;\n      }\n      var directDiffuse = new VarNode(new UniformNode(new Vector3()), 'DirectDiffuse', 'vec3');\n      var directSpecular = new VarNode(new UniformNode(new Vector3()), 'DirectSpecular', 'vec3');\n      this.context.directDiffuse = directDiffuse;\n      this.context.directSpecular = directSpecular;\n      if (lightingModel !== null) {\n        this.context.lightingModel = lightingModel;\n      } // add code\n\n      var type = this.getNodeType(builder);\n      _get(_getPrototypeOf(LightContextNode.prototype), \"generate\", this).call(this, builder, type);\n      var totalLight = new OperatorNode('+', directDiffuse, directSpecular);\n      return totalLight.build(builder, type);\n    }\n  }]);\n  return LightContextNode;\n}(ContextNode);\nexport default LightContextNode;","map":{"version":3,"names":["ContextNode","VarNode","UniformNode","OperatorNode","PhysicalLightingModel","Vector3","LightContextNode","_ContextNode","_inherits","_super","_createSuper","node","_classCallCheck","call","_createClass","key","value","getNodeType","generate","builder","material","lightingModel","isMeshStandardMaterial","directDiffuse","directSpecular","context","type","_get","_getPrototypeOf","prototype","totalLight","build"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/nodes/lights/LightContextNode.js"],"sourcesContent":["import ContextNode from '../core/ContextNode.js';\nimport VarNode from '../core/VarNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport { PhysicalLightingModel } from '../functions/BSDFs.js';\nimport { Vector3 } from 'three';\n\nclass LightContextNode extends ContextNode {\n  constructor(node) {\n    super(node);\n  }\n\n  getNodeType() {\n    return 'vec3';\n  }\n\n  generate(builder) {\n    const material = builder.material;\n    let lightingModel = null;\n\n    if (material.isMeshStandardMaterial === true) {\n      lightingModel = PhysicalLightingModel;\n    }\n\n    const directDiffuse = new VarNode(new UniformNode(new Vector3()), 'DirectDiffuse', 'vec3');\n    const directSpecular = new VarNode(new UniformNode(new Vector3()), 'DirectSpecular', 'vec3');\n    this.context.directDiffuse = directDiffuse;\n    this.context.directSpecular = directSpecular;\n\n    if (lightingModel !== null) {\n      this.context.lightingModel = lightingModel;\n    } // add code\n\n\n    const type = this.getNodeType(builder);\n    super.generate(builder, type);\n    const totalLight = new OperatorNode('+', directDiffuse, directSpecular);\n    return totalLight.build(builder, type);\n  }\n\n}\n\nexport default LightContextNode;\n"],"mappings":";;;;;;AAAA,OAAOA,WAAW,MAAM,wBAAwB;AAChD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,YAAY,MAAM,yBAAyB;AAClD,SAASC,qBAAqB,QAAQ,uBAAuB;AAC7D,SAASC,OAAO,QAAQ,OAAO;AAAC,IAE1BC,gBAAgB,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,gBAAA;EACpB,SAAAA,iBAAYK,IAAI,EAAE;IAAAC,eAAA,OAAAN,gBAAA;IAAA,OAAAG,MAAA,CAAAI,IAAA,OACVF,IAAI;EACZ;EAACG,YAAA,CAAAR,gBAAA;IAAAS,GAAA;IAAAC,KAAA,EAED,SAAAC,YAAA,EAAc;MACZ,OAAO,MAAM;IACf;EAAC;IAAAF,GAAA;IAAAC,KAAA,EAED,SAAAE,SAASC,OAAO,EAAE;MAChB,IAAMC,QAAQ,GAAGD,OAAO,CAACC,QAAQ;MACjC,IAAIC,aAAa,GAAG,IAAI;MAExB,IAAID,QAAQ,CAACE,sBAAsB,KAAK,IAAI,EAAE;QAC5CD,aAAa,GAAGjB,qBAAqB;MACvC;MAEA,IAAMmB,aAAa,GAAG,IAAItB,OAAO,CAAC,IAAIC,WAAW,CAAC,IAAIG,OAAO,EAAE,CAAC,EAAE,eAAe,EAAE,MAAM,CAAC;MAC1F,IAAMmB,cAAc,GAAG,IAAIvB,OAAO,CAAC,IAAIC,WAAW,CAAC,IAAIG,OAAO,EAAE,CAAC,EAAE,gBAAgB,EAAE,MAAM,CAAC;MAC5F,IAAI,CAACoB,OAAO,CAACF,aAAa,GAAGA,aAAa;MAC1C,IAAI,CAACE,OAAO,CAACD,cAAc,GAAGA,cAAc;MAE5C,IAAIH,aAAa,KAAK,IAAI,EAAE;QAC1B,IAAI,CAACI,OAAO,CAACJ,aAAa,GAAGA,aAAa;MAC5C,CAAC,CAAC;;MAGF,IAAMK,IAAI,GAAG,IAAI,CAACT,WAAW,CAACE,OAAO,CAAC;MACtCQ,IAAA,CAAAC,eAAA,CAAAtB,gBAAA,CAAAuB,SAAA,qBAAAhB,IAAA,OAAeM,OAAO,EAAEO,IAAI;MAC5B,IAAMI,UAAU,GAAG,IAAI3B,YAAY,CAAC,GAAG,EAAEoB,aAAa,EAAEC,cAAc,CAAC;MACvE,OAAOM,UAAU,CAACC,KAAK,CAACZ,OAAO,EAAEO,IAAI,CAAC;IACxC;EAAC;EAAA,OAAApB,gBAAA;AAAA,EA/B4BN,WAAW;AAmC1C,eAAeM,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}