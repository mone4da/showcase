{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport VaryNode from '../core/VaryNode.js';\nimport ModelNode from './ModelNode.js';\nimport CameraNode from './CameraNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\nvar NormalNode = /*#__PURE__*/function (_Node) {\n  _inherits(NormalNode, _Node);\n  var _super = _createSuper(NormalNode);\n  function NormalNode() {\n    var _this;\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NormalNode.LOCAL;\n    _classCallCheck(this, NormalNode);\n    _this = _super.call(this, 'vec3');\n    _this.scope = scope;\n    return _this;\n  }\n  _createClass(NormalNode, [{\n    key: \"getHash\",\n    value: function getHash() {\n      return \"normal-\".concat(this.scope);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var scope = this.scope;\n      var outputNode = null;\n      if (scope === NormalNode.GEOMETRY) {\n        outputNode = new AttributeNode('normal', 'vec3');\n      } else if (scope === NormalNode.LOCAL) {\n        outputNode = new VaryNode(new NormalNode(NormalNode.GEOMETRY));\n      } else if (scope === NormalNode.VIEW) {\n        var vertexNormalNode = new OperatorNode('*', new ModelNode(ModelNode.NORMAL_MATRIX), new NormalNode(NormalNode.LOCAL));\n        outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n      } else if (scope === NormalNode.WORLD) {\n        // To use INVERSE_TRANSFORM_DIRECTION only inverse the param order like this: MathNode( ..., Vector, Matrix );\n        var _vertexNormalNode = new MathNode(MathNode.TRANSFORM_DIRECTION, new NormalNode(NormalNode.VIEW), new CameraNode(CameraNode.VIEW_MATRIX));\n        outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(_vertexNormalNode));\n      }\n      return outputNode.build(builder);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(NormalNode.prototype), \"serialize\", this).call(this, data);\n      data.scope = this.scope;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(NormalNode.prototype), \"deserialize\", this).call(this, data);\n      this.scope = data.scope;\n    }\n  }]);\n  return NormalNode;\n}(Node);\n_defineProperty(NormalNode, \"GEOMETRY\", 'geometry');\n_defineProperty(NormalNode, \"LOCAL\", 'local');\n_defineProperty(NormalNode, \"WORLD\", 'world');\n_defineProperty(NormalNode, \"VIEW\", 'view');\nexport default NormalNode;","map":{"version":3,"names":["_defineProperty","Node","AttributeNode","VaryNode","ModelNode","CameraNode","OperatorNode","MathNode","NormalNode","_Node","_inherits","_super","_createSuper","_this","scope","arguments","length","undefined","LOCAL","_classCallCheck","call","_createClass","key","value","getHash","concat","generate","builder","outputNode","GEOMETRY","VIEW","vertexNormalNode","NORMAL_MATRIX","NORMALIZE","WORLD","TRANSFORM_DIRECTION","VIEW_MATRIX","build","serialize","data","_get","_getPrototypeOf","prototype","deserialize"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/nodes/accessors/NormalNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport VaryNode from '../core/VaryNode.js';\nimport ModelNode from './ModelNode.js';\nimport CameraNode from './CameraNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\n\nclass NormalNode extends Node {\n  constructor(scope = NormalNode.LOCAL) {\n    super('vec3');\n    this.scope = scope;\n  }\n\n  getHash() {\n    return `normal-${this.scope}`;\n  }\n\n  generate(builder) {\n    const scope = this.scope;\n    let outputNode = null;\n\n    if (scope === NormalNode.GEOMETRY) {\n      outputNode = new AttributeNode('normal', 'vec3');\n    } else if (scope === NormalNode.LOCAL) {\n      outputNode = new VaryNode(new NormalNode(NormalNode.GEOMETRY));\n    } else if (scope === NormalNode.VIEW) {\n      const vertexNormalNode = new OperatorNode('*', new ModelNode(ModelNode.NORMAL_MATRIX), new NormalNode(NormalNode.LOCAL));\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n    } else if (scope === NormalNode.WORLD) {\n      // To use INVERSE_TRANSFORM_DIRECTION only inverse the param order like this: MathNode( ..., Vector, Matrix );\n      const vertexNormalNode = new MathNode(MathNode.TRANSFORM_DIRECTION, new NormalNode(NormalNode.VIEW), new CameraNode(CameraNode.VIEW_MATRIX));\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n    }\n\n    return outputNode.build(builder);\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n\n}\n\n_defineProperty(NormalNode, \"GEOMETRY\", 'geometry');\n\n_defineProperty(NormalNode, \"LOCAL\", 'local');\n\n_defineProperty(NormalNode, \"WORLD\", 'world');\n\n_defineProperty(NormalNode, \"VIEW\", 'view');\n\nexport default NormalNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}