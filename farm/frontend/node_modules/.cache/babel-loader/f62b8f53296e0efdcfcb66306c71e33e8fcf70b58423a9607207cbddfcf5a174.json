{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MaterialReferenceNode from './MaterialReferenceNode.js';\nvar MaterialNode = /*#__PURE__*/function (_Node) {\n  _inherits(MaterialNode, _Node);\n  var _super = _createSuper(MaterialNode);\n  function MaterialNode() {\n    var _this;\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : MaterialNode.COLOR;\n    _classCallCheck(this, MaterialNode);\n    _this = _super.call(this);\n    _this.scope = scope;\n    return _this;\n  }\n  _createClass(MaterialNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      var scope = this.scope;\n      var material = builder.context.material;\n      if (scope === MaterialNode.COLOR) {\n        return material.map !== null ? 'vec4' : 'vec3';\n      } else if (scope === MaterialNode.OPACITY) {\n        return 'float';\n      } else if (scope === MaterialNode.SPECULAR) {\n        return 'vec3';\n      } else if (scope === MaterialNode.ROUGHNESS || scope === MaterialNode.METALNESS) {\n        return 'float';\n      }\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var material = builder.context.material;\n      var scope = this.scope;\n      var node = null;\n      if (scope === MaterialNode.ALPHA_TEST) {\n        node = new MaterialReferenceNode('alphaTest', 'float');\n      } else if (scope === MaterialNode.COLOR) {\n        var colorNode = new MaterialReferenceNode('color', 'color');\n        if (material.map !== null && material.map !== undefined && material.map.isTexture === true) {\n          node = new OperatorNode('*', colorNode, new MaterialReferenceNode('map', 'texture'));\n        } else {\n          node = colorNode;\n        }\n      } else if (scope === MaterialNode.OPACITY) {\n        var opacityNode = new MaterialReferenceNode('opacity', 'float');\n        if (material.alphaMap !== null && material.alphaMap !== undefined && material.alphaMap.isTexture === true) {\n          node = new OperatorNode('*', opacityNode, new MaterialReferenceNode('alphaMap', 'texture'));\n        } else {\n          node = opacityNode;\n        }\n      } else if (scope === MaterialNode.SPECULAR) {\n        var specularColorNode = new MaterialReferenceNode('specularColor', 'color');\n        if (material.specularColorMap !== null && material.specularColorMap !== undefined && material.specularColorMap.isTexture === true) {\n          node = new OperatorNode('*', specularColorNode, new MaterialReferenceNode('specularColorMap', 'texture'));\n        } else {\n          node = specularColorNode;\n        }\n      } else {\n        var outputType = this.getNodeType(builder);\n        node = new MaterialReferenceNode(scope, outputType);\n      }\n      return node.build(builder, output);\n    }\n  }]);\n  return MaterialNode;\n}(Node);\n_defineProperty(MaterialNode, \"ALPHA_TEST\", 'alphaTest');\n_defineProperty(MaterialNode, \"COLOR\", 'color');\n_defineProperty(MaterialNode, \"OPACITY\", 'opacity');\n_defineProperty(MaterialNode, \"SPECULAR\", 'specular');\n_defineProperty(MaterialNode, \"ROUGHNESS\", 'roughness');\n_defineProperty(MaterialNode, \"METALNESS\", 'metalness');\nexport default MaterialNode;","map":{"version":3,"names":["_defineProperty","Node","OperatorNode","MaterialReferenceNode","MaterialNode","_Node","_inherits","_super","_createSuper","_this","scope","arguments","length","undefined","COLOR","_classCallCheck","call","_createClass","key","value","getNodeType","builder","material","context","map","OPACITY","SPECULAR","ROUGHNESS","METALNESS","generate","output","node","ALPHA_TEST","colorNode","isTexture","opacityNode","alphaMap","specularColorNode","specularColorMap","outputType","build"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/nodes/accessors/MaterialNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MaterialReferenceNode from './MaterialReferenceNode.js';\n\nclass MaterialNode extends Node {\n  constructor(scope = MaterialNode.COLOR) {\n    super();\n    this.scope = scope;\n  }\n\n  getNodeType(builder) {\n    const scope = this.scope;\n    const material = builder.context.material;\n\n    if (scope === MaterialNode.COLOR) {\n      return material.map !== null ? 'vec4' : 'vec3';\n    } else if (scope === MaterialNode.OPACITY) {\n      return 'float';\n    } else if (scope === MaterialNode.SPECULAR) {\n      return 'vec3';\n    } else if (scope === MaterialNode.ROUGHNESS || scope === MaterialNode.METALNESS) {\n      return 'float';\n    }\n  }\n\n  generate(builder, output) {\n    const material = builder.context.material;\n    const scope = this.scope;\n    let node = null;\n\n    if (scope === MaterialNode.ALPHA_TEST) {\n      node = new MaterialReferenceNode('alphaTest', 'float');\n    } else if (scope === MaterialNode.COLOR) {\n      const colorNode = new MaterialReferenceNode('color', 'color');\n\n      if (material.map !== null && material.map !== undefined && material.map.isTexture === true) {\n        node = new OperatorNode('*', colorNode, new MaterialReferenceNode('map', 'texture'));\n      } else {\n        node = colorNode;\n      }\n    } else if (scope === MaterialNode.OPACITY) {\n      const opacityNode = new MaterialReferenceNode('opacity', 'float');\n\n      if (material.alphaMap !== null && material.alphaMap !== undefined && material.alphaMap.isTexture === true) {\n        node = new OperatorNode('*', opacityNode, new MaterialReferenceNode('alphaMap', 'texture'));\n      } else {\n        node = opacityNode;\n      }\n    } else if (scope === MaterialNode.SPECULAR) {\n      const specularColorNode = new MaterialReferenceNode('specularColor', 'color');\n\n      if (material.specularColorMap !== null && material.specularColorMap !== undefined && material.specularColorMap.isTexture === true) {\n        node = new OperatorNode('*', specularColorNode, new MaterialReferenceNode('specularColorMap', 'texture'));\n      } else {\n        node = specularColorNode;\n      }\n    } else {\n      const outputType = this.getNodeType(builder);\n      node = new MaterialReferenceNode(scope, outputType);\n    }\n\n    return node.build(builder, output);\n  }\n\n}\n\n_defineProperty(MaterialNode, \"ALPHA_TEST\", 'alphaTest');\n\n_defineProperty(MaterialNode, \"COLOR\", 'color');\n\n_defineProperty(MaterialNode, \"OPACITY\", 'opacity');\n\n_defineProperty(MaterialNode, \"SPECULAR\", 'specular');\n\n_defineProperty(MaterialNode, \"ROUGHNESS\", 'roughness');\n\n_defineProperty(MaterialNode, \"METALNESS\", 'metalness');\n\nexport default MaterialNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}