{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport TempNode from '../core/TempNode.js';\nimport ExpressionNode from '../core/ExpressionNode.js';\nimport JoinNode from '../utils/JoinNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport OperatorNode from './OperatorNode.js';\nvar MathNode = /*#__PURE__*/function (_TempNode) {\n  _inherits(MathNode, _TempNode);\n  var _super = _createSuper(MathNode);\n  // 1 input\n  // 2 inputs\n  // 3 inputs\n  function MathNode(method, aNode) {\n    var _this;\n    var bNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var cNode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    _classCallCheck(this, MathNode);\n    _this = _super.call(this);\n    _this.method = method;\n    _this.aNode = aNode;\n    _this.bNode = bNode;\n    _this.cNode = cNode;\n    return _this;\n  }\n  _createClass(MathNode, [{\n    key: \"getInputType\",\n    value: function getInputType(builder) {\n      var aType = this.aNode.getNodeType(builder);\n      var bType = this.bNode ? this.bNode.getNodeType(builder) : null;\n      var cType = this.cNode ? this.cNode.getNodeType(builder) : null;\n      var aLen = builder.getTypeLength(aType);\n      var bLen = builder.getTypeLength(bType);\n      var cLen = builder.getTypeLength(cType);\n      if (aLen > bLen && aLen > cLen) {\n        return aType;\n      } else if (bLen > cLen) {\n        return bType;\n      } else if (cLen > aLen) {\n        return cType;\n      }\n      return aType;\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      var method = this.method;\n      if (method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT) {\n        return 'float';\n      } else if (method === MathNode.CROSS) {\n        return 'vec3';\n      } else {\n        return this.getInputType(builder);\n      }\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var method = this.method;\n      var type = this.getNodeType(builder);\n      var inputType = this.getInputType(builder);\n      var a = this.aNode;\n      var b = this.bNode;\n      var c = this.cNode;\n      var isWebGL = builder.renderer.isWebGLRenderer === true;\n      if (isWebGL && (method === MathNode.DFDX || method === MathNode.DFDY) && output === 'vec3') {\n        // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n        return new JoinNode([new MathNode(method, new SplitNode(a, 'x')), new MathNode(method, new SplitNode(a, 'y')), new MathNode(method, new SplitNode(a, 'z'))]).build(builder);\n      } else if (method === MathNode.TRANSFORM_DIRECTION) {\n        // dir can be either a direction vector or a normal vector\n        // upper-left 3x3 of matrix is assumed to be orthogonal\n        var tA = a;\n        var tB = b;\n        if (builder.isMatrix(tA.getNodeType(builder))) {\n          tB = new ExpressionNode(\"\".concat(builder.getType('vec4'), \"( \").concat(tB.build(builder, 'vec3'), \", 0.0 )\"), 'vec4');\n        } else {\n          tA = new ExpressionNode(\"\".concat(builder.getType('vec4'), \"( \").concat(tA.build(builder, 'vec3'), \", 0.0 )\"), 'vec4');\n        }\n        var mulNode = new SplitNode(new OperatorNode('*', tA, tB), 'xyz');\n        return new MathNode(MathNode.NORMALIZE, mulNode).build(builder);\n      } else if (method === MathNode.SATURATE) {\n        return builder.format(\"clamp( \".concat(a.build(builder, inputType), \", 0.0, 1.0 )\"), type, output);\n      } else if (method === MathNode.NEGATE) {\n        return builder.format('( -' + a.build(builder, inputType) + ' )', type, output);\n      } else if (method === MathNode.INVERT) {\n        return builder.format('( 1.0 - ' + a.build(builder, inputType) + ' )', type, output);\n      } else {\n        var params = [];\n        if (method === MathNode.CROSS) {\n          params.push(a.build(builder, type), b.build(builder, type));\n        } else if (method === MathNode.STEP) {\n          params.push(a.build(builder, builder.getTypeLength(a.getNodeType(builder)) === 1 ? 'float' : inputType), b.build(builder, inputType));\n        } else if (isWebGL && (method === MathNode.MIN || method === MathNode.MAX) || method === MathNode.MOD) {\n          params.push(a.build(builder, inputType), b.build(builder, builder.getTypeLength(b.getNodeType(builder)) === 1 ? 'float' : inputType));\n        } else if (method === MathNode.REFRACT) {\n          params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, 'float'));\n        } else if (method === MathNode.MIX) {\n          params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, builder.getTypeLength(c.getNodeType(builder)) === 1 ? 'float' : inputType));\n        } else {\n          params.push(a.build(builder, inputType));\n          if (c !== null) {\n            params.push(b.build(builder, inputType), c.build(builder, inputType));\n          } else if (b !== null) {\n            params.push(b.build(builder, inputType));\n          }\n        }\n        return builder.format(\"\".concat(builder.getMethod(method), \"( \").concat(params.join(', '), \" )\"), type, output);\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(MathNode.prototype), \"serialize\", this).call(this, data);\n      data.method = this.method;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(MathNode.prototype), \"deserialize\", this).call(this, data);\n      this.method = data.method;\n    }\n  }]);\n  return MathNode;\n}(TempNode);\n_defineProperty(MathNode, \"RAD\", 'radians');\n_defineProperty(MathNode, \"DEG\", 'degrees');\n_defineProperty(MathNode, \"EXP\", 'exp');\n_defineProperty(MathNode, \"EXP2\", 'exp2');\n_defineProperty(MathNode, \"LOG\", 'log');\n_defineProperty(MathNode, \"LOG2\", 'log2');\n_defineProperty(MathNode, \"SQRT\", 'sqrt');\n_defineProperty(MathNode, \"INV_SQRT\", 'inversesqrt');\n_defineProperty(MathNode, \"FLOOR\", 'floor');\n_defineProperty(MathNode, \"CEIL\", 'ceil');\n_defineProperty(MathNode, \"NORMALIZE\", 'normalize');\n_defineProperty(MathNode, \"FRACT\", 'fract');\n_defineProperty(MathNode, \"SIN\", 'sin');\n_defineProperty(MathNode, \"COS\", 'cos');\n_defineProperty(MathNode, \"TAN\", 'tan');\n_defineProperty(MathNode, \"ASIN\", 'asin');\n_defineProperty(MathNode, \"ACOS\", 'acos');\n_defineProperty(MathNode, \"ATAN\", 'atan');\n_defineProperty(MathNode, \"ABS\", 'abs');\n_defineProperty(MathNode, \"SIGN\", 'sign');\n_defineProperty(MathNode, \"LENGTH\", 'length');\n_defineProperty(MathNode, \"NEGATE\", 'negate');\n_defineProperty(MathNode, \"INVERT\", 'invert');\n_defineProperty(MathNode, \"DFDX\", 'dFdx');\n_defineProperty(MathNode, \"DFDY\", 'dFdy');\n_defineProperty(MathNode, \"SATURATE\", 'saturate');\n_defineProperty(MathNode, \"ROUND\", 'round');\n_defineProperty(MathNode, \"MIN\", 'min');\n_defineProperty(MathNode, \"MAX\", 'max');\n_defineProperty(MathNode, \"MOD\", 'mod');\n_defineProperty(MathNode, \"STEP\", 'step');\n_defineProperty(MathNode, \"REFLECT\", 'reflect');\n_defineProperty(MathNode, \"DISTANCE\", 'distance');\n_defineProperty(MathNode, \"DOT\", 'dot');\n_defineProperty(MathNode, \"CROSS\", 'cross');\n_defineProperty(MathNode, \"POW\", 'pow');\n_defineProperty(MathNode, \"TRANSFORM_DIRECTION\", 'transformDirection');\n_defineProperty(MathNode, \"MIX\", 'mix');\n_defineProperty(MathNode, \"CLAMP\", 'clamp');\n_defineProperty(MathNode, \"REFRACT\", 'refract');\n_defineProperty(MathNode, \"SMOOTHSTEP\", 'smoothstep');\n_defineProperty(MathNode, \"FACEFORWARD\", 'faceforward');\nexport default MathNode;","map":{"version":3,"names":["_defineProperty","TempNode","ExpressionNode","JoinNode","SplitNode","OperatorNode","MathNode","_TempNode","_inherits","_super","_createSuper","method","aNode","_this","bNode","arguments","length","undefined","cNode","_classCallCheck","call","_createClass","key","value","getInputType","builder","aType","getNodeType","bType","cType","aLen","getTypeLength","bLen","cLen","LENGTH","DISTANCE","DOT","CROSS","generate","output","type","inputType","a","b","c","isWebGL","renderer","isWebGLRenderer","DFDX","DFDY","build","TRANSFORM_DIRECTION","tA","tB","isMatrix","concat","getType","mulNode","NORMALIZE","SATURATE","format","NEGATE","INVERT","params","push","STEP","MIN","MAX","MOD","REFRACT","MIX","getMethod","join","serialize","data","_get","_getPrototypeOf","prototype","deserialize"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/nodes/math/MathNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport TempNode from '../core/TempNode.js';\nimport ExpressionNode from '../core/ExpressionNode.js';\nimport JoinNode from '../utils/JoinNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport OperatorNode from './OperatorNode.js';\n\nclass MathNode extends TempNode {\n  // 1 input\n  // 2 inputs\n  // 3 inputs\n  constructor(method, aNode, bNode = null, cNode = null) {\n    super();\n    this.method = method;\n    this.aNode = aNode;\n    this.bNode = bNode;\n    this.cNode = cNode;\n  }\n\n  getInputType(builder) {\n    const aType = this.aNode.getNodeType(builder);\n    const bType = this.bNode ? this.bNode.getNodeType(builder) : null;\n    const cType = this.cNode ? this.cNode.getNodeType(builder) : null;\n    const aLen = builder.getTypeLength(aType);\n    const bLen = builder.getTypeLength(bType);\n    const cLen = builder.getTypeLength(cType);\n\n    if (aLen > bLen && aLen > cLen) {\n      return aType;\n    } else if (bLen > cLen) {\n      return bType;\n    } else if (cLen > aLen) {\n      return cType;\n    }\n\n    return aType;\n  }\n\n  getNodeType(builder) {\n    const method = this.method;\n\n    if (method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT) {\n      return 'float';\n    } else if (method === MathNode.CROSS) {\n      return 'vec3';\n    } else {\n      return this.getInputType(builder);\n    }\n  }\n\n  generate(builder, output) {\n    const method = this.method;\n    const type = this.getNodeType(builder);\n    const inputType = this.getInputType(builder);\n    const a = this.aNode;\n    const b = this.bNode;\n    const c = this.cNode;\n    const isWebGL = builder.renderer.isWebGLRenderer === true;\n\n    if (isWebGL && (method === MathNode.DFDX || method === MathNode.DFDY) && output === 'vec3') {\n      // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n      return new JoinNode([new MathNode(method, new SplitNode(a, 'x')), new MathNode(method, new SplitNode(a, 'y')), new MathNode(method, new SplitNode(a, 'z'))]).build(builder);\n    } else if (method === MathNode.TRANSFORM_DIRECTION) {\n      // dir can be either a direction vector or a normal vector\n      // upper-left 3x3 of matrix is assumed to be orthogonal\n      let tA = a;\n      let tB = b;\n\n      if (builder.isMatrix(tA.getNodeType(builder))) {\n        tB = new ExpressionNode(`${builder.getType('vec4')}( ${tB.build(builder, 'vec3')}, 0.0 )`, 'vec4');\n      } else {\n        tA = new ExpressionNode(`${builder.getType('vec4')}( ${tA.build(builder, 'vec3')}, 0.0 )`, 'vec4');\n      }\n\n      const mulNode = new SplitNode(new OperatorNode('*', tA, tB), 'xyz');\n      return new MathNode(MathNode.NORMALIZE, mulNode).build(builder);\n    } else if (method === MathNode.SATURATE) {\n      return builder.format(`clamp( ${a.build(builder, inputType)}, 0.0, 1.0 )`, type, output);\n    } else if (method === MathNode.NEGATE) {\n      return builder.format('( -' + a.build(builder, inputType) + ' )', type, output);\n    } else if (method === MathNode.INVERT) {\n      return builder.format('( 1.0 - ' + a.build(builder, inputType) + ' )', type, output);\n    } else {\n      const params = [];\n\n      if (method === MathNode.CROSS) {\n        params.push(a.build(builder, type), b.build(builder, type));\n      } else if (method === MathNode.STEP) {\n        params.push(a.build(builder, builder.getTypeLength(a.getNodeType(builder)) === 1 ? 'float' : inputType), b.build(builder, inputType));\n      } else if (isWebGL && (method === MathNode.MIN || method === MathNode.MAX) || method === MathNode.MOD) {\n        params.push(a.build(builder, inputType), b.build(builder, builder.getTypeLength(b.getNodeType(builder)) === 1 ? 'float' : inputType));\n      } else if (method === MathNode.REFRACT) {\n        params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, 'float'));\n      } else if (method === MathNode.MIX) {\n        params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, builder.getTypeLength(c.getNodeType(builder)) === 1 ? 'float' : inputType));\n      } else {\n        params.push(a.build(builder, inputType));\n\n        if (c !== null) {\n          params.push(b.build(builder, inputType), c.build(builder, inputType));\n        } else if (b !== null) {\n          params.push(b.build(builder, inputType));\n        }\n      }\n\n      return builder.format(`${builder.getMethod(method)}( ${params.join(', ')} )`, type, output);\n    }\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.method = this.method;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.method = data.method;\n  }\n\n}\n\n_defineProperty(MathNode, \"RAD\", 'radians');\n\n_defineProperty(MathNode, \"DEG\", 'degrees');\n\n_defineProperty(MathNode, \"EXP\", 'exp');\n\n_defineProperty(MathNode, \"EXP2\", 'exp2');\n\n_defineProperty(MathNode, \"LOG\", 'log');\n\n_defineProperty(MathNode, \"LOG2\", 'log2');\n\n_defineProperty(MathNode, \"SQRT\", 'sqrt');\n\n_defineProperty(MathNode, \"INV_SQRT\", 'inversesqrt');\n\n_defineProperty(MathNode, \"FLOOR\", 'floor');\n\n_defineProperty(MathNode, \"CEIL\", 'ceil');\n\n_defineProperty(MathNode, \"NORMALIZE\", 'normalize');\n\n_defineProperty(MathNode, \"FRACT\", 'fract');\n\n_defineProperty(MathNode, \"SIN\", 'sin');\n\n_defineProperty(MathNode, \"COS\", 'cos');\n\n_defineProperty(MathNode, \"TAN\", 'tan');\n\n_defineProperty(MathNode, \"ASIN\", 'asin');\n\n_defineProperty(MathNode, \"ACOS\", 'acos');\n\n_defineProperty(MathNode, \"ATAN\", 'atan');\n\n_defineProperty(MathNode, \"ABS\", 'abs');\n\n_defineProperty(MathNode, \"SIGN\", 'sign');\n\n_defineProperty(MathNode, \"LENGTH\", 'length');\n\n_defineProperty(MathNode, \"NEGATE\", 'negate');\n\n_defineProperty(MathNode, \"INVERT\", 'invert');\n\n_defineProperty(MathNode, \"DFDX\", 'dFdx');\n\n_defineProperty(MathNode, \"DFDY\", 'dFdy');\n\n_defineProperty(MathNode, \"SATURATE\", 'saturate');\n\n_defineProperty(MathNode, \"ROUND\", 'round');\n\n_defineProperty(MathNode, \"MIN\", 'min');\n\n_defineProperty(MathNode, \"MAX\", 'max');\n\n_defineProperty(MathNode, \"MOD\", 'mod');\n\n_defineProperty(MathNode, \"STEP\", 'step');\n\n_defineProperty(MathNode, \"REFLECT\", 'reflect');\n\n_defineProperty(MathNode, \"DISTANCE\", 'distance');\n\n_defineProperty(MathNode, \"DOT\", 'dot');\n\n_defineProperty(MathNode, \"CROSS\", 'cross');\n\n_defineProperty(MathNode, \"POW\", 'pow');\n\n_defineProperty(MathNode, \"TRANSFORM_DIRECTION\", 'transformDirection');\n\n_defineProperty(MathNode, \"MIX\", 'mix');\n\n_defineProperty(MathNode, \"CLAMP\", 'clamp');\n\n_defineProperty(MathNode, \"REFRACT\", 'refract');\n\n_defineProperty(MathNode, \"SMOOTHSTEP\", 'smoothstep');\n\n_defineProperty(MathNode, \"FACEFORWARD\", 'faceforward');\n\nexport default MathNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}