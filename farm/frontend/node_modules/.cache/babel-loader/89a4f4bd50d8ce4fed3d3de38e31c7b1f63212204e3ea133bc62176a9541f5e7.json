{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node from '../core/Node.js';\nimport { ShaderNode, mul, floor, mod, add, sign, uv } from '../ShaderNode.js';\nvar checkerShaderNode = new ShaderNode(function (inputs) {\n  var uv = mul(inputs.uv, 2.0);\n  var cx = floor(uv.x);\n  var cy = floor(uv.y);\n  var result = mod(add(cx, cy), 2.0);\n  return sign(result);\n});\nvar CheckerNode = /*#__PURE__*/function (_Node) {\n  _inherits(CheckerNode, _Node);\n  var _super = _createSuper(CheckerNode);\n  function CheckerNode() {\n    var _this;\n    var uvNode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : uv();\n    _classCallCheck(this, CheckerNode);\n    _this = _super.call(this, 'float');\n    _this.uvNode = uvNode;\n    return _this;\n  }\n  _createClass(CheckerNode, [{\n    key: \"generate\",\n    value: function generate(builder) {\n      return checkerShaderNode({\n        uv: this.uvNode\n      }).build(builder);\n    }\n  }]);\n  return CheckerNode;\n}(Node);\nexport default CheckerNode;","map":{"version":3,"names":["Node","ShaderNode","mul","floor","mod","add","sign","uv","checkerShaderNode","inputs","cx","x","cy","y","result","CheckerNode","_Node","_inherits","_super","_createSuper","_this","uvNode","arguments","length","undefined","_classCallCheck","call","_createClass","key","value","generate","builder","build"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/nodes/procedural/CheckerNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport { ShaderNode, mul, floor, mod, add, sign, uv } from '../ShaderNode.js';\n\nconst checkerShaderNode = new ShaderNode(inputs => {\n  const uv = mul(inputs.uv, 2.0);\n  const cx = floor(uv.x);\n  const cy = floor(uv.y);\n  const result = mod(add(cx, cy), 2.0);\n  return sign(result);\n});\n\nclass CheckerNode extends Node {\n  constructor(uvNode = uv()) {\n    super('float');\n    this.uvNode = uvNode;\n  }\n\n  generate(builder) {\n    return checkerShaderNode({\n      uv: this.uvNode\n    }).build(builder);\n  }\n\n}\n\nexport default CheckerNode;\n"],"mappings":";;;;AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAClC,SAASC,UAAU,EAAEC,GAAG,EAAEC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,EAAE,QAAQ,kBAAkB;AAE7E,IAAMC,iBAAiB,GAAG,IAAIP,UAAU,CAAC,UAAAQ,MAAM,EAAI;EACjD,IAAMF,EAAE,GAAGL,GAAG,CAACO,MAAM,CAACF,EAAE,EAAE,GAAG,CAAC;EAC9B,IAAMG,EAAE,GAAGP,KAAK,CAACI,EAAE,CAACI,CAAC,CAAC;EACtB,IAAMC,EAAE,GAAGT,KAAK,CAACI,EAAE,CAACM,CAAC,CAAC;EACtB,IAAMC,MAAM,GAAGV,GAAG,CAACC,GAAG,CAACK,EAAE,EAAEE,EAAE,CAAC,EAAE,GAAG,CAAC;EACpC,OAAON,IAAI,CAACQ,MAAM,CAAC;AACrB,CAAC,CAAC;AAAC,IAEGC,WAAW,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,WAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,WAAA;EACf,SAAAA,YAAA,EAA2B;IAAA,IAAAK,KAAA;IAAA,IAAfC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGf,EAAE,EAAE;IAAAkB,eAAA,OAAAV,WAAA;IACvBK,KAAA,GAAAF,MAAA,CAAAQ,IAAA,OAAM,OAAO;IACbN,KAAA,CAAKC,MAAM,GAAGA,MAAM;IAAC,OAAAD,KAAA;EACvB;EAACO,YAAA,CAAAZ,WAAA;IAAAa,GAAA;IAAAC,KAAA,EAED,SAAAC,SAASC,OAAO,EAAE;MAChB,OAAOvB,iBAAiB,CAAC;QACvBD,EAAE,EAAE,IAAI,CAACc;MACX,CAAC,CAAC,CAACW,KAAK,CAACD,OAAO,CAAC;IACnB;EAAC;EAAA,OAAAhB,WAAA;AAAA,EAVuBf,IAAI;AAc9B,eAAee,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}