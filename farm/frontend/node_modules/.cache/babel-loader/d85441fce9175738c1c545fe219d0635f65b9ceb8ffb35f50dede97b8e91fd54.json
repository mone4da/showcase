{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Frustum, Vector3 } from 'three';\n\n/**\n * This is a class to check whether objects are in a selection area in 3D space\n */\n\nvar SelectionBox = function () {\n  var frustum = new Frustum();\n  var center = new Vector3();\n  var tmpPoint = new Vector3();\n  var vecNear = new Vector3();\n  var vecTopLeft = new Vector3();\n  var vecTopRight = new Vector3();\n  var vecDownRight = new Vector3();\n  var vecDownLeft = new Vector3();\n  var vecFarTopLeft = new Vector3();\n  var vecFarTopRight = new Vector3();\n  var vecFarDownRight = new Vector3();\n  var vecFarDownLeft = new Vector3();\n  var vectemp1 = new Vector3();\n  var vectemp2 = new Vector3();\n  var vectemp3 = new Vector3();\n  var SelectionBox = /*#__PURE__*/function () {\n    function SelectionBox(camera, scene, deep) {\n      _classCallCheck(this, SelectionBox);\n      this.camera = camera;\n      this.scene = scene;\n      this.startPoint = new Vector3();\n      this.endPoint = new Vector3();\n      this.collection = [];\n      this.deep = deep || Number.MAX_VALUE;\n    }\n    _createClass(SelectionBox, [{\n      key: \"select\",\n      value: function select(startPoint, endPoint) {\n        this.startPoint = startPoint || this.startPoint;\n        this.endPoint = endPoint || this.endPoint;\n        this.collection = [];\n        this.updateFrustum(this.startPoint, this.endPoint);\n        this.searchChildInFrustum(frustum, this.scene);\n        return this.collection;\n      }\n    }, {\n      key: \"updateFrustum\",\n      value: function updateFrustum(startPoint, endPoint) {\n        startPoint = startPoint || this.startPoint;\n        endPoint = endPoint || this.endPoint; // Avoid invalid frustum\n\n        if (startPoint.x === endPoint.x) {\n          endPoint.x += Number.EPSILON;\n        }\n        if (startPoint.y === endPoint.y) {\n          endPoint.y += Number.EPSILON;\n        }\n        this.camera.updateProjectionMatrix();\n        this.camera.updateMatrixWorld();\n        if (this.camera.isPerspectiveCamera) {\n          tmpPoint.copy(startPoint);\n          tmpPoint.x = Math.min(startPoint.x, endPoint.x);\n          tmpPoint.y = Math.max(startPoint.y, endPoint.y);\n          endPoint.x = Math.max(startPoint.x, endPoint.x);\n          endPoint.y = Math.min(startPoint.y, endPoint.y);\n          vecNear.setFromMatrixPosition(this.camera.matrixWorld);\n          vecTopLeft.copy(tmpPoint);\n          vecTopRight.set(endPoint.x, tmpPoint.y, 0);\n          vecDownRight.copy(endPoint);\n          vecDownLeft.set(tmpPoint.x, endPoint.y, 0);\n          vecTopLeft.unproject(this.camera);\n          vecTopRight.unproject(this.camera);\n          vecDownRight.unproject(this.camera);\n          vecDownLeft.unproject(this.camera);\n          vectemp1.copy(vecTopLeft).sub(vecNear);\n          vectemp2.copy(vecTopRight).sub(vecNear);\n          vectemp3.copy(vecDownRight).sub(vecNear);\n          vectemp1.normalize();\n          vectemp2.normalize();\n          vectemp3.normalize();\n          vectemp1.multiplyScalar(this.deep);\n          vectemp2.multiplyScalar(this.deep);\n          vectemp3.multiplyScalar(this.deep);\n          vectemp1.add(vecNear);\n          vectemp2.add(vecNear);\n          vectemp3.add(vecNear);\n          var planes = frustum.planes;\n          planes[0].setFromCoplanarPoints(vecNear, vecTopLeft, vecTopRight);\n          planes[1].setFromCoplanarPoints(vecNear, vecTopRight, vecDownRight);\n          planes[2].setFromCoplanarPoints(vecDownRight, vecDownLeft, vecNear);\n          planes[3].setFromCoplanarPoints(vecDownLeft, vecTopLeft, vecNear);\n          planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n          planes[5].setFromCoplanarPoints(vectemp3, vectemp2, vectemp1);\n          planes[5].normal.multiplyScalar(-1);\n        } else if (this.camera.isOrthographicCamera) {\n          var left = Math.min(startPoint.x, endPoint.x);\n          var top = Math.max(startPoint.y, endPoint.y);\n          var right = Math.max(startPoint.x, endPoint.x);\n          var down = Math.min(startPoint.y, endPoint.y);\n          vecTopLeft.set(left, top, -1);\n          vecTopRight.set(right, top, -1);\n          vecDownRight.set(right, down, -1);\n          vecDownLeft.set(left, down, -1);\n          vecFarTopLeft.set(left, top, 1);\n          vecFarTopRight.set(right, top, 1);\n          vecFarDownRight.set(right, down, 1);\n          vecFarDownLeft.set(left, down, 1);\n          vecTopLeft.unproject(this.camera);\n          vecTopRight.unproject(this.camera);\n          vecDownRight.unproject(this.camera);\n          vecDownLeft.unproject(this.camera);\n          vecFarTopLeft.unproject(this.camera);\n          vecFarTopRight.unproject(this.camera);\n          vecFarDownRight.unproject(this.camera);\n          vecFarDownLeft.unproject(this.camera);\n          var planes = frustum.planes;\n          planes[0].setFromCoplanarPoints(vecTopLeft, vecFarTopLeft, vecFarTopRight);\n          planes[1].setFromCoplanarPoints(vecTopRight, vecFarTopRight, vecFarDownRight);\n          planes[2].setFromCoplanarPoints(vecFarDownRight, vecFarDownLeft, vecDownLeft);\n          planes[3].setFromCoplanarPoints(vecFarDownLeft, vecFarTopLeft, vecTopLeft);\n          planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n          planes[5].setFromCoplanarPoints(vecFarDownRight, vecFarTopRight, vecFarTopLeft);\n          planes[5].normal.multiplyScalar(-1);\n        } else {\n          console.error('THREE.SelectionBox: Unsupported camera type.');\n        }\n      }\n    }, {\n      key: \"searchChildInFrustum\",\n      value: function searchChildInFrustum(frustum, object) {\n        if (object.isMesh || object.isLine || object.isPoints) {\n          if (object.material !== undefined) {\n            if (object.geometry.boundingSphere === null) object.geometry.computeBoundingSphere();\n            center.copy(object.geometry.boundingSphere.center);\n            center.applyMatrix4(object.matrixWorld);\n            if (frustum.containsPoint(center)) {\n              this.collection.push(object);\n            }\n          }\n        }\n        if (object.children.length > 0) {\n          for (var x = 0; x < object.children.length; x++) {\n            this.searchChildInFrustum(frustum, object.children[x]);\n          }\n        }\n      }\n    }]);\n    return SelectionBox;\n  }();\n  return SelectionBox;\n}();\nexport { SelectionBox };","map":{"version":3,"names":["Frustum","Vector3","SelectionBox","frustum","center","tmpPoint","vecNear","vecTopLeft","vecTopRight","vecDownRight","vecDownLeft","vecFarTopLeft","vecFarTopRight","vecFarDownRight","vecFarDownLeft","vectemp1","vectemp2","vectemp3","camera","scene","deep","_classCallCheck","startPoint","endPoint","collection","Number","MAX_VALUE","_createClass","key","value","select","updateFrustum","searchChildInFrustum","x","EPSILON","y","updateProjectionMatrix","updateMatrixWorld","isPerspectiveCamera","copy","Math","min","max","setFromMatrixPosition","matrixWorld","set","unproject","sub","normalize","multiplyScalar","add","planes","setFromCoplanarPoints","normal","isOrthographicCamera","left","top","right","down","console","error","object","isMesh","isLine","isPoints","material","undefined","geometry","boundingSphere","computeBoundingSphere","applyMatrix4","containsPoint","push","children","length"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/interactive/SelectionBox.js"],"sourcesContent":["import { Frustum, Vector3 } from 'three';\n\n/**\n * This is a class to check whether objects are in a selection area in 3D space\n */\n\nconst SelectionBox = (() => {\n  const frustum = new Frustum();\n  const center = new Vector3();\n  const tmpPoint = new Vector3();\n  const vecNear = new Vector3();\n  const vecTopLeft = new Vector3();\n  const vecTopRight = new Vector3();\n  const vecDownRight = new Vector3();\n  const vecDownLeft = new Vector3();\n  const vecFarTopLeft = new Vector3();\n  const vecFarTopRight = new Vector3();\n  const vecFarDownRight = new Vector3();\n  const vecFarDownLeft = new Vector3();\n  const vectemp1 = new Vector3();\n  const vectemp2 = new Vector3();\n  const vectemp3 = new Vector3();\n\n  class SelectionBox {\n    constructor(camera, scene, deep) {\n      this.camera = camera;\n      this.scene = scene;\n      this.startPoint = new Vector3();\n      this.endPoint = new Vector3();\n      this.collection = [];\n      this.deep = deep || Number.MAX_VALUE;\n    }\n\n    select(startPoint, endPoint) {\n      this.startPoint = startPoint || this.startPoint;\n      this.endPoint = endPoint || this.endPoint;\n      this.collection = [];\n      this.updateFrustum(this.startPoint, this.endPoint);\n      this.searchChildInFrustum(frustum, this.scene);\n      return this.collection;\n    }\n\n    updateFrustum(startPoint, endPoint) {\n      startPoint = startPoint || this.startPoint;\n      endPoint = endPoint || this.endPoint; // Avoid invalid frustum\n\n      if (startPoint.x === endPoint.x) {\n        endPoint.x += Number.EPSILON;\n      }\n\n      if (startPoint.y === endPoint.y) {\n        endPoint.y += Number.EPSILON;\n      }\n\n      this.camera.updateProjectionMatrix();\n      this.camera.updateMatrixWorld();\n\n      if (this.camera.isPerspectiveCamera) {\n        tmpPoint.copy(startPoint);\n        tmpPoint.x = Math.min(startPoint.x, endPoint.x);\n        tmpPoint.y = Math.max(startPoint.y, endPoint.y);\n        endPoint.x = Math.max(startPoint.x, endPoint.x);\n        endPoint.y = Math.min(startPoint.y, endPoint.y);\n        vecNear.setFromMatrixPosition(this.camera.matrixWorld);\n        vecTopLeft.copy(tmpPoint);\n        vecTopRight.set(endPoint.x, tmpPoint.y, 0);\n        vecDownRight.copy(endPoint);\n        vecDownLeft.set(tmpPoint.x, endPoint.y, 0);\n        vecTopLeft.unproject(this.camera);\n        vecTopRight.unproject(this.camera);\n        vecDownRight.unproject(this.camera);\n        vecDownLeft.unproject(this.camera);\n        vectemp1.copy(vecTopLeft).sub(vecNear);\n        vectemp2.copy(vecTopRight).sub(vecNear);\n        vectemp3.copy(vecDownRight).sub(vecNear);\n        vectemp1.normalize();\n        vectemp2.normalize();\n        vectemp3.normalize();\n        vectemp1.multiplyScalar(this.deep);\n        vectemp2.multiplyScalar(this.deep);\n        vectemp3.multiplyScalar(this.deep);\n        vectemp1.add(vecNear);\n        vectemp2.add(vecNear);\n        vectemp3.add(vecNear);\n        var planes = frustum.planes;\n        planes[0].setFromCoplanarPoints(vecNear, vecTopLeft, vecTopRight);\n        planes[1].setFromCoplanarPoints(vecNear, vecTopRight, vecDownRight);\n        planes[2].setFromCoplanarPoints(vecDownRight, vecDownLeft, vecNear);\n        planes[3].setFromCoplanarPoints(vecDownLeft, vecTopLeft, vecNear);\n        planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n        planes[5].setFromCoplanarPoints(vectemp3, vectemp2, vectemp1);\n        planes[5].normal.multiplyScalar(-1);\n      } else if (this.camera.isOrthographicCamera) {\n        const left = Math.min(startPoint.x, endPoint.x);\n        const top = Math.max(startPoint.y, endPoint.y);\n        const right = Math.max(startPoint.x, endPoint.x);\n        const down = Math.min(startPoint.y, endPoint.y);\n        vecTopLeft.set(left, top, -1);\n        vecTopRight.set(right, top, -1);\n        vecDownRight.set(right, down, -1);\n        vecDownLeft.set(left, down, -1);\n        vecFarTopLeft.set(left, top, 1);\n        vecFarTopRight.set(right, top, 1);\n        vecFarDownRight.set(right, down, 1);\n        vecFarDownLeft.set(left, down, 1);\n        vecTopLeft.unproject(this.camera);\n        vecTopRight.unproject(this.camera);\n        vecDownRight.unproject(this.camera);\n        vecDownLeft.unproject(this.camera);\n        vecFarTopLeft.unproject(this.camera);\n        vecFarTopRight.unproject(this.camera);\n        vecFarDownRight.unproject(this.camera);\n        vecFarDownLeft.unproject(this.camera);\n        var planes = frustum.planes;\n        planes[0].setFromCoplanarPoints(vecTopLeft, vecFarTopLeft, vecFarTopRight);\n        planes[1].setFromCoplanarPoints(vecTopRight, vecFarTopRight, vecFarDownRight);\n        planes[2].setFromCoplanarPoints(vecFarDownRight, vecFarDownLeft, vecDownLeft);\n        planes[3].setFromCoplanarPoints(vecFarDownLeft, vecFarTopLeft, vecTopLeft);\n        planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n        planes[5].setFromCoplanarPoints(vecFarDownRight, vecFarTopRight, vecFarTopLeft);\n        planes[5].normal.multiplyScalar(-1);\n      } else {\n        console.error('THREE.SelectionBox: Unsupported camera type.');\n      }\n    }\n\n    searchChildInFrustum(frustum, object) {\n      if (object.isMesh || object.isLine || object.isPoints) {\n        if (object.material !== undefined) {\n          if (object.geometry.boundingSphere === null) object.geometry.computeBoundingSphere();\n          center.copy(object.geometry.boundingSphere.center);\n          center.applyMatrix4(object.matrixWorld);\n\n          if (frustum.containsPoint(center)) {\n            this.collection.push(object);\n          }\n        }\n      }\n\n      if (object.children.length > 0) {\n        for (let x = 0; x < object.children.length; x++) {\n          this.searchChildInFrustum(frustum, object.children[x]);\n        }\n      }\n    }\n\n  }\n\n  return SelectionBox;\n})();\n\nexport { SelectionBox };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}