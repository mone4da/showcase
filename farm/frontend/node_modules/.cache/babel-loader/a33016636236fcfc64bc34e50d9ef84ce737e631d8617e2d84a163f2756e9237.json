{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node from './Node.js';\nvar VarNode = /*#__PURE__*/function (_Node) {\n  _inherits(VarNode, _Node);\n  var _super = _createSuper(VarNode);\n  function VarNode(node) {\n    var _this;\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var nodeType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    _classCallCheck(this, VarNode);\n    _this = _super.call(this, nodeType);\n    _this.node = node;\n    _this.name = name;\n    return _this;\n  }\n  _createClass(VarNode, [{\n    key: \"getHash\",\n    value: function getHash(builder) {\n      return this.name || _get(_getPrototypeOf(VarNode.prototype), \"getHash\", this).call(this, builder);\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      return _get(_getPrototypeOf(VarNode.prototype), \"getNodeType\", this).call(this, builder) || this.node.getNodeType(builder);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var type = builder.getVectorType(this.getNodeType(builder));\n      var node = this.node;\n      var name = this.name;\n      var snippet = node.build(builder, type);\n      var nodeVar = builder.getVarFromNode(this, type);\n      if (name !== null) {\n        nodeVar.name = name;\n      }\n      var propertyName = builder.getPropertyName(nodeVar);\n      builder.addFlowCode(\"\".concat(propertyName, \" = \").concat(snippet));\n      return propertyName;\n    }\n  }]);\n  return VarNode;\n}(Node);\nVarNode.prototype.isVarNode = true;\nexport default VarNode;","map":{"version":3,"names":["Node","VarNode","_Node","_inherits","_super","_createSuper","node","_this","name","arguments","length","undefined","nodeType","_classCallCheck","call","_createClass","key","value","getHash","builder","_get","_getPrototypeOf","prototype","getNodeType","generate","type","getVectorType","snippet","build","nodeVar","getVarFromNode","propertyName","getPropertyName","addFlowCode","concat","isVarNode"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/nodes/core/VarNode.js"],"sourcesContent":["import Node from './Node.js';\n\nclass VarNode extends Node {\n  constructor(node, name = null, nodeType = null) {\n    super(nodeType);\n    this.node = node;\n    this.name = name;\n  }\n\n  getHash(builder) {\n    return this.name || super.getHash(builder);\n  }\n\n  getNodeType(builder) {\n    return super.getNodeType(builder) || this.node.getNodeType(builder);\n  }\n\n  generate(builder) {\n    const type = builder.getVectorType(this.getNodeType(builder));\n    const node = this.node;\n    const name = this.name;\n    const snippet = node.build(builder, type);\n    const nodeVar = builder.getVarFromNode(this, type);\n\n    if (name !== null) {\n      nodeVar.name = name;\n    }\n\n    const propertyName = builder.getPropertyName(nodeVar);\n    builder.addFlowCode(`${propertyName} = ${snippet}`);\n    return propertyName;\n  }\n\n}\n\nVarNode.prototype.isVarNode = true;\n\nexport default VarNode;\n"],"mappings":";;;;;;AAAA,OAAOA,IAAI,MAAM,WAAW;AAAC,IAEvBC,OAAO,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,OAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,OAAA;EACX,SAAAA,QAAYK,IAAI,EAAgC;IAAA,IAAAC,KAAA;IAAA,IAA9BC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAAA,IAAEG,QAAQ,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAAAI,eAAA,OAAAZ,OAAA;IAC5CM,KAAA,GAAAH,MAAA,CAAAU,IAAA,OAAMF,QAAQ;IACdL,KAAA,CAAKD,IAAI,GAAGA,IAAI;IAChBC,KAAA,CAAKC,IAAI,GAAGA,IAAI;IAAC,OAAAD,KAAA;EACnB;EAACQ,YAAA,CAAAd,OAAA;IAAAe,GAAA;IAAAC,KAAA,EAED,SAAAC,QAAQC,OAAO,EAAE;MACf,OAAO,IAAI,CAACX,IAAI,IAAAY,IAAA,CAAAC,eAAA,CAAApB,OAAA,CAAAqB,SAAA,oBAAAR,IAAA,OAAkBK,OAAO,CAAC;IAC5C;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAM,YAAYJ,OAAO,EAAE;MACnB,OAAOC,IAAA,CAAAC,eAAA,CAAApB,OAAA,CAAAqB,SAAA,wBAAAR,IAAA,OAAkBK,OAAO,KAAK,IAAI,CAACb,IAAI,CAACiB,WAAW,CAACJ,OAAO,CAAC;IACrE;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAO,SAASL,OAAO,EAAE;MAChB,IAAMM,IAAI,GAAGN,OAAO,CAACO,aAAa,CAAC,IAAI,CAACH,WAAW,CAACJ,OAAO,CAAC,CAAC;MAC7D,IAAMb,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,IAAME,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,IAAMmB,OAAO,GAAGrB,IAAI,CAACsB,KAAK,CAACT,OAAO,EAAEM,IAAI,CAAC;MACzC,IAAMI,OAAO,GAAGV,OAAO,CAACW,cAAc,CAAC,IAAI,EAAEL,IAAI,CAAC;MAElD,IAAIjB,IAAI,KAAK,IAAI,EAAE;QACjBqB,OAAO,CAACrB,IAAI,GAAGA,IAAI;MACrB;MAEA,IAAMuB,YAAY,GAAGZ,OAAO,CAACa,eAAe,CAACH,OAAO,CAAC;MACrDV,OAAO,CAACc,WAAW,IAAAC,MAAA,CAAIH,YAAY,SAAAG,MAAA,CAAMP,OAAO,EAAG;MACnD,OAAOI,YAAY;IACrB;EAAC;EAAA,OAAA9B,OAAA;AAAA,EA7BmBD,IAAI;AAiC1BC,OAAO,CAACqB,SAAS,CAACa,SAAS,GAAG,IAAI;AAElC,eAAelC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}