{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Object3DNode from './Object3DNode.js';\nvar CameraNode = /*#__PURE__*/function (_Object3DNode) {\n  _inherits(CameraNode, _Object3DNode);\n  var _super = _createSuper(CameraNode);\n  function CameraNode() {\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CameraNode.POSITION;\n    _classCallCheck(this, CameraNode);\n    return _super.call(this, scope);\n  }\n  _createClass(CameraNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      var scope = this.scope;\n      if (scope === CameraNode.PROJECTION_MATRIX) {\n        return 'mat4';\n      }\n      return _get(_getPrototypeOf(CameraNode.prototype), \"getNodeType\", this).call(this, builder);\n    }\n  }, {\n    key: \"update\",\n    value: function update(frame) {\n      var camera = frame.camera;\n      var uniformNode = this._uniformNode;\n      var scope = this.scope;\n      if (scope === CameraNode.PROJECTION_MATRIX) {\n        uniformNode.value = camera.projectionMatrix;\n      } else if (scope === CameraNode.VIEW_MATRIX) {\n        uniformNode.value = camera.matrixWorldInverse;\n      } else {\n        this.object3d = camera;\n        _get(_getPrototypeOf(CameraNode.prototype), \"update\", this).call(this, frame);\n      }\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var scope = this.scope;\n      if (scope === CameraNode.PROJECTION_MATRIX) {\n        this._uniformNode.nodeType = 'mat4';\n      }\n      return _get(_getPrototypeOf(CameraNode.prototype), \"generate\", this).call(this, builder);\n    }\n  }]);\n  return CameraNode;\n}(Object3DNode);\n_defineProperty(CameraNode, \"PROJECTION_MATRIX\", 'projectionMatrix');\nexport default CameraNode;","map":{"version":3,"names":["_defineProperty","Object3DNode","CameraNode","_Object3DNode","_inherits","_super","_createSuper","scope","arguments","length","undefined","POSITION","_classCallCheck","call","_createClass","key","value","getNodeType","builder","PROJECTION_MATRIX","_get","_getPrototypeOf","prototype","update","frame","camera","uniformNode","_uniformNode","projectionMatrix","VIEW_MATRIX","matrixWorldInverse","object3d","generate","nodeType"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/nodes/accessors/CameraNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Object3DNode from './Object3DNode.js';\n\nclass CameraNode extends Object3DNode {\n  constructor(scope = CameraNode.POSITION) {\n    super(scope);\n  }\n\n  getNodeType(builder) {\n    const scope = this.scope;\n\n    if (scope === CameraNode.PROJECTION_MATRIX) {\n      return 'mat4';\n    }\n\n    return super.getNodeType(builder);\n  }\n\n  update(frame) {\n    const camera = frame.camera;\n    const uniformNode = this._uniformNode;\n    const scope = this.scope;\n\n    if (scope === CameraNode.PROJECTION_MATRIX) {\n      uniformNode.value = camera.projectionMatrix;\n    } else if (scope === CameraNode.VIEW_MATRIX) {\n      uniformNode.value = camera.matrixWorldInverse;\n    } else {\n      this.object3d = camera;\n      super.update(frame);\n    }\n  }\n\n  generate(builder) {\n    const scope = this.scope;\n\n    if (scope === CameraNode.PROJECTION_MATRIX) {\n      this._uniformNode.nodeType = 'mat4';\n    }\n\n    return super.generate(builder);\n  }\n\n}\n\n_defineProperty(CameraNode, \"PROJECTION_MATRIX\", 'projectionMatrix');\n\nexport default CameraNode;\n"],"mappings":";;;;;;AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,OAAOC,YAAY,MAAM,mBAAmB;AAAC,IAEvCC,UAAU,0BAAAC,aAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,aAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EACd,SAAAA,WAAA,EAAyC;IAAA,IAA7BK,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,UAAU,CAACS,QAAQ;IAAAC,eAAA,OAAAV,UAAA;IAAA,OAAAG,MAAA,CAAAQ,IAAA,OAC/BN,KAAK;EACb;EAACO,YAAA,CAAAZ,UAAA;IAAAa,GAAA;IAAAC,KAAA,EAED,SAAAC,YAAYC,OAAO,EAAE;MACnB,IAAMX,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAIA,KAAK,KAAKL,UAAU,CAACiB,iBAAiB,EAAE;QAC1C,OAAO,MAAM;MACf;MAEA,OAAAC,IAAA,CAAAC,eAAA,CAAAnB,UAAA,CAAAoB,SAAA,wBAAAT,IAAA,OAAyBK,OAAO;IAClC;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAO,OAAOC,KAAK,EAAE;MACZ,IAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM;MAC3B,IAAMC,WAAW,GAAG,IAAI,CAACC,YAAY;MACrC,IAAMpB,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAIA,KAAK,KAAKL,UAAU,CAACiB,iBAAiB,EAAE;QAC1CO,WAAW,CAACV,KAAK,GAAGS,MAAM,CAACG,gBAAgB;MAC7C,CAAC,MAAM,IAAIrB,KAAK,KAAKL,UAAU,CAAC2B,WAAW,EAAE;QAC3CH,WAAW,CAACV,KAAK,GAAGS,MAAM,CAACK,kBAAkB;MAC/C,CAAC,MAAM;QACL,IAAI,CAACC,QAAQ,GAAGN,MAAM;QACtBL,IAAA,CAAAC,eAAA,CAAAnB,UAAA,CAAAoB,SAAA,mBAAAT,IAAA,OAAaW,KAAK;MACpB;IACF;EAAC;IAAAT,GAAA;IAAAC,KAAA,EAED,SAAAgB,SAASd,OAAO,EAAE;MAChB,IAAMX,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAIA,KAAK,KAAKL,UAAU,CAACiB,iBAAiB,EAAE;QAC1C,IAAI,CAACQ,YAAY,CAACM,QAAQ,GAAG,MAAM;MACrC;MAEA,OAAAb,IAAA,CAAAC,eAAA,CAAAnB,UAAA,CAAAoB,SAAA,qBAAAT,IAAA,OAAsBK,OAAO;IAC/B;EAAC;EAAA,OAAAhB,UAAA;AAAA,EAtCsBD,YAAY;AA0CrCD,eAAe,CAACE,UAAU,EAAE,mBAAmB,EAAE,kBAAkB,CAAC;AAEpE,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}