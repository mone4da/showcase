{"ast":null,"code":"import _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _get from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Object3D, Raycaster, Vector3, Quaternion, Euler, Matrix4, Color, MeshBasicMaterial, DoubleSide, LineBasicMaterial, CylinderGeometry, BoxGeometry, BufferGeometry, Float32BufferAttribute, Mesh, Line, OctahedronGeometry, PlaneGeometry, TorusGeometry, SphereGeometry } from 'three';\nvar TransformControls = /*#__PURE__*/function (_Object3D) {\n  _inherits(TransformControls, _Object3D);\n  var _super = _createSuper(TransformControls);\n  // events\n  function TransformControls(camera, _domElement) {\n    var _thisSuper, _this;\n    _classCallCheck(this, TransformControls);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"isTransformControls\", true);\n    _defineProperty(_assertThisInitialized(_this), \"visible\", false);\n    _defineProperty(_assertThisInitialized(_this), \"domElement\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"raycaster\", new Raycaster());\n    _defineProperty(_assertThisInitialized(_this), \"gizmo\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"plane\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"tempVector\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"tempVector2\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"tempQuaternion\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this), \"unit\", {\n      X: new Vector3(1, 0, 0),\n      Y: new Vector3(0, 1, 0),\n      Z: new Vector3(0, 0, 1)\n    });\n    _defineProperty(_assertThisInitialized(_this), \"pointStart\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"pointEnd\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"offset\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"rotationAxis\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"startNorm\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"endNorm\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"rotationAngle\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"cameraPosition\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"cameraQuaternion\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this), \"cameraScale\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"parentPosition\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"parentQuaternion\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this), \"parentQuaternionInv\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this), \"parentScale\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"worldPositionStart\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"worldQuaternionStart\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this), \"worldScaleStart\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"worldPosition\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"worldQuaternion\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this), \"worldQuaternionInv\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this), \"worldScale\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"eye\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"positionStart\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"quaternionStart\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this), \"scaleStart\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this), \"camera\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"object\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"enabled\", true);\n    _defineProperty(_assertThisInitialized(_this), \"axis\", null);\n    _defineProperty(_assertThisInitialized(_this), \"mode\", 'translate');\n    _defineProperty(_assertThisInitialized(_this), \"translationSnap\", null);\n    _defineProperty(_assertThisInitialized(_this), \"rotationSnap\", null);\n    _defineProperty(_assertThisInitialized(_this), \"scaleSnap\", null);\n    _defineProperty(_assertThisInitialized(_this), \"space\", 'world');\n    _defineProperty(_assertThisInitialized(_this), \"size\", 1);\n    _defineProperty(_assertThisInitialized(_this), \"dragging\", false);\n    _defineProperty(_assertThisInitialized(_this), \"showX\", true);\n    _defineProperty(_assertThisInitialized(_this), \"showY\", true);\n    _defineProperty(_assertThisInitialized(_this), \"showZ\", true);\n    _defineProperty(_assertThisInitialized(_this), \"changeEvent\", {\n      type: 'change'\n    });\n    _defineProperty(_assertThisInitialized(_this), \"mouseDownEvent\", {\n      type: 'mouseDown',\n      mode: _this.mode\n    });\n    _defineProperty(_assertThisInitialized(_this), \"mouseUpEvent\", {\n      type: 'mouseUp',\n      mode: _this.mode\n    });\n    _defineProperty(_assertThisInitialized(_this), \"objectChangeEvent\", {\n      type: 'objectChange'\n    });\n    _defineProperty(_assertThisInitialized(_this), \"intersectObjectWithRay\", function (object, raycaster, includeInvisible) {\n      var allIntersections = raycaster.intersectObject(object, true);\n      for (var i = 0; i < allIntersections.length; i++) {\n        if (allIntersections[i].object.visible || includeInvisible) {\n          return allIntersections[i];\n        }\n      }\n      return false;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"attach\", function (object) {\n      _this.object = object;\n      _this.visible = true;\n      return _assertThisInitialized(_this);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"detach\", function () {\n      _this.object = undefined;\n      _this.visible = false;\n      _this.axis = null;\n      return _assertThisInitialized(_this);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"reset\", function () {\n      if (!_this.enabled) return _assertThisInitialized(_this);\n      if (_this.dragging) {\n        if (_this.object !== undefined) {\n          _this.object.position.copy(_this.positionStart);\n          _this.object.quaternion.copy(_this.quaternionStart);\n          _this.object.scale.copy(_this.scaleStart);\n          _this.dispatchEvent(_this.changeEvent);\n          _this.dispatchEvent(_this.objectChangeEvent);\n          _this.pointStart.copy(_this.pointEnd);\n        }\n      }\n      return _assertThisInitialized(_this);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateMatrixWorld\", function () {\n      if (_this.object !== undefined) {\n        _this.object.updateMatrixWorld();\n        if (_this.object.parent === null) {\n          console.error('TransformControls: The attached 3D object must be a part of the scene graph.');\n        } else {\n          _this.object.parent.matrixWorld.decompose(_this.parentPosition, _this.parentQuaternion, _this.parentScale);\n        }\n        _this.object.matrixWorld.decompose(_this.worldPosition, _this.worldQuaternion, _this.worldScale);\n        _this.parentQuaternionInv.copy(_this.parentQuaternion).invert();\n        _this.worldQuaternionInv.copy(_this.worldQuaternion).invert();\n      }\n      _this.camera.updateMatrixWorld();\n      _this.camera.matrixWorld.decompose(_this.cameraPosition, _this.cameraQuaternion, _this.cameraScale);\n      _this.eye.copy(_this.cameraPosition).sub(_this.worldPosition).normalize();\n      _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(TransformControls.prototype)), \"updateMatrixWorld\", _thisSuper).call(_thisSuper);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"pointerHover\", function (pointer) {\n      if (_this.object === undefined || _this.dragging === true) return;\n      _this.raycaster.setFromCamera(pointer, _this.camera);\n      var intersect = _this.intersectObjectWithRay(_this.gizmo.picker[_this.mode], _this.raycaster);\n      if (intersect) {\n        _this.axis = intersect.object.name;\n      } else {\n        _this.axis = null;\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"pointerDown\", function (pointer) {\n      if (_this.object === undefined || _this.dragging === true || pointer.button !== 0) return;\n      if (_this.axis !== null) {\n        _this.raycaster.setFromCamera(pointer, _this.camera);\n        var planeIntersect = _this.intersectObjectWithRay(_this.plane, _this.raycaster, true);\n        if (planeIntersect) {\n          var space = _this.space;\n          if (_this.mode === 'scale') {\n            space = 'local';\n          } else if (_this.axis === 'E' || _this.axis === 'XYZE' || _this.axis === 'XYZ') {\n            space = 'world';\n          }\n          if (space === 'local' && _this.mode === 'rotate') {\n            var snap = _this.rotationSnap;\n            if (_this.axis === 'X' && snap) _this.object.rotation.x = Math.round(_this.object.rotation.x / snap) * snap;\n            if (_this.axis === 'Y' && snap) _this.object.rotation.y = Math.round(_this.object.rotation.y / snap) * snap;\n            if (_this.axis === 'Z' && snap) _this.object.rotation.z = Math.round(_this.object.rotation.z / snap) * snap;\n          }\n          _this.object.updateMatrixWorld();\n          if (_this.object.parent) {\n            _this.object.parent.updateMatrixWorld();\n          }\n          _this.positionStart.copy(_this.object.position);\n          _this.quaternionStart.copy(_this.object.quaternion);\n          _this.scaleStart.copy(_this.object.scale);\n          _this.object.matrixWorld.decompose(_this.worldPositionStart, _this.worldQuaternionStart, _this.worldScaleStart);\n          _this.pointStart.copy(planeIntersect.point).sub(_this.worldPositionStart);\n        }\n        _this.dragging = true;\n        _this.mouseDownEvent.mode = _this.mode;\n        _this.dispatchEvent(_this.mouseDownEvent);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"pointerMove\", function (pointer) {\n      var axis = _this.axis;\n      var mode = _this.mode;\n      var object = _this.object;\n      var space = _this.space;\n      if (mode === 'scale') {\n        space = 'local';\n      } else if (axis === 'E' || axis === 'XYZE' || axis === 'XYZ') {\n        space = 'world';\n      }\n      if (object === undefined || axis === null || _this.dragging === false || pointer.button !== -1) return;\n      _this.raycaster.setFromCamera(pointer, _this.camera);\n      var planeIntersect = _this.intersectObjectWithRay(_this.plane, _this.raycaster, true);\n      if (!planeIntersect) return;\n      _this.pointEnd.copy(planeIntersect.point).sub(_this.worldPositionStart);\n      if (mode === 'translate') {\n        // Apply translate\n        _this.offset.copy(_this.pointEnd).sub(_this.pointStart);\n        if (space === 'local' && axis !== 'XYZ') {\n          _this.offset.applyQuaternion(_this.worldQuaternionInv);\n        }\n        if (axis.indexOf('X') === -1) _this.offset.x = 0;\n        if (axis.indexOf('Y') === -1) _this.offset.y = 0;\n        if (axis.indexOf('Z') === -1) _this.offset.z = 0;\n        if (space === 'local' && axis !== 'XYZ') {\n          _this.offset.applyQuaternion(_this.quaternionStart).divide(_this.parentScale);\n        } else {\n          _this.offset.applyQuaternion(_this.parentQuaternionInv).divide(_this.parentScale);\n        }\n        object.position.copy(_this.offset).add(_this.positionStart); // Apply translation snap\n\n        if (_this.translationSnap) {\n          if (space === 'local') {\n            object.position.applyQuaternion(_this.tempQuaternion.copy(_this.quaternionStart).invert());\n            if (axis.search('X') !== -1) {\n              object.position.x = Math.round(object.position.x / _this.translationSnap) * _this.translationSnap;\n            }\n            if (axis.search('Y') !== -1) {\n              object.position.y = Math.round(object.position.y / _this.translationSnap) * _this.translationSnap;\n            }\n            if (axis.search('Z') !== -1) {\n              object.position.z = Math.round(object.position.z / _this.translationSnap) * _this.translationSnap;\n            }\n            object.position.applyQuaternion(_this.quaternionStart);\n          }\n          if (space === 'world') {\n            if (object.parent) {\n              object.position.add(_this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n            if (axis.search('X') !== -1) {\n              object.position.x = Math.round(object.position.x / _this.translationSnap) * _this.translationSnap;\n            }\n            if (axis.search('Y') !== -1) {\n              object.position.y = Math.round(object.position.y / _this.translationSnap) * _this.translationSnap;\n            }\n            if (axis.search('Z') !== -1) {\n              object.position.z = Math.round(object.position.z / _this.translationSnap) * _this.translationSnap;\n            }\n            if (object.parent) {\n              object.position.sub(_this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n          }\n        }\n      } else if (mode === 'scale') {\n        if (axis.search('XYZ') !== -1) {\n          var d = _this.pointEnd.length() / _this.pointStart.length();\n          if (_this.pointEnd.dot(_this.pointStart) < 0) d *= -1;\n          _this.tempVector2.set(d, d, d);\n        } else {\n          _this.tempVector.copy(_this.pointStart);\n          _this.tempVector2.copy(_this.pointEnd);\n          _this.tempVector.applyQuaternion(_this.worldQuaternionInv);\n          _this.tempVector2.applyQuaternion(_this.worldQuaternionInv);\n          _this.tempVector2.divide(_this.tempVector);\n          if (axis.search('X') === -1) {\n            _this.tempVector2.x = 1;\n          }\n          if (axis.search('Y') === -1) {\n            _this.tempVector2.y = 1;\n          }\n          if (axis.search('Z') === -1) {\n            _this.tempVector2.z = 1;\n          }\n        } // Apply scale\n\n        object.scale.copy(_this.scaleStart).multiply(_this.tempVector2);\n        if (_this.scaleSnap && _this.object) {\n          if (axis.search('X') !== -1) {\n            _this.object.scale.x = Math.round(object.scale.x / _this.scaleSnap) * _this.scaleSnap || _this.scaleSnap;\n          }\n          if (axis.search('Y') !== -1) {\n            object.scale.y = Math.round(object.scale.y / _this.scaleSnap) * _this.scaleSnap || _this.scaleSnap;\n          }\n          if (axis.search('Z') !== -1) {\n            object.scale.z = Math.round(object.scale.z / _this.scaleSnap) * _this.scaleSnap || _this.scaleSnap;\n          }\n        }\n      } else if (mode === 'rotate') {\n        _this.offset.copy(_this.pointEnd).sub(_this.pointStart);\n        var ROTATION_SPEED = 20 / _this.worldPosition.distanceTo(_this.tempVector.setFromMatrixPosition(_this.camera.matrixWorld));\n        if (axis === 'E') {\n          _this.rotationAxis.copy(_this.eye);\n          _this.rotationAngle = _this.pointEnd.angleTo(_this.pointStart);\n          _this.startNorm.copy(_this.pointStart).normalize();\n          _this.endNorm.copy(_this.pointEnd).normalize();\n          _this.rotationAngle *= _this.endNorm.cross(_this.startNorm).dot(_this.eye) < 0 ? 1 : -1;\n        } else if (axis === 'XYZE') {\n          _this.rotationAxis.copy(_this.offset).cross(_this.eye).normalize();\n          _this.rotationAngle = _this.offset.dot(_this.tempVector.copy(_this.rotationAxis).cross(_this.eye)) * ROTATION_SPEED;\n        } else if (axis === 'X' || axis === 'Y' || axis === 'Z') {\n          _this.rotationAxis.copy(_this.unit[axis]);\n          _this.tempVector.copy(_this.unit[axis]);\n          if (space === 'local') {\n            _this.tempVector.applyQuaternion(_this.worldQuaternion);\n          }\n          _this.rotationAngle = _this.offset.dot(_this.tempVector.cross(_this.eye).normalize()) * ROTATION_SPEED;\n        } // Apply rotation snap\n\n        if (_this.rotationSnap) {\n          _this.rotationAngle = Math.round(_this.rotationAngle / _this.rotationSnap) * _this.rotationSnap;\n        } // Apply rotate\n\n        if (space === 'local' && axis !== 'E' && axis !== 'XYZE') {\n          object.quaternion.copy(_this.quaternionStart);\n          object.quaternion.multiply(_this.tempQuaternion.setFromAxisAngle(_this.rotationAxis, _this.rotationAngle)).normalize();\n        } else {\n          _this.rotationAxis.applyQuaternion(_this.parentQuaternionInv);\n          object.quaternion.copy(_this.tempQuaternion.setFromAxisAngle(_this.rotationAxis, _this.rotationAngle));\n          object.quaternion.multiply(_this.quaternionStart).normalize();\n        }\n      }\n      _this.dispatchEvent(_this.changeEvent);\n      _this.dispatchEvent(_this.objectChangeEvent);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"pointerUp\", function (pointer) {\n      if (pointer.button !== 0) return;\n      if (_this.dragging && _this.axis !== null) {\n        _this.mouseUpEvent.mode = _this.mode;\n        _this.dispatchEvent(_this.mouseUpEvent);\n      }\n      _this.dragging = false;\n      _this.axis = null;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getPointer\", function (event) {\n      var _this$domElement$owne;\n      if (_this.domElement && (_this$domElement$owne = _this.domElement.ownerDocument) !== null && _this$domElement$owne !== void 0 && _this$domElement$owne.pointerLockElement) {\n        return {\n          x: 0,\n          y: 0,\n          button: event.button\n        };\n      } else {\n        var _this$domElement;\n        var pointer = event.changedTouches ? event.changedTouches[0] : event;\n        var rect = (_this$domElement = _this.domElement) === null || _this$domElement === void 0 ? void 0 : _this$domElement.getBoundingClientRect();\n        return {\n          x: (pointer.clientX - rect.left) / rect.width * 2 - 1,\n          y: -(pointer.clientY - rect.top) / rect.height * 2 + 1,\n          button: event.button\n        };\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPointerHover\", function (event) {\n      if (!_this.enabled) return;\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          _this.pointerHover(_this.getPointer(event));\n          break;\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPointerDown\", function (event) {\n      if (!_this.enabled || !_this.domElement) return;\n      _this.domElement.style.touchAction = 'none'; // disable touch scroll\n\n      _this.domElement.ownerDocument.addEventListener('pointermove', _this.onPointerMove);\n      _this.pointerHover(_this.getPointer(event));\n      _this.pointerDown(_this.getPointer(event));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPointerMove\", function (event) {\n      if (!_this.enabled) return;\n      _this.pointerMove(_this.getPointer(event));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPointerUp\", function (event) {\n      if (!_this.enabled || !_this.domElement) return;\n      _this.domElement.style.touchAction = '';\n      _this.domElement.ownerDocument.removeEventListener('pointermove', _this.onPointerMove);\n      _this.pointerUp(_this.getPointer(event));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getMode\", function () {\n      return _this.mode;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setMode\", function (mode) {\n      _this.mode = mode;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setTranslationSnap\", function (translationSnap) {\n      _this.translationSnap = translationSnap;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setRotationSnap\", function (rotationSnap) {\n      _this.rotationSnap = rotationSnap;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setScaleSnap\", function (scaleSnap) {\n      _this.scaleSnap = scaleSnap;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setSize\", function (size) {\n      _this.size = size;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setSpace\", function (space) {\n      _this.space = space;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"update\", function () {\n      console.warn('THREE.TransformControls: update function has no more functionality and therefore has been deprecated.');\n    });\n    _defineProperty(_assertThisInitialized(_this), \"connect\", function (domElement) {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n      _this.domElement = domElement;\n      _this.domElement.addEventListener('pointerdown', _this.onPointerDown);\n      _this.domElement.addEventListener('pointermove', _this.onPointerHover);\n      _this.domElement.ownerDocument.addEventListener('pointerup', _this.onPointerUp);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"dispose\", function () {\n      var _this$domElement2, _this$domElement3, _this$domElement4, _this$domElement4$own, _this$domElement5, _this$domElement5$own;\n      (_this$domElement2 = _this.domElement) === null || _this$domElement2 === void 0 ? void 0 : _this$domElement2.removeEventListener('pointerdown', _this.onPointerDown);\n      (_this$domElement3 = _this.domElement) === null || _this$domElement3 === void 0 ? void 0 : _this$domElement3.removeEventListener('pointermove', _this.onPointerHover);\n      (_this$domElement4 = _this.domElement) === null || _this$domElement4 === void 0 ? void 0 : (_this$domElement4$own = _this$domElement4.ownerDocument) === null || _this$domElement4$own === void 0 ? void 0 : _this$domElement4$own.removeEventListener('pointermove', _this.onPointerMove);\n      (_this$domElement5 = _this.domElement) === null || _this$domElement5 === void 0 ? void 0 : (_this$domElement5$own = _this$domElement5.ownerDocument) === null || _this$domElement5$own === void 0 ? void 0 : _this$domElement5$own.removeEventListener('pointerup', _this.onPointerUp);\n      _this.traverse(function (child) {\n        var mesh = child;\n        if (mesh.geometry) {\n          mesh.geometry.dispose();\n        }\n        if (mesh.material) {\n          mesh.material.dispose();\n        }\n      });\n    });\n    _this.domElement = _domElement;\n    _this.camera = camera;\n    _this.gizmo = new TransformControlsGizmo();\n    _this.add(_this.gizmo);\n    _this.plane = new TransformControlsPlane();\n    _this.add(_this.plane); // Defined getter, setter and store for a property\n\n    var defineProperty = function defineProperty(propName, defaultValue) {\n      var propValue = defaultValue;\n      Object.defineProperty(_assertThisInitialized(_this), propName, {\n        get: function get() {\n          return propValue !== undefined ? propValue : defaultValue;\n        },\n        set: function set(value) {\n          if (propValue !== value) {\n            propValue = value;\n            this.plane[propName] = value;\n            this.gizmo[propName] = value;\n            this.dispatchEvent({\n              type: propName + '-changed',\n              value: value\n            });\n            this.dispatchEvent(this.changeEvent);\n          }\n        }\n      }); //@ts-ignore\n\n      _this[propName] = defaultValue; // @ts-ignore\n\n      _this.plane[propName] = defaultValue; // @ts-ignore\n\n      _this.gizmo[propName] = defaultValue;\n    };\n    defineProperty('camera', _this.camera);\n    defineProperty('object', _this.object);\n    defineProperty('enabled', _this.enabled);\n    defineProperty('axis', _this.axis);\n    defineProperty('mode', _this.mode);\n    defineProperty('translationSnap', _this.translationSnap);\n    defineProperty('rotationSnap', _this.rotationSnap);\n    defineProperty('scaleSnap', _this.scaleSnap);\n    defineProperty('space', _this.space);\n    defineProperty('size', _this.size);\n    defineProperty('dragging', _this.dragging);\n    defineProperty('showX', _this.showX);\n    defineProperty('showY', _this.showY);\n    defineProperty('showZ', _this.showZ);\n    defineProperty('worldPosition', _this.worldPosition);\n    defineProperty('worldPositionStart', _this.worldPositionStart);\n    defineProperty('worldQuaternion', _this.worldQuaternion);\n    defineProperty('worldQuaternionStart', _this.worldQuaternionStart);\n    defineProperty('cameraPosition', _this.cameraPosition);\n    defineProperty('cameraQuaternion', _this.cameraQuaternion);\n    defineProperty('pointStart', _this.pointStart);\n    defineProperty('pointEnd', _this.pointEnd);\n    defineProperty('rotationAxis', _this.rotationAxis);\n    defineProperty('rotationAngle', _this.rotationAngle);\n    defineProperty('eye', _this.eye); // connect events\n\n    if (_domElement !== undefined) _this.connect(_domElement);\n    return _this;\n  }\n  return _createClass(TransformControls);\n}(Object3D);\nvar TransformControlsGizmo = /*#__PURE__*/function (_Object3D2) {\n  _inherits(TransformControlsGizmo, _Object3D2);\n  var _super2 = _createSuper(TransformControlsGizmo);\n  // these are set from parent class TransformControls\n  function TransformControlsGizmo() {\n    var _thisSuper2, _this2;\n    _classCallCheck(this, TransformControlsGizmo);\n    _this2 = _super2.call(this);\n    _defineProperty(_assertThisInitialized(_this2), \"isTransformControlsGizmo\", true);\n    _defineProperty(_assertThisInitialized(_this2), \"type\", 'TransformControlsGizmo');\n    _defineProperty(_assertThisInitialized(_this2), \"tempVector\", new Vector3(0, 0, 0));\n    _defineProperty(_assertThisInitialized(_this2), \"tempEuler\", new Euler());\n    _defineProperty(_assertThisInitialized(_this2), \"alignVector\", new Vector3(0, 1, 0));\n    _defineProperty(_assertThisInitialized(_this2), \"zeroVector\", new Vector3(0, 0, 0));\n    _defineProperty(_assertThisInitialized(_this2), \"lookAtMatrix\", new Matrix4());\n    _defineProperty(_assertThisInitialized(_this2), \"tempQuaternion\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this2), \"tempQuaternion2\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this2), \"identityQuaternion\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this2), \"unitX\", new Vector3(1, 0, 0));\n    _defineProperty(_assertThisInitialized(_this2), \"unitY\", new Vector3(0, 1, 0));\n    _defineProperty(_assertThisInitialized(_this2), \"unitZ\", new Vector3(0, 0, 1));\n    _defineProperty(_assertThisInitialized(_this2), \"gizmo\", void 0);\n    _defineProperty(_assertThisInitialized(_this2), \"picker\", void 0);\n    _defineProperty(_assertThisInitialized(_this2), \"helper\", void 0);\n    _defineProperty(_assertThisInitialized(_this2), \"rotationAxis\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this2), \"cameraPosition\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this2), \"worldPositionStart\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this2), \"worldQuaternionStart\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this2), \"worldPosition\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this2), \"worldQuaternion\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this2), \"eye\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this2), \"camera\", null);\n    _defineProperty(_assertThisInitialized(_this2), \"enabled\", true);\n    _defineProperty(_assertThisInitialized(_this2), \"axis\", null);\n    _defineProperty(_assertThisInitialized(_this2), \"mode\", 'translate');\n    _defineProperty(_assertThisInitialized(_this2), \"space\", 'world');\n    _defineProperty(_assertThisInitialized(_this2), \"size\", 1);\n    _defineProperty(_assertThisInitialized(_this2), \"dragging\", false);\n    _defineProperty(_assertThisInitialized(_this2), \"showX\", true);\n    _defineProperty(_assertThisInitialized(_this2), \"showY\", true);\n    _defineProperty(_assertThisInitialized(_this2), \"showZ\", true);\n    _defineProperty(_assertThisInitialized(_this2), \"updateMatrixWorld\", function () {\n      var space = _this2.space;\n      if (_this2.mode === 'scale') {\n        space = 'local'; // scale always oriented to local rotation\n      }\n\n      var quaternion = space === 'local' ? _this2.worldQuaternion : _this2.identityQuaternion; // Show only gizmos for current transform mode\n\n      _this2.gizmo['translate'].visible = _this2.mode === 'translate';\n      _this2.gizmo['rotate'].visible = _this2.mode === 'rotate';\n      _this2.gizmo['scale'].visible = _this2.mode === 'scale';\n      _this2.helper['translate'].visible = _this2.mode === 'translate';\n      _this2.helper['rotate'].visible = _this2.mode === 'rotate';\n      _this2.helper['scale'].visible = _this2.mode === 'scale';\n      var handles = [];\n      handles = handles.concat(_this2.picker[_this2.mode].children);\n      handles = handles.concat(_this2.gizmo[_this2.mode].children);\n      handles = handles.concat(_this2.helper[_this2.mode].children);\n      var _loop = function _loop() {\n        var handle = handles[i]; // hide aligned to camera\n\n        handle.visible = true;\n        handle.rotation.set(0, 0, 0);\n        handle.position.copy(_this2.worldPosition);\n        var factor;\n        if (_this2.camera.isOrthographicCamera) {\n          factor = (_this2.camera.top - _this2.camera.bottom) / _this2.camera.zoom;\n        } else {\n          factor = _this2.worldPosition.distanceTo(_this2.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * _this2.camera.fov / 360) / _this2.camera.zoom, 7);\n        }\n        handle.scale.set(1, 1, 1).multiplyScalar(factor * _this2.size / 7); // TODO: simplify helpers and consider decoupling from gizmo\n\n        if (handle.tag === 'helper') {\n          handle.visible = false;\n          if (handle.name === 'AXIS') {\n            handle.position.copy(_this2.worldPositionStart);\n            handle.visible = !!_this2.axis;\n            if (_this2.axis === 'X') {\n              _this2.tempQuaternion.setFromEuler(_this2.tempEuler.set(0, 0, 0));\n              handle.quaternion.copy(quaternion).multiply(_this2.tempQuaternion);\n              if (Math.abs(_this2.alignVector.copy(_this2.unitX).applyQuaternion(quaternion).dot(_this2.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (_this2.axis === 'Y') {\n              _this2.tempQuaternion.setFromEuler(_this2.tempEuler.set(0, 0, Math.PI / 2));\n              handle.quaternion.copy(quaternion).multiply(_this2.tempQuaternion);\n              if (Math.abs(_this2.alignVector.copy(_this2.unitY).applyQuaternion(quaternion).dot(_this2.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (_this2.axis === 'Z') {\n              _this2.tempQuaternion.setFromEuler(_this2.tempEuler.set(0, Math.PI / 2, 0));\n              handle.quaternion.copy(quaternion).multiply(_this2.tempQuaternion);\n              if (Math.abs(_this2.alignVector.copy(_this2.unitZ).applyQuaternion(quaternion).dot(_this2.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (_this2.axis === 'XYZE') {\n              _this2.tempQuaternion.setFromEuler(_this2.tempEuler.set(0, Math.PI / 2, 0));\n              _this2.alignVector.copy(_this2.rotationAxis);\n              handle.quaternion.setFromRotationMatrix(_this2.lookAtMatrix.lookAt(_this2.zeroVector, _this2.alignVector, _this2.unitY));\n              handle.quaternion.multiply(_this2.tempQuaternion);\n              handle.visible = _this2.dragging;\n            }\n            if (_this2.axis === 'E') {\n              handle.visible = false;\n            }\n          } else if (handle.name === 'START') {\n            handle.position.copy(_this2.worldPositionStart);\n            handle.visible = _this2.dragging;\n          } else if (handle.name === 'END') {\n            handle.position.copy(_this2.worldPosition);\n            handle.visible = _this2.dragging;\n          } else if (handle.name === 'DELTA') {\n            handle.position.copy(_this2.worldPositionStart);\n            handle.quaternion.copy(_this2.worldQuaternionStart);\n            _this2.tempVector.set(1e-10, 1e-10, 1e-10).add(_this2.worldPositionStart).sub(_this2.worldPosition).multiplyScalar(-1);\n            _this2.tempVector.applyQuaternion(_this2.worldQuaternionStart.clone().invert());\n            handle.scale.copy(_this2.tempVector);\n            handle.visible = _this2.dragging;\n          } else {\n            handle.quaternion.copy(quaternion);\n            if (_this2.dragging) {\n              handle.position.copy(_this2.worldPositionStart);\n            } else {\n              handle.position.copy(_this2.worldPosition);\n            }\n            if (_this2.axis) {\n              handle.visible = _this2.axis.search(handle.name) !== -1;\n            }\n          } // If updating helper, skip rest of the loop\n          return \"continue\";\n        } // Align handles to current local or world rotation\n\n        handle.quaternion.copy(quaternion);\n        if (_this2.mode === 'translate' || _this2.mode === 'scale') {\n          // Hide translate and scale axis facing the camera\n          var AXIS_HIDE_TRESHOLD = 0.99;\n          var PLANE_HIDE_TRESHOLD = 0.2;\n          var AXIS_FLIP_TRESHOLD = 0.0;\n          if (handle.name === 'X' || handle.name === 'XYZX') {\n            if (Math.abs(_this2.alignVector.copy(_this2.unitX).applyQuaternion(quaternion).dot(_this2.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === 'Y' || handle.name === 'XYZY') {\n            if (Math.abs(_this2.alignVector.copy(_this2.unitY).applyQuaternion(quaternion).dot(_this2.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === 'Z' || handle.name === 'XYZZ') {\n            if (Math.abs(_this2.alignVector.copy(_this2.unitZ).applyQuaternion(quaternion).dot(_this2.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === 'XY') {\n            if (Math.abs(_this2.alignVector.copy(_this2.unitZ).applyQuaternion(quaternion).dot(_this2.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === 'YZ') {\n            if (Math.abs(_this2.alignVector.copy(_this2.unitX).applyQuaternion(quaternion).dot(_this2.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === 'XZ') {\n            if (Math.abs(_this2.alignVector.copy(_this2.unitY).applyQuaternion(quaternion).dot(_this2.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          } // Flip translate and scale axis ocluded behind another axis\n\n          if (handle.name.search('X') !== -1) {\n            if (_this2.alignVector.copy(_this2.unitX).applyQuaternion(quaternion).dot(_this2.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.x *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search('Y') !== -1) {\n            if (_this2.alignVector.copy(_this2.unitY).applyQuaternion(quaternion).dot(_this2.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.y *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search('Z') !== -1) {\n            if (_this2.alignVector.copy(_this2.unitZ).applyQuaternion(quaternion).dot(_this2.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.z *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n        } else if (_this2.mode === 'rotate') {\n          // Align handles to current local or world rotation\n          _this2.tempQuaternion2.copy(quaternion);\n          _this2.alignVector.copy(_this2.eye).applyQuaternion(_this2.tempQuaternion.copy(quaternion).invert());\n          if (handle.name.search('E') !== -1) {\n            handle.quaternion.setFromRotationMatrix(_this2.lookAtMatrix.lookAt(_this2.eye, _this2.zeroVector, _this2.unitY));\n          }\n          if (handle.name === 'X') {\n            _this2.tempQuaternion.setFromAxisAngle(_this2.unitX, Math.atan2(-_this2.alignVector.y, _this2.alignVector.z));\n            _this2.tempQuaternion.multiplyQuaternions(_this2.tempQuaternion2, _this2.tempQuaternion);\n            handle.quaternion.copy(_this2.tempQuaternion);\n          }\n          if (handle.name === 'Y') {\n            _this2.tempQuaternion.setFromAxisAngle(_this2.unitY, Math.atan2(_this2.alignVector.x, _this2.alignVector.z));\n            _this2.tempQuaternion.multiplyQuaternions(_this2.tempQuaternion2, _this2.tempQuaternion);\n            handle.quaternion.copy(_this2.tempQuaternion);\n          }\n          if (handle.name === 'Z') {\n            _this2.tempQuaternion.setFromAxisAngle(_this2.unitZ, Math.atan2(_this2.alignVector.y, _this2.alignVector.x));\n            _this2.tempQuaternion.multiplyQuaternions(_this2.tempQuaternion2, _this2.tempQuaternion);\n            handle.quaternion.copy(_this2.tempQuaternion);\n          }\n        } // Hide disabled axes\n\n        handle.visible = handle.visible && (handle.name.indexOf('X') === -1 || _this2.showX);\n        handle.visible = handle.visible && (handle.name.indexOf('Y') === -1 || _this2.showY);\n        handle.visible = handle.visible && (handle.name.indexOf('Z') === -1 || _this2.showZ);\n        handle.visible = handle.visible && (handle.name.indexOf('E') === -1 || _this2.showX && _this2.showY && _this2.showZ); // highlight selected axis\n        //@ts-ignore\n\n        handle.material.tempOpacity = handle.material.tempOpacity || handle.material.opacity; //@ts-ignore\n\n        handle.material.tempColor = handle.material.tempColor || handle.material.color.clone(); //@ts-ignore\n\n        handle.material.color.copy(handle.material.tempColor); //@ts-ignore\n\n        handle.material.opacity = handle.material.tempOpacity;\n        if (!_this2.enabled) {\n          //@ts-ignore\n          handle.material.opacity *= 0.5; //@ts-ignore\n\n          handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n        } else if (_this2.axis) {\n          if (handle.name === _this2.axis) {\n            //@ts-ignore\n            handle.material.opacity = 1.0; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else if (_this2.axis.split('').some(function (a) {\n            return handle.name === a;\n          })) {\n            //@ts-ignore\n            handle.material.opacity = 1.0; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else {\n            //@ts-ignore\n            handle.material.opacity *= 0.25; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          }\n        }\n      };\n      for (var i = 0; i < handles.length; i++) {\n        var _ret = _loop();\n        if (_ret === \"continue\") continue;\n      }\n      _get((_thisSuper2 = _assertThisInitialized(_this2), _getPrototypeOf(TransformControlsGizmo.prototype)), \"updateMatrixWorld\", _thisSuper2).call(_thisSuper2);\n    });\n    var gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      side: DoubleSide,\n      fog: false,\n      toneMapped: false\n    });\n    var gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      linewidth: 1,\n      fog: false,\n      toneMapped: false\n    }); // Make unique material for each axis/color\n\n    var matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    var matHelper = gizmoMaterial.clone();\n    matHelper.opacity = 0.33;\n    var matRed = gizmoMaterial.clone();\n    matRed.color.set(0xff0000);\n    var matGreen = gizmoMaterial.clone();\n    matGreen.color.set(0x00ff00);\n    var matBlue = gizmoMaterial.clone();\n    matBlue.color.set(0x0000ff);\n    var matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    var matYellowTransparent = matWhiteTransparent.clone();\n    matYellowTransparent.color.set(0xffff00);\n    var matCyanTransparent = matWhiteTransparent.clone();\n    matCyanTransparent.color.set(0x00ffff);\n    var matMagentaTransparent = matWhiteTransparent.clone();\n    matMagentaTransparent.color.set(0xff00ff);\n    var matYellow = gizmoMaterial.clone();\n    matYellow.color.set(0xffff00);\n    var matLineRed = gizmoLineMaterial.clone();\n    matLineRed.color.set(0xff0000);\n    var matLineGreen = gizmoLineMaterial.clone();\n    matLineGreen.color.set(0x00ff00);\n    var matLineBlue = gizmoLineMaterial.clone();\n    matLineBlue.color.set(0x0000ff);\n    var matLineCyan = gizmoLineMaterial.clone();\n    matLineCyan.color.set(0x00ffff);\n    var matLineMagenta = gizmoLineMaterial.clone();\n    matLineMagenta.color.set(0xff00ff);\n    var matLineYellow = gizmoLineMaterial.clone();\n    matLineYellow.color.set(0xffff00);\n    var matLineGray = gizmoLineMaterial.clone();\n    matLineGray.color.set(0x787878);\n    var matLineYellowTransparent = matLineYellow.clone();\n    matLineYellowTransparent.opacity = 0.25; // reusable geometry\n\n    var arrowGeometry = new CylinderGeometry(0, 0.05, 0.2, 12, 1, false);\n    var scaleHandleGeometry = new BoxGeometry(0.125, 0.125, 0.125);\n    var lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n    var CircleGeometry = function CircleGeometry(radius, arc) {\n      var geometry = new BufferGeometry();\n      var vertices = [];\n      for (var i = 0; i <= 64 * arc; ++i) {\n        vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n      }\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      return geometry;\n    }; // Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n    var TranslateHelperGeometry = function TranslateHelperGeometry() {\n      var geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    }; // Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n    var gizmoTranslate = {\n      X: [[new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, -Math.PI / 2], null, 'fwd'], [new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, Math.PI / 2], null, 'bwd'], [new Line(lineGeometry, matLineRed)]],\n      Y: [[new Mesh(arrowGeometry, matGreen), [0, 1, 0], null, null, 'fwd'], [new Mesh(arrowGeometry, matGreen), [0, 1, 0], [Math.PI, 0, 0], null, 'bwd'], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2]]],\n      Z: [[new Mesh(arrowGeometry, matBlue), [0, 0, 1], [Math.PI / 2, 0, 0], null, 'fwd'], [new Mesh(arrowGeometry, matBlue), [0, 0, 1], [-Math.PI / 2, 0, 0], null, 'bwd'], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0], [0, 0, 0]]],\n      XY: [[new Mesh(new PlaneGeometry(0.295, 0.295), matYellowTransparent.clone()), [0.15, 0.15, 0]], [new Line(lineGeometry, matLineYellow), [0.18, 0.3, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.3, 0.18, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matCyanTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]], [new Line(lineGeometry, matLineCyan), [0, 0.18, 0.3], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.3, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matMagentaTransparent.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineMagenta), [0.18, 0, 0.3], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.3, 0, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]]\n    };\n    var pickerTranslate = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0.6, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0.2, 0]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]\n    };\n    var helperTranslate = {\n      START: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      END: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      DELTA: [[new Line(TranslateHelperGeometry(), matHelper), null, null, null, 'helper']],\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    };\n    var gizmoRotate = {\n      X: [[new Line(CircleGeometry(1, 0.5), matLineRed)], [new Mesh(new OctahedronGeometry(0.04, 0), matRed), [0, 0, 0.99], null, [1, 3, 1]]],\n      Y: [[new Line(CircleGeometry(1, 0.5), matLineGreen), null, [0, 0, -Math.PI / 2]], [new Mesh(new OctahedronGeometry(0.04, 0), matGreen), [0, 0, 0.99], null, [3, 1, 1]]],\n      Z: [[new Line(CircleGeometry(1, 0.5), matLineBlue), null, [0, Math.PI / 2, 0]], [new Mesh(new OctahedronGeometry(0.04, 0), matBlue), [0.99, 0, 0], null, [1, 3, 1]]],\n      E: [[new Line(CircleGeometry(1.25, 1), matLineYellowTransparent), null, [0, Math.PI / 2, 0]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [1.17, 0, 0], [0, 0, -Math.PI / 2], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [-1.17, 0, 0], [0, 0, Math.PI / 2], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, -1.17, 0], [Math.PI, 0, 0], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, 1.17, 0], [0, 0, 0], [1, 1, 0.001]]],\n      XYZE: [[new Line(CircleGeometry(1, 1), matLineGray), null, [0, Math.PI / 2, 0]]]\n    };\n    var helperRotate = {\n      AXIS: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']]\n    };\n    var pickerRotate = {\n      X: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n      Y: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n      Z: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      E: [[new Mesh(new TorusGeometry(1.25, 0.1, 2, 24), matInvisible)]],\n      XYZE: [[new Mesh(new SphereGeometry(0.7, 10, 8), matInvisible)]]\n    };\n    var gizmoScale = {\n      X: [[new Mesh(scaleHandleGeometry, matRed), [0.8, 0, 0], [0, 0, -Math.PI / 2]], [new Line(lineGeometry, matLineRed), null, null, [0.8, 1, 1]]],\n      Y: [[new Mesh(scaleHandleGeometry, matGreen), [0, 0.8, 0]], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2], [0.8, 1, 1]]],\n      Z: [[new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.8], [Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0], [0.8, 1, 1]]],\n      XY: [[new Mesh(scaleHandleGeometry, matYellowTransparent), [0.85, 0.85, 0], null, [2, 2, 0.2]], [new Line(lineGeometry, matLineYellow), [0.855, 0.98, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.98, 0.855, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matCyanTransparent), [0, 0.85, 0.85], null, [0.2, 2, 2]], [new Line(lineGeometry, matLineCyan), [0, 0.855, 0.98], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.98, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matMagentaTransparent), [0.85, 0, 0.85], null, [2, 0.2, 2]], [new Line(lineGeometry, matLineMagenta), [0.855, 0, 0.98], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.98, 0, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 0, 1.1]]]\n    };\n    var pickerScale = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0.5, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0.5, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0, 0.5], [Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0.85, 0], null, [3, 3, 0.2]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0, 0.85, 0.85], null, [0.2, 3, 3]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0, 0.85], null, [3, 0.2, 3]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 1.1]]]\n    };\n    var helperScale = {\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    }; // Creates an Object3D with gizmos described in custom hierarchy definition.\n    // this is nearly impossible to Type so i'm leaving it\n\n    var setupGizmo = function setupGizmo(gizmoMap) {\n      var gizmo = new Object3D();\n      for (var name in gizmoMap) {\n        for (var i = gizmoMap[name].length; i--;) {\n          var object = gizmoMap[name][i][0].clone();\n          var position = gizmoMap[name][i][1];\n          var rotation = gizmoMap[name][i][2];\n          var scale = gizmoMap[name][i][3];\n          var tag = gizmoMap[name][i][4]; // name and tag properties are essential for picking and updating logic.\n\n          object.name = name; // @ts-ignore\n\n          object.tag = tag;\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n          object.updateMatrix();\n          var tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n      return gizmo;\n    };\n    _this2.gizmo = {};\n    _this2.picker = {};\n    _this2.helper = {};\n    _this2.add(_this2.gizmo['translate'] = setupGizmo(gizmoTranslate));\n    _this2.add(_this2.gizmo['rotate'] = setupGizmo(gizmoRotate));\n    _this2.add(_this2.gizmo['scale'] = setupGizmo(gizmoScale));\n    _this2.add(_this2.picker['translate'] = setupGizmo(pickerTranslate));\n    _this2.add(_this2.picker['rotate'] = setupGizmo(pickerRotate));\n    _this2.add(_this2.picker['scale'] = setupGizmo(pickerScale));\n    _this2.add(_this2.helper['translate'] = setupGizmo(helperTranslate));\n    _this2.add(_this2.helper['rotate'] = setupGizmo(helperRotate));\n    _this2.add(_this2.helper['scale'] = setupGizmo(helperScale)); // Pickers should be hidden always\n\n    _this2.picker['translate'].visible = false;\n    _this2.picker['rotate'].visible = false;\n    _this2.picker['scale'].visible = false;\n    return _this2;\n  } // updateMatrixWorld will update transformations and appearance of individual handles\n  return _createClass(TransformControlsGizmo);\n}(Object3D);\nvar TransformControlsPlane = /*#__PURE__*/function (_Mesh) {\n  _inherits(TransformControlsPlane, _Mesh);\n  var _super3 = _createSuper(TransformControlsPlane);\n  function TransformControlsPlane() {\n    var _thisSuper3, _this3;\n    _classCallCheck(this, TransformControlsPlane);\n    _this3 = _super3.call(this, new PlaneGeometry(100000, 100000, 2, 2), new MeshBasicMaterial({\n      visible: false,\n      wireframe: true,\n      side: DoubleSide,\n      transparent: true,\n      opacity: 0.1,\n      toneMapped: false\n    }));\n    _defineProperty(_assertThisInitialized(_this3), \"isTransformControlsPlane\", true);\n    _defineProperty(_assertThisInitialized(_this3), \"type\", 'TransformControlsPlane');\n    _defineProperty(_assertThisInitialized(_this3), \"unitX\", new Vector3(1, 0, 0));\n    _defineProperty(_assertThisInitialized(_this3), \"unitY\", new Vector3(0, 1, 0));\n    _defineProperty(_assertThisInitialized(_this3), \"unitZ\", new Vector3(0, 0, 1));\n    _defineProperty(_assertThisInitialized(_this3), \"tempVector\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this3), \"dirVector\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this3), \"alignVector\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this3), \"tempMatrix\", new Matrix4());\n    _defineProperty(_assertThisInitialized(_this3), \"identityQuaternion\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this3), \"cameraQuaternion\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this3), \"worldPosition\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this3), \"worldQuaternion\", new Quaternion());\n    _defineProperty(_assertThisInitialized(_this3), \"eye\", new Vector3());\n    _defineProperty(_assertThisInitialized(_this3), \"axis\", null);\n    _defineProperty(_assertThisInitialized(_this3), \"mode\", 'translate');\n    _defineProperty(_assertThisInitialized(_this3), \"space\", 'world');\n    _defineProperty(_assertThisInitialized(_this3), \"updateMatrixWorld\", function () {\n      var space = _this3.space;\n      _this3.position.copy(_this3.worldPosition);\n      if (_this3.mode === 'scale') space = 'local'; // scale always oriented to local rotation\n\n      _this3.unitX.set(1, 0, 0).applyQuaternion(space === 'local' ? _this3.worldQuaternion : _this3.identityQuaternion);\n      _this3.unitY.set(0, 1, 0).applyQuaternion(space === 'local' ? _this3.worldQuaternion : _this3.identityQuaternion);\n      _this3.unitZ.set(0, 0, 1).applyQuaternion(space === 'local' ? _this3.worldQuaternion : _this3.identityQuaternion); // Align the plane for current transform mode, axis and space.\n\n      _this3.alignVector.copy(_this3.unitY);\n      switch (_this3.mode) {\n        case 'translate':\n        case 'scale':\n          switch (_this3.axis) {\n            case 'X':\n              _this3.alignVector.copy(_this3.eye).cross(_this3.unitX);\n              _this3.dirVector.copy(_this3.unitX).cross(_this3.alignVector);\n              break;\n            case 'Y':\n              _this3.alignVector.copy(_this3.eye).cross(_this3.unitY);\n              _this3.dirVector.copy(_this3.unitY).cross(_this3.alignVector);\n              break;\n            case 'Z':\n              _this3.alignVector.copy(_this3.eye).cross(_this3.unitZ);\n              _this3.dirVector.copy(_this3.unitZ).cross(_this3.alignVector);\n              break;\n            case 'XY':\n              _this3.dirVector.copy(_this3.unitZ);\n              break;\n            case 'YZ':\n              _this3.dirVector.copy(_this3.unitX);\n              break;\n            case 'XZ':\n              _this3.alignVector.copy(_this3.unitZ);\n              _this3.dirVector.copy(_this3.unitY);\n              break;\n            case 'XYZ':\n            case 'E':\n              _this3.dirVector.set(0, 0, 0);\n              break;\n          }\n          break;\n        case 'rotate':\n        default:\n          // special case for rotate\n          _this3.dirVector.set(0, 0, 0);\n      }\n      if (_this3.dirVector.length() === 0) {\n        // If in rotate mode, make the plane parallel to camera\n        _this3.quaternion.copy(_this3.cameraQuaternion);\n      } else {\n        _this3.tempMatrix.lookAt(_this3.tempVector.set(0, 0, 0), _this3.dirVector, _this3.alignVector);\n        _this3.quaternion.setFromRotationMatrix(_this3.tempMatrix);\n      }\n      _get((_thisSuper3 = _assertThisInitialized(_this3), _getPrototypeOf(TransformControlsPlane.prototype)), \"updateMatrixWorld\", _thisSuper3).call(_thisSuper3);\n    });\n    return _this3;\n  }\n  return _createClass(TransformControlsPlane);\n}(Mesh);\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };","map":{"version":3,"names":["_defineProperty","Object3D","Raycaster","Vector3","Quaternion","Euler","Matrix4","Color","MeshBasicMaterial","DoubleSide","LineBasicMaterial","CylinderGeometry","BoxGeometry","BufferGeometry","Float32BufferAttribute","Mesh","Line","OctahedronGeometry","PlaneGeometry","TorusGeometry","SphereGeometry","TransformControls","_Object3D","_inherits","_super","_createSuper","camera","_domElement","_thisSuper","_this","_classCallCheck","call","_assertThisInitialized","X","Y","Z","type","mode","object","raycaster","includeInvisible","allIntersections","intersectObject","i","length","visible","undefined","axis","enabled","dragging","position","copy","positionStart","quaternion","quaternionStart","scale","scaleStart","dispatchEvent","changeEvent","objectChangeEvent","pointStart","pointEnd","updateMatrixWorld","parent","console","error","matrixWorld","decompose","parentPosition","parentQuaternion","parentScale","worldPosition","worldQuaternion","worldScale","parentQuaternionInv","invert","worldQuaternionInv","cameraPosition","cameraQuaternion","cameraScale","eye","sub","normalize","_get","_getPrototypeOf","prototype","pointer","setFromCamera","intersect","intersectObjectWithRay","gizmo","picker","name","button","planeIntersect","plane","space","snap","rotationSnap","rotation","x","Math","round","y","z","worldPositionStart","worldQuaternionStart","worldScaleStart","point","mouseDownEvent","offset","applyQuaternion","indexOf","divide","add","translationSnap","tempQuaternion","search","tempVector","setFromMatrixPosition","d","dot","tempVector2","set","multiply","scaleSnap","ROTATION_SPEED","distanceTo","rotationAxis","rotationAngle","angleTo","startNorm","endNorm","cross","unit","setFromAxisAngle","mouseUpEvent","event","_this$domElement$owne","domElement","ownerDocument","pointerLockElement","_this$domElement","changedTouches","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","pointerType","pointerHover","getPointer","style","touchAction","addEventListener","onPointerMove","pointerDown","pointerMove","removeEventListener","pointerUp","size","warn","document","onPointerDown","onPointerHover","onPointerUp","_this$domElement2","_this$domElement3","_this$domElement4","_this$domElement4$own","_this$domElement5","_this$domElement5$own","traverse","child","mesh","geometry","dispose","material","TransformControlsGizmo","TransformControlsPlane","defineProperty","propName","defaultValue","propValue","Object","get","value","showX","showY","showZ","connect","_createClass","_Object3D2","_super2","_thisSuper2","_this2","identityQuaternion","helper","handles","concat","children","_loop","handle","factor","isOrthographicCamera","bottom","zoom","min","tan","PI","fov","multiplyScalar","tag","setFromEuler","tempEuler","abs","alignVector","unitX","unitY","unitZ","setFromRotationMatrix","lookAtMatrix","lookAt","zeroVector","clone","AXIS_HIDE_TRESHOLD","PLANE_HIDE_TRESHOLD","AXIS_FLIP_TRESHOLD","tempQuaternion2","atan2","multiplyQuaternions","tempOpacity","opacity","tempColor","color","lerp","split","some","a","_ret","gizmoMaterial","depthTest","depthWrite","transparent","side","fog","toneMapped","gizmoLineMaterial","linewidth","matInvisible","matHelper","matRed","matGreen","matBlue","matWhiteTransparent","matYellowTransparent","matCyanTransparent","matMagentaTransparent","matYellow","matLineRed","matLineGreen","matLineBlue","matLineCyan","matLineMagenta","matLineYellow","matLineGray","matLineYellowTransparent","arrowGeometry","scaleHandleGeometry","lineGeometry","setAttribute","CircleGeometry","radius","arc","vertices","push","cos","sin","TranslateHelperGeometry","gizmoTranslate","XYZ","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","E","XYZE","helperRotate","AXIS","pickerRotate","gizmoScale","XYZX","XYZY","XYZZ","pickerScale","helperScale","setupGizmo","gizmoMap","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","_Mesh","_super3","_thisSuper3","_this3","wireframe","dirVector","tempMatrix"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/controls/TransformControls.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Object3D, Raycaster, Vector3, Quaternion, Euler, Matrix4, Color, MeshBasicMaterial, DoubleSide, LineBasicMaterial, CylinderGeometry, BoxGeometry, BufferGeometry, Float32BufferAttribute, Mesh, Line, OctahedronGeometry, PlaneGeometry, TorusGeometry, SphereGeometry } from 'three';\n\nclass TransformControls extends Object3D {\n  // events\n  constructor(camera, _domElement) {\n    super();\n\n    _defineProperty(this, \"isTransformControls\", true);\n\n    _defineProperty(this, \"visible\", false);\n\n    _defineProperty(this, \"domElement\", void 0);\n\n    _defineProperty(this, \"raycaster\", new Raycaster());\n\n    _defineProperty(this, \"gizmo\", void 0);\n\n    _defineProperty(this, \"plane\", void 0);\n\n    _defineProperty(this, \"tempVector\", new Vector3());\n\n    _defineProperty(this, \"tempVector2\", new Vector3());\n\n    _defineProperty(this, \"tempQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"unit\", {\n      X: new Vector3(1, 0, 0),\n      Y: new Vector3(0, 1, 0),\n      Z: new Vector3(0, 0, 1)\n    });\n\n    _defineProperty(this, \"pointStart\", new Vector3());\n\n    _defineProperty(this, \"pointEnd\", new Vector3());\n\n    _defineProperty(this, \"offset\", new Vector3());\n\n    _defineProperty(this, \"rotationAxis\", new Vector3());\n\n    _defineProperty(this, \"startNorm\", new Vector3());\n\n    _defineProperty(this, \"endNorm\", new Vector3());\n\n    _defineProperty(this, \"rotationAngle\", 0);\n\n    _defineProperty(this, \"cameraPosition\", new Vector3());\n\n    _defineProperty(this, \"cameraQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"cameraScale\", new Vector3());\n\n    _defineProperty(this, \"parentPosition\", new Vector3());\n\n    _defineProperty(this, \"parentQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"parentQuaternionInv\", new Quaternion());\n\n    _defineProperty(this, \"parentScale\", new Vector3());\n\n    _defineProperty(this, \"worldPositionStart\", new Vector3());\n\n    _defineProperty(this, \"worldQuaternionStart\", new Quaternion());\n\n    _defineProperty(this, \"worldScaleStart\", new Vector3());\n\n    _defineProperty(this, \"worldPosition\", new Vector3());\n\n    _defineProperty(this, \"worldQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"worldQuaternionInv\", new Quaternion());\n\n    _defineProperty(this, \"worldScale\", new Vector3());\n\n    _defineProperty(this, \"eye\", new Vector3());\n\n    _defineProperty(this, \"positionStart\", new Vector3());\n\n    _defineProperty(this, \"quaternionStart\", new Quaternion());\n\n    _defineProperty(this, \"scaleStart\", new Vector3());\n\n    _defineProperty(this, \"camera\", void 0);\n\n    _defineProperty(this, \"object\", void 0);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"axis\", null);\n\n    _defineProperty(this, \"mode\", 'translate');\n\n    _defineProperty(this, \"translationSnap\", null);\n\n    _defineProperty(this, \"rotationSnap\", null);\n\n    _defineProperty(this, \"scaleSnap\", null);\n\n    _defineProperty(this, \"space\", 'world');\n\n    _defineProperty(this, \"size\", 1);\n\n    _defineProperty(this, \"dragging\", false);\n\n    _defineProperty(this, \"showX\", true);\n\n    _defineProperty(this, \"showY\", true);\n\n    _defineProperty(this, \"showZ\", true);\n\n    _defineProperty(this, \"changeEvent\", {\n      type: 'change'\n    });\n\n    _defineProperty(this, \"mouseDownEvent\", {\n      type: 'mouseDown',\n      mode: this.mode\n    });\n\n    _defineProperty(this, \"mouseUpEvent\", {\n      type: 'mouseUp',\n      mode: this.mode\n    });\n\n    _defineProperty(this, \"objectChangeEvent\", {\n      type: 'objectChange'\n    });\n\n    _defineProperty(this, \"intersectObjectWithRay\", (object, raycaster, includeInvisible) => {\n      const allIntersections = raycaster.intersectObject(object, true);\n\n      for (let i = 0; i < allIntersections.length; i++) {\n        if (allIntersections[i].object.visible || includeInvisible) {\n          return allIntersections[i];\n        }\n      }\n\n      return false;\n    });\n\n    _defineProperty(this, \"attach\", object => {\n      this.object = object;\n      this.visible = true;\n      return this;\n    });\n\n    _defineProperty(this, \"detach\", () => {\n      this.object = undefined;\n      this.visible = false;\n      this.axis = null;\n      return this;\n    });\n\n    _defineProperty(this, \"reset\", () => {\n      if (!this.enabled) return this;\n\n      if (this.dragging) {\n        if (this.object !== undefined) {\n          this.object.position.copy(this.positionStart);\n          this.object.quaternion.copy(this.quaternionStart);\n          this.object.scale.copy(this.scaleStart);\n          this.dispatchEvent(this.changeEvent);\n          this.dispatchEvent(this.objectChangeEvent);\n          this.pointStart.copy(this.pointEnd);\n        }\n      }\n\n      return this;\n    });\n\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      if (this.object !== undefined) {\n        this.object.updateMatrixWorld();\n\n        if (this.object.parent === null) {\n          console.error('TransformControls: The attached 3D object must be a part of the scene graph.');\n        } else {\n          this.object.parent.matrixWorld.decompose(this.parentPosition, this.parentQuaternion, this.parentScale);\n        }\n\n        this.object.matrixWorld.decompose(this.worldPosition, this.worldQuaternion, this.worldScale);\n        this.parentQuaternionInv.copy(this.parentQuaternion).invert();\n        this.worldQuaternionInv.copy(this.worldQuaternion).invert();\n      }\n\n      this.camera.updateMatrixWorld();\n      this.camera.matrixWorld.decompose(this.cameraPosition, this.cameraQuaternion, this.cameraScale);\n      this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize();\n      super.updateMatrixWorld();\n    });\n\n    _defineProperty(this, \"pointerHover\", pointer => {\n      if (this.object === undefined || this.dragging === true) return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const intersect = this.intersectObjectWithRay(this.gizmo.picker[this.mode], this.raycaster);\n\n      if (intersect) {\n        this.axis = intersect.object.name;\n      } else {\n        this.axis = null;\n      }\n    });\n\n    _defineProperty(this, \"pointerDown\", pointer => {\n      if (this.object === undefined || this.dragging === true || pointer.button !== 0) return;\n\n      if (this.axis !== null) {\n        this.raycaster.setFromCamera(pointer, this.camera);\n        const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n\n        if (planeIntersect) {\n          let space = this.space;\n\n          if (this.mode === 'scale') {\n            space = 'local';\n          } else if (this.axis === 'E' || this.axis === 'XYZE' || this.axis === 'XYZ') {\n            space = 'world';\n          }\n\n          if (space === 'local' && this.mode === 'rotate') {\n            const snap = this.rotationSnap;\n            if (this.axis === 'X' && snap) this.object.rotation.x = Math.round(this.object.rotation.x / snap) * snap;\n            if (this.axis === 'Y' && snap) this.object.rotation.y = Math.round(this.object.rotation.y / snap) * snap;\n            if (this.axis === 'Z' && snap) this.object.rotation.z = Math.round(this.object.rotation.z / snap) * snap;\n          }\n\n          this.object.updateMatrixWorld();\n\n          if (this.object.parent) {\n            this.object.parent.updateMatrixWorld();\n          }\n\n          this.positionStart.copy(this.object.position);\n          this.quaternionStart.copy(this.object.quaternion);\n          this.scaleStart.copy(this.object.scale);\n          this.object.matrixWorld.decompose(this.worldPositionStart, this.worldQuaternionStart, this.worldScaleStart);\n          this.pointStart.copy(planeIntersect.point).sub(this.worldPositionStart);\n        }\n\n        this.dragging = true;\n        this.mouseDownEvent.mode = this.mode;\n        this.dispatchEvent(this.mouseDownEvent);\n      }\n    });\n\n    _defineProperty(this, \"pointerMove\", pointer => {\n      const axis = this.axis;\n      const mode = this.mode;\n      const object = this.object;\n      let space = this.space;\n\n      if (mode === 'scale') {\n        space = 'local';\n      } else if (axis === 'E' || axis === 'XYZE' || axis === 'XYZ') {\n        space = 'world';\n      }\n\n      if (object === undefined || axis === null || this.dragging === false || pointer.button !== -1) return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n      if (!planeIntersect) return;\n      this.pointEnd.copy(planeIntersect.point).sub(this.worldPositionStart);\n\n      if (mode === 'translate') {\n        // Apply translate\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n\n        if (space === 'local' && axis !== 'XYZ') {\n          this.offset.applyQuaternion(this.worldQuaternionInv);\n        }\n\n        if (axis.indexOf('X') === -1) this.offset.x = 0;\n        if (axis.indexOf('Y') === -1) this.offset.y = 0;\n        if (axis.indexOf('Z') === -1) this.offset.z = 0;\n\n        if (space === 'local' && axis !== 'XYZ') {\n          this.offset.applyQuaternion(this.quaternionStart).divide(this.parentScale);\n        } else {\n          this.offset.applyQuaternion(this.parentQuaternionInv).divide(this.parentScale);\n        }\n\n        object.position.copy(this.offset).add(this.positionStart); // Apply translation snap\n\n        if (this.translationSnap) {\n          if (space === 'local') {\n            object.position.applyQuaternion(this.tempQuaternion.copy(this.quaternionStart).invert());\n\n            if (axis.search('X') !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search('Y') !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search('Z') !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n\n            object.position.applyQuaternion(this.quaternionStart);\n          }\n\n          if (space === 'world') {\n            if (object.parent) {\n              object.position.add(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n\n            if (axis.search('X') !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search('Y') !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search('Z') !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n\n            if (object.parent) {\n              object.position.sub(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n          }\n        }\n      } else if (mode === 'scale') {\n        if (axis.search('XYZ') !== -1) {\n          let d = this.pointEnd.length() / this.pointStart.length();\n          if (this.pointEnd.dot(this.pointStart) < 0) d *= -1;\n          this.tempVector2.set(d, d, d);\n        } else {\n          this.tempVector.copy(this.pointStart);\n          this.tempVector2.copy(this.pointEnd);\n          this.tempVector.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.divide(this.tempVector);\n\n          if (axis.search('X') === -1) {\n            this.tempVector2.x = 1;\n          }\n\n          if (axis.search('Y') === -1) {\n            this.tempVector2.y = 1;\n          }\n\n          if (axis.search('Z') === -1) {\n            this.tempVector2.z = 1;\n          }\n        } // Apply scale\n\n\n        object.scale.copy(this.scaleStart).multiply(this.tempVector2);\n\n        if (this.scaleSnap && this.object) {\n          if (axis.search('X') !== -1) {\n            this.object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n\n          if (axis.search('Y') !== -1) {\n            object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n\n          if (axis.search('Z') !== -1) {\n            object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n        }\n      } else if (mode === 'rotate') {\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n        const ROTATION_SPEED = 20 / this.worldPosition.distanceTo(this.tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n\n        if (axis === 'E') {\n          this.rotationAxis.copy(this.eye);\n          this.rotationAngle = this.pointEnd.angleTo(this.pointStart);\n          this.startNorm.copy(this.pointStart).normalize();\n          this.endNorm.copy(this.pointEnd).normalize();\n          this.rotationAngle *= this.endNorm.cross(this.startNorm).dot(this.eye) < 0 ? 1 : -1;\n        } else if (axis === 'XYZE') {\n          this.rotationAxis.copy(this.offset).cross(this.eye).normalize();\n          this.rotationAngle = this.offset.dot(this.tempVector.copy(this.rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n        } else if (axis === 'X' || axis === 'Y' || axis === 'Z') {\n          this.rotationAxis.copy(this.unit[axis]);\n          this.tempVector.copy(this.unit[axis]);\n\n          if (space === 'local') {\n            this.tempVector.applyQuaternion(this.worldQuaternion);\n          }\n\n          this.rotationAngle = this.offset.dot(this.tempVector.cross(this.eye).normalize()) * ROTATION_SPEED;\n        } // Apply rotation snap\n\n\n        if (this.rotationSnap) {\n          this.rotationAngle = Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap;\n        } // Apply rotate\n\n\n        if (space === 'local' && axis !== 'E' && axis !== 'XYZE') {\n          object.quaternion.copy(this.quaternionStart);\n          object.quaternion.multiply(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)).normalize();\n        } else {\n          this.rotationAxis.applyQuaternion(this.parentQuaternionInv);\n          object.quaternion.copy(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle));\n          object.quaternion.multiply(this.quaternionStart).normalize();\n        }\n      }\n\n      this.dispatchEvent(this.changeEvent);\n      this.dispatchEvent(this.objectChangeEvent);\n    });\n\n    _defineProperty(this, \"pointerUp\", pointer => {\n      if (pointer.button !== 0) return;\n\n      if (this.dragging && this.axis !== null) {\n        this.mouseUpEvent.mode = this.mode;\n        this.dispatchEvent(this.mouseUpEvent);\n      }\n\n      this.dragging = false;\n      this.axis = null;\n    });\n\n    _defineProperty(this, \"getPointer\", event => {\n      var _this$domElement$owne;\n\n      if (this.domElement && (_this$domElement$owne = this.domElement.ownerDocument) !== null && _this$domElement$owne !== void 0 && _this$domElement$owne.pointerLockElement) {\n        return {\n          x: 0,\n          y: 0,\n          button: event.button\n        };\n      } else {\n        var _this$domElement;\n\n        const pointer = event.changedTouches ? event.changedTouches[0] : event;\n        const rect = (_this$domElement = this.domElement) === null || _this$domElement === void 0 ? void 0 : _this$domElement.getBoundingClientRect();\n        return {\n          x: (pointer.clientX - rect.left) / rect.width * 2 - 1,\n          y: -(pointer.clientY - rect.top) / rect.height * 2 + 1,\n          button: event.button\n        };\n      }\n    });\n\n    _defineProperty(this, \"onPointerHover\", event => {\n      if (!this.enabled) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          this.pointerHover(this.getPointer(event));\n          break;\n      }\n    });\n\n    _defineProperty(this, \"onPointerDown\", event => {\n      if (!this.enabled || !this.domElement) return;\n      this.domElement.style.touchAction = 'none'; // disable touch scroll\n\n      this.domElement.ownerDocument.addEventListener('pointermove', this.onPointerMove);\n      this.pointerHover(this.getPointer(event));\n      this.pointerDown(this.getPointer(event));\n    });\n\n    _defineProperty(this, \"onPointerMove\", event => {\n      if (!this.enabled) return;\n      this.pointerMove(this.getPointer(event));\n    });\n\n    _defineProperty(this, \"onPointerUp\", event => {\n      if (!this.enabled || !this.domElement) return;\n      this.domElement.style.touchAction = '';\n      this.domElement.ownerDocument.removeEventListener('pointermove', this.onPointerMove);\n      this.pointerUp(this.getPointer(event));\n    });\n\n    _defineProperty(this, \"getMode\", () => this.mode);\n\n    _defineProperty(this, \"setMode\", mode => {\n      this.mode = mode;\n    });\n\n    _defineProperty(this, \"setTranslationSnap\", translationSnap => {\n      this.translationSnap = translationSnap;\n    });\n\n    _defineProperty(this, \"setRotationSnap\", rotationSnap => {\n      this.rotationSnap = rotationSnap;\n    });\n\n    _defineProperty(this, \"setScaleSnap\", scaleSnap => {\n      this.scaleSnap = scaleSnap;\n    });\n\n    _defineProperty(this, \"setSize\", size => {\n      this.size = size;\n    });\n\n    _defineProperty(this, \"setSpace\", space => {\n      this.space = space;\n    });\n\n    _defineProperty(this, \"update\", () => {\n      console.warn('THREE.TransformControls: update function has no more functionality and therefore has been deprecated.');\n    });\n\n    _defineProperty(this, \"connect\", domElement => {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n\n      this.domElement = domElement;\n      this.domElement.addEventListener('pointerdown', this.onPointerDown);\n      this.domElement.addEventListener('pointermove', this.onPointerHover);\n      this.domElement.ownerDocument.addEventListener('pointerup', this.onPointerUp);\n    });\n\n    _defineProperty(this, \"dispose\", () => {\n      var _this$domElement2, _this$domElement3, _this$domElement4, _this$domElement4$own, _this$domElement5, _this$domElement5$own;\n\n      (_this$domElement2 = this.domElement) === null || _this$domElement2 === void 0 ? void 0 : _this$domElement2.removeEventListener('pointerdown', this.onPointerDown);\n      (_this$domElement3 = this.domElement) === null || _this$domElement3 === void 0 ? void 0 : _this$domElement3.removeEventListener('pointermove', this.onPointerHover);\n      (_this$domElement4 = this.domElement) === null || _this$domElement4 === void 0 ? void 0 : (_this$domElement4$own = _this$domElement4.ownerDocument) === null || _this$domElement4$own === void 0 ? void 0 : _this$domElement4$own.removeEventListener('pointermove', this.onPointerMove);\n      (_this$domElement5 = this.domElement) === null || _this$domElement5 === void 0 ? void 0 : (_this$domElement5$own = _this$domElement5.ownerDocument) === null || _this$domElement5$own === void 0 ? void 0 : _this$domElement5$own.removeEventListener('pointerup', this.onPointerUp);\n      this.traverse(child => {\n        const mesh = child;\n\n        if (mesh.geometry) {\n          mesh.geometry.dispose();\n        }\n\n        if (mesh.material) {\n          mesh.material.dispose();\n        }\n      });\n    });\n\n    this.domElement = _domElement;\n    this.camera = camera;\n    this.gizmo = new TransformControlsGizmo();\n    this.add(this.gizmo);\n    this.plane = new TransformControlsPlane();\n    this.add(this.plane); // Defined getter, setter and store for a property\n\n    const defineProperty = (propName, defaultValue) => {\n      let propValue = defaultValue;\n      Object.defineProperty(this, propName, {\n        get: function () {\n          return propValue !== undefined ? propValue : defaultValue;\n        },\n        set: function (value) {\n          if (propValue !== value) {\n            propValue = value;\n            this.plane[propName] = value;\n            this.gizmo[propName] = value;\n            this.dispatchEvent({\n              type: propName + '-changed',\n              value: value\n            });\n            this.dispatchEvent(this.changeEvent);\n          }\n        }\n      }); //@ts-ignore\n\n      this[propName] = defaultValue; // @ts-ignore\n\n      this.plane[propName] = defaultValue; // @ts-ignore\n\n      this.gizmo[propName] = defaultValue;\n    };\n\n    defineProperty('camera', this.camera);\n    defineProperty('object', this.object);\n    defineProperty('enabled', this.enabled);\n    defineProperty('axis', this.axis);\n    defineProperty('mode', this.mode);\n    defineProperty('translationSnap', this.translationSnap);\n    defineProperty('rotationSnap', this.rotationSnap);\n    defineProperty('scaleSnap', this.scaleSnap);\n    defineProperty('space', this.space);\n    defineProperty('size', this.size);\n    defineProperty('dragging', this.dragging);\n    defineProperty('showX', this.showX);\n    defineProperty('showY', this.showY);\n    defineProperty('showZ', this.showZ);\n    defineProperty('worldPosition', this.worldPosition);\n    defineProperty('worldPositionStart', this.worldPositionStart);\n    defineProperty('worldQuaternion', this.worldQuaternion);\n    defineProperty('worldQuaternionStart', this.worldQuaternionStart);\n    defineProperty('cameraPosition', this.cameraPosition);\n    defineProperty('cameraQuaternion', this.cameraQuaternion);\n    defineProperty('pointStart', this.pointStart);\n    defineProperty('pointEnd', this.pointEnd);\n    defineProperty('rotationAxis', this.rotationAxis);\n    defineProperty('rotationAngle', this.rotationAngle);\n    defineProperty('eye', this.eye); // connect events\n\n    if (_domElement !== undefined) this.connect(_domElement);\n  }\n\n}\n\nclass TransformControlsGizmo extends Object3D {\n  // these are set from parent class TransformControls\n  constructor() {\n    super();\n\n    _defineProperty(this, \"isTransformControlsGizmo\", true);\n\n    _defineProperty(this, \"type\", 'TransformControlsGizmo');\n\n    _defineProperty(this, \"tempVector\", new Vector3(0, 0, 0));\n\n    _defineProperty(this, \"tempEuler\", new Euler());\n\n    _defineProperty(this, \"alignVector\", new Vector3(0, 1, 0));\n\n    _defineProperty(this, \"zeroVector\", new Vector3(0, 0, 0));\n\n    _defineProperty(this, \"lookAtMatrix\", new Matrix4());\n\n    _defineProperty(this, \"tempQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"tempQuaternion2\", new Quaternion());\n\n    _defineProperty(this, \"identityQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"unitX\", new Vector3(1, 0, 0));\n\n    _defineProperty(this, \"unitY\", new Vector3(0, 1, 0));\n\n    _defineProperty(this, \"unitZ\", new Vector3(0, 0, 1));\n\n    _defineProperty(this, \"gizmo\", void 0);\n\n    _defineProperty(this, \"picker\", void 0);\n\n    _defineProperty(this, \"helper\", void 0);\n\n    _defineProperty(this, \"rotationAxis\", new Vector3());\n\n    _defineProperty(this, \"cameraPosition\", new Vector3());\n\n    _defineProperty(this, \"worldPositionStart\", new Vector3());\n\n    _defineProperty(this, \"worldQuaternionStart\", new Quaternion());\n\n    _defineProperty(this, \"worldPosition\", new Vector3());\n\n    _defineProperty(this, \"worldQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"eye\", new Vector3());\n\n    _defineProperty(this, \"camera\", null);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"axis\", null);\n\n    _defineProperty(this, \"mode\", 'translate');\n\n    _defineProperty(this, \"space\", 'world');\n\n    _defineProperty(this, \"size\", 1);\n\n    _defineProperty(this, \"dragging\", false);\n\n    _defineProperty(this, \"showX\", true);\n\n    _defineProperty(this, \"showY\", true);\n\n    _defineProperty(this, \"showZ\", true);\n\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n\n      if (this.mode === 'scale') {\n        space = 'local'; // scale always oriented to local rotation\n      }\n\n      const quaternion = space === 'local' ? this.worldQuaternion : this.identityQuaternion; // Show only gizmos for current transform mode\n\n      this.gizmo['translate'].visible = this.mode === 'translate';\n      this.gizmo['rotate'].visible = this.mode === 'rotate';\n      this.gizmo['scale'].visible = this.mode === 'scale';\n      this.helper['translate'].visible = this.mode === 'translate';\n      this.helper['rotate'].visible = this.mode === 'rotate';\n      this.helper['scale'].visible = this.mode === 'scale';\n      let handles = [];\n      handles = handles.concat(this.picker[this.mode].children);\n      handles = handles.concat(this.gizmo[this.mode].children);\n      handles = handles.concat(this.helper[this.mode].children);\n\n      for (let i = 0; i < handles.length; i++) {\n        const handle = handles[i]; // hide aligned to camera\n\n        handle.visible = true;\n        handle.rotation.set(0, 0, 0);\n        handle.position.copy(this.worldPosition);\n        let factor;\n\n        if (this.camera.isOrthographicCamera) {\n          factor = (this.camera.top - this.camera.bottom) / this.camera.zoom;\n        } else {\n          factor = this.worldPosition.distanceTo(this.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this.camera.fov / 360) / this.camera.zoom, 7);\n        }\n\n        handle.scale.set(1, 1, 1).multiplyScalar(factor * this.size / 7); // TODO: simplify helpers and consider decoupling from gizmo\n\n        if (handle.tag === 'helper') {\n          handle.visible = false;\n\n          if (handle.name === 'AXIS') {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = !!this.axis;\n\n            if (this.axis === 'X') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this.axis === 'Y') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, Math.PI / 2));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this.axis === 'Z') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this.axis === 'XYZE') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              this.alignVector.copy(this.rotationAxis);\n              handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.zeroVector, this.alignVector, this.unitY));\n              handle.quaternion.multiply(this.tempQuaternion);\n              handle.visible = this.dragging;\n            }\n\n            if (this.axis === 'E') {\n              handle.visible = false;\n            }\n          } else if (handle.name === 'START') {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = this.dragging;\n          } else if (handle.name === 'END') {\n            handle.position.copy(this.worldPosition);\n            handle.visible = this.dragging;\n          } else if (handle.name === 'DELTA') {\n            handle.position.copy(this.worldPositionStart);\n            handle.quaternion.copy(this.worldQuaternionStart);\n            this.tempVector.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1);\n            this.tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert());\n            handle.scale.copy(this.tempVector);\n            handle.visible = this.dragging;\n          } else {\n            handle.quaternion.copy(quaternion);\n\n            if (this.dragging) {\n              handle.position.copy(this.worldPositionStart);\n            } else {\n              handle.position.copy(this.worldPosition);\n            }\n\n            if (this.axis) {\n              handle.visible = this.axis.search(handle.name) !== -1;\n            }\n          } // If updating helper, skip rest of the loop\n\n\n          continue;\n        } // Align handles to current local or world rotation\n\n\n        handle.quaternion.copy(quaternion);\n\n        if (this.mode === 'translate' || this.mode === 'scale') {\n          // Hide translate and scale axis facing the camera\n          const AXIS_HIDE_TRESHOLD = 0.99;\n          const PLANE_HIDE_TRESHOLD = 0.2;\n          const AXIS_FLIP_TRESHOLD = 0.0;\n\n          if (handle.name === 'X' || handle.name === 'XYZX') {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'Y' || handle.name === 'XYZY') {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'Z' || handle.name === 'XYZZ') {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'XY') {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'YZ') {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'XZ') {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          } // Flip translate and scale axis ocluded behind another axis\n\n\n          if (handle.name.search('X') !== -1) {\n            if (this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.x *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name.search('Y') !== -1) {\n            if (this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.y *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name.search('Z') !== -1) {\n            if (this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.z *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n        } else if (this.mode === 'rotate') {\n          // Align handles to current local or world rotation\n          this.tempQuaternion2.copy(quaternion);\n          this.alignVector.copy(this.eye).applyQuaternion(this.tempQuaternion.copy(quaternion).invert());\n\n          if (handle.name.search('E') !== -1) {\n            handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.eye, this.zeroVector, this.unitY));\n          }\n\n          if (handle.name === 'X') {\n            this.tempQuaternion.setFromAxisAngle(this.unitX, Math.atan2(-this.alignVector.y, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n\n          if (handle.name === 'Y') {\n            this.tempQuaternion.setFromAxisAngle(this.unitY, Math.atan2(this.alignVector.x, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n\n          if (handle.name === 'Z') {\n            this.tempQuaternion.setFromAxisAngle(this.unitZ, Math.atan2(this.alignVector.y, this.alignVector.x));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n        } // Hide disabled axes\n\n\n        handle.visible = handle.visible && (handle.name.indexOf('X') === -1 || this.showX);\n        handle.visible = handle.visible && (handle.name.indexOf('Y') === -1 || this.showY);\n        handle.visible = handle.visible && (handle.name.indexOf('Z') === -1 || this.showZ);\n        handle.visible = handle.visible && (handle.name.indexOf('E') === -1 || this.showX && this.showY && this.showZ); // highlight selected axis\n        //@ts-ignore\n\n        handle.material.tempOpacity = handle.material.tempOpacity || handle.material.opacity; //@ts-ignore\n\n        handle.material.tempColor = handle.material.tempColor || handle.material.color.clone(); //@ts-ignore\n\n        handle.material.color.copy(handle.material.tempColor); //@ts-ignore\n\n        handle.material.opacity = handle.material.tempOpacity;\n\n        if (!this.enabled) {\n          //@ts-ignore\n          handle.material.opacity *= 0.5; //@ts-ignore\n\n          handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n        } else if (this.axis) {\n          if (handle.name === this.axis) {\n            //@ts-ignore\n            handle.material.opacity = 1.0; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else if (this.axis.split('').some(function (a) {\n            return handle.name === a;\n          })) {\n            //@ts-ignore\n            handle.material.opacity = 1.0; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else {\n            //@ts-ignore\n            handle.material.opacity *= 0.25; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          }\n        }\n      }\n\n      super.updateMatrixWorld();\n    });\n\n    const gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      side: DoubleSide,\n      fog: false,\n      toneMapped: false\n    });\n    const gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      linewidth: 1,\n      fog: false,\n      toneMapped: false\n    }); // Make unique material for each axis/color\n\n    const matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    const matHelper = gizmoMaterial.clone();\n    matHelper.opacity = 0.33;\n    const matRed = gizmoMaterial.clone();\n    matRed.color.set(0xff0000);\n    const matGreen = gizmoMaterial.clone();\n    matGreen.color.set(0x00ff00);\n    const matBlue = gizmoMaterial.clone();\n    matBlue.color.set(0x0000ff);\n    const matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    const matYellowTransparent = matWhiteTransparent.clone();\n    matYellowTransparent.color.set(0xffff00);\n    const matCyanTransparent = matWhiteTransparent.clone();\n    matCyanTransparent.color.set(0x00ffff);\n    const matMagentaTransparent = matWhiteTransparent.clone();\n    matMagentaTransparent.color.set(0xff00ff);\n    const matYellow = gizmoMaterial.clone();\n    matYellow.color.set(0xffff00);\n    const matLineRed = gizmoLineMaterial.clone();\n    matLineRed.color.set(0xff0000);\n    const matLineGreen = gizmoLineMaterial.clone();\n    matLineGreen.color.set(0x00ff00);\n    const matLineBlue = gizmoLineMaterial.clone();\n    matLineBlue.color.set(0x0000ff);\n    const matLineCyan = gizmoLineMaterial.clone();\n    matLineCyan.color.set(0x00ffff);\n    const matLineMagenta = gizmoLineMaterial.clone();\n    matLineMagenta.color.set(0xff00ff);\n    const matLineYellow = gizmoLineMaterial.clone();\n    matLineYellow.color.set(0xffff00);\n    const matLineGray = gizmoLineMaterial.clone();\n    matLineGray.color.set(0x787878);\n    const matLineYellowTransparent = matLineYellow.clone();\n    matLineYellowTransparent.opacity = 0.25; // reusable geometry\n\n    const arrowGeometry = new CylinderGeometry(0, 0.05, 0.2, 12, 1, false);\n    const scaleHandleGeometry = new BoxGeometry(0.125, 0.125, 0.125);\n    const lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n\n    const CircleGeometry = (radius, arc) => {\n      const geometry = new BufferGeometry();\n      const vertices = [];\n\n      for (let i = 0; i <= 64 * arc; ++i) {\n        vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n      }\n\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      return geometry;\n    }; // Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\n    const TranslateHelperGeometry = () => {\n      const geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    }; // Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\n    const gizmoTranslate = {\n      X: [[new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, -Math.PI / 2], null, 'fwd'], [new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, Math.PI / 2], null, 'bwd'], [new Line(lineGeometry, matLineRed)]],\n      Y: [[new Mesh(arrowGeometry, matGreen), [0, 1, 0], null, null, 'fwd'], [new Mesh(arrowGeometry, matGreen), [0, 1, 0], [Math.PI, 0, 0], null, 'bwd'], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2]]],\n      Z: [[new Mesh(arrowGeometry, matBlue), [0, 0, 1], [Math.PI / 2, 0, 0], null, 'fwd'], [new Mesh(arrowGeometry, matBlue), [0, 0, 1], [-Math.PI / 2, 0, 0], null, 'bwd'], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0], [0, 0, 0]]],\n      XY: [[new Mesh(new PlaneGeometry(0.295, 0.295), matYellowTransparent.clone()), [0.15, 0.15, 0]], [new Line(lineGeometry, matLineYellow), [0.18, 0.3, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.3, 0.18, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matCyanTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]], [new Line(lineGeometry, matLineCyan), [0, 0.18, 0.3], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.3, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matMagentaTransparent.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineMagenta), [0.18, 0, 0.3], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.3, 0, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]]\n    };\n    const pickerTranslate = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0.6, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0.2, 0]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]\n    };\n    const helperTranslate = {\n      START: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      END: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      DELTA: [[new Line(TranslateHelperGeometry(), matHelper), null, null, null, 'helper']],\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    };\n    const gizmoRotate = {\n      X: [[new Line(CircleGeometry(1, 0.5), matLineRed)], [new Mesh(new OctahedronGeometry(0.04, 0), matRed), [0, 0, 0.99], null, [1, 3, 1]]],\n      Y: [[new Line(CircleGeometry(1, 0.5), matLineGreen), null, [0, 0, -Math.PI / 2]], [new Mesh(new OctahedronGeometry(0.04, 0), matGreen), [0, 0, 0.99], null, [3, 1, 1]]],\n      Z: [[new Line(CircleGeometry(1, 0.5), matLineBlue), null, [0, Math.PI / 2, 0]], [new Mesh(new OctahedronGeometry(0.04, 0), matBlue), [0.99, 0, 0], null, [1, 3, 1]]],\n      E: [[new Line(CircleGeometry(1.25, 1), matLineYellowTransparent), null, [0, Math.PI / 2, 0]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [1.17, 0, 0], [0, 0, -Math.PI / 2], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [-1.17, 0, 0], [0, 0, Math.PI / 2], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, -1.17, 0], [Math.PI, 0, 0], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, 1.17, 0], [0, 0, 0], [1, 1, 0.001]]],\n      XYZE: [[new Line(CircleGeometry(1, 1), matLineGray), null, [0, Math.PI / 2, 0]]]\n    };\n    const helperRotate = {\n      AXIS: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']]\n    };\n    const pickerRotate = {\n      X: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n      Y: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n      Z: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      E: [[new Mesh(new TorusGeometry(1.25, 0.1, 2, 24), matInvisible)]],\n      XYZE: [[new Mesh(new SphereGeometry(0.7, 10, 8), matInvisible)]]\n    };\n    const gizmoScale = {\n      X: [[new Mesh(scaleHandleGeometry, matRed), [0.8, 0, 0], [0, 0, -Math.PI / 2]], [new Line(lineGeometry, matLineRed), null, null, [0.8, 1, 1]]],\n      Y: [[new Mesh(scaleHandleGeometry, matGreen), [0, 0.8, 0]], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2], [0.8, 1, 1]]],\n      Z: [[new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.8], [Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0], [0.8, 1, 1]]],\n      XY: [[new Mesh(scaleHandleGeometry, matYellowTransparent), [0.85, 0.85, 0], null, [2, 2, 0.2]], [new Line(lineGeometry, matLineYellow), [0.855, 0.98, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.98, 0.855, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matCyanTransparent), [0, 0.85, 0.85], null, [0.2, 2, 2]], [new Line(lineGeometry, matLineCyan), [0, 0.855, 0.98], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.98, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matMagentaTransparent), [0.85, 0, 0.85], null, [2, 0.2, 2]], [new Line(lineGeometry, matLineMagenta), [0.855, 0, 0.98], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.98, 0, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 0, 1.1]]]\n    };\n    const pickerScale = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0.5, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0.5, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0, 0.5], [Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0.85, 0], null, [3, 3, 0.2]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0, 0.85, 0.85], null, [0.2, 3, 3]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0, 0.85], null, [3, 0.2, 3]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 1.1]]]\n    };\n    const helperScale = {\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    }; // Creates an Object3D with gizmos described in custom hierarchy definition.\n    // this is nearly impossible to Type so i'm leaving it\n\n    const setupGizmo = gizmoMap => {\n      const gizmo = new Object3D();\n\n      for (let name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--;) {\n          const object = gizmoMap[name][i][0].clone();\n          const position = gizmoMap[name][i][1];\n          const rotation = gizmoMap[name][i][2];\n          const scale = gizmoMap[name][i][3];\n          const tag = gizmoMap[name][i][4]; // name and tag properties are essential for picking and updating logic.\n\n          object.name = name; // @ts-ignore\n\n          object.tag = tag;\n\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n\n          object.updateMatrix();\n          const tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n\n      return gizmo;\n    };\n\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n    this.add(this.gizmo['translate'] = setupGizmo(gizmoTranslate));\n    this.add(this.gizmo['rotate'] = setupGizmo(gizmoRotate));\n    this.add(this.gizmo['scale'] = setupGizmo(gizmoScale));\n    this.add(this.picker['translate'] = setupGizmo(pickerTranslate));\n    this.add(this.picker['rotate'] = setupGizmo(pickerRotate));\n    this.add(this.picker['scale'] = setupGizmo(pickerScale));\n    this.add(this.helper['translate'] = setupGizmo(helperTranslate));\n    this.add(this.helper['rotate'] = setupGizmo(helperRotate));\n    this.add(this.helper['scale'] = setupGizmo(helperScale)); // Pickers should be hidden always\n\n    this.picker['translate'].visible = false;\n    this.picker['rotate'].visible = false;\n    this.picker['scale'].visible = false;\n  } // updateMatrixWorld will update transformations and appearance of individual handles\n\n\n}\n\nclass TransformControlsPlane extends Mesh {\n  constructor() {\n    super(new PlaneGeometry(100000, 100000, 2, 2), new MeshBasicMaterial({\n      visible: false,\n      wireframe: true,\n      side: DoubleSide,\n      transparent: true,\n      opacity: 0.1,\n      toneMapped: false\n    }));\n\n    _defineProperty(this, \"isTransformControlsPlane\", true);\n\n    _defineProperty(this, \"type\", 'TransformControlsPlane');\n\n    _defineProperty(this, \"unitX\", new Vector3(1, 0, 0));\n\n    _defineProperty(this, \"unitY\", new Vector3(0, 1, 0));\n\n    _defineProperty(this, \"unitZ\", new Vector3(0, 0, 1));\n\n    _defineProperty(this, \"tempVector\", new Vector3());\n\n    _defineProperty(this, \"dirVector\", new Vector3());\n\n    _defineProperty(this, \"alignVector\", new Vector3());\n\n    _defineProperty(this, \"tempMatrix\", new Matrix4());\n\n    _defineProperty(this, \"identityQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"cameraQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"worldPosition\", new Vector3());\n\n    _defineProperty(this, \"worldQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"eye\", new Vector3());\n\n    _defineProperty(this, \"axis\", null);\n\n    _defineProperty(this, \"mode\", 'translate');\n\n    _defineProperty(this, \"space\", 'world');\n\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n      this.position.copy(this.worldPosition);\n      if (this.mode === 'scale') space = 'local'; // scale always oriented to local rotation\n\n      this.unitX.set(1, 0, 0).applyQuaternion(space === 'local' ? this.worldQuaternion : this.identityQuaternion);\n      this.unitY.set(0, 1, 0).applyQuaternion(space === 'local' ? this.worldQuaternion : this.identityQuaternion);\n      this.unitZ.set(0, 0, 1).applyQuaternion(space === 'local' ? this.worldQuaternion : this.identityQuaternion); // Align the plane for current transform mode, axis and space.\n\n      this.alignVector.copy(this.unitY);\n\n      switch (this.mode) {\n        case 'translate':\n        case 'scale':\n          switch (this.axis) {\n            case 'X':\n              this.alignVector.copy(this.eye).cross(this.unitX);\n              this.dirVector.copy(this.unitX).cross(this.alignVector);\n              break;\n\n            case 'Y':\n              this.alignVector.copy(this.eye).cross(this.unitY);\n              this.dirVector.copy(this.unitY).cross(this.alignVector);\n              break;\n\n            case 'Z':\n              this.alignVector.copy(this.eye).cross(this.unitZ);\n              this.dirVector.copy(this.unitZ).cross(this.alignVector);\n              break;\n\n            case 'XY':\n              this.dirVector.copy(this.unitZ);\n              break;\n\n            case 'YZ':\n              this.dirVector.copy(this.unitX);\n              break;\n\n            case 'XZ':\n              this.alignVector.copy(this.unitZ);\n              this.dirVector.copy(this.unitY);\n              break;\n\n            case 'XYZ':\n            case 'E':\n              this.dirVector.set(0, 0, 0);\n              break;\n          }\n\n          break;\n\n        case 'rotate':\n        default:\n          // special case for rotate\n          this.dirVector.set(0, 0, 0);\n      }\n\n      if (this.dirVector.length() === 0) {\n        // If in rotate mode, make the plane parallel to camera\n        this.quaternion.copy(this.cameraQuaternion);\n      } else {\n        this.tempMatrix.lookAt(this.tempVector.set(0, 0, 0), this.dirVector, this.alignVector);\n        this.quaternion.setFromRotationMatrix(this.tempMatrix);\n      }\n\n      super.updateMatrixWorld();\n    });\n  }\n\n}\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}