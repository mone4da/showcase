{"ast":null,"code":"import { Quaternion, Object3D, Vector3, AnimationMixer } from 'three';\nimport { CCDIKSolver } from './CCDIKSolver.js';\nimport { MMDPhysics } from './MMDPhysics.js';\n\n/**\n * MMDAnimationHelper handles animation of MMD assets loaded by MMDLoader\n * with MMD special features as IK, Grant, and Physics.\n *\n * Dependencies\n *  - ammo.js https://github.com/kripken/ammo.js\n *  - MMDPhysics\n *  - CCDIKSolver\n *\n * TODO\n *  - more precise grant skinning support.\n */\n\nvar MMDAnimationHelper = function () {\n  /**\n   * @param {Object} params - (optional)\n   * @param {boolean} params.sync - Whether animation durations of added objects are synched. Default is true.\n   * @param {Number} params.afterglow - Default is 0.0.\n   * @param {boolean} params.resetPhysicsOnLoop - Default is true.\n   */\n  function MMDAnimationHelper(params) {\n    params = params || {};\n    this.meshes = [];\n    this.camera = null;\n    this.cameraTarget = new Object3D();\n    this.cameraTarget.name = 'target';\n    this.audio = null;\n    this.audioManager = null;\n    this.objects = new WeakMap();\n    this.configuration = {\n      sync: params.sync !== undefined ? params.sync : true,\n      afterglow: params.afterglow !== undefined ? params.afterglow : 0.0,\n      resetPhysicsOnLoop: params.resetPhysicsOnLoop !== undefined ? params.resetPhysicsOnLoop : true\n    };\n    this.enabled = {\n      animation: true,\n      ik: true,\n      grant: true,\n      physics: true,\n      cameraAnimation: true\n    };\n    this.onBeforePhysics = function () /* mesh */\n    {}; // experimental\n\n    this.sharedPhysics = false;\n    this.masterPhysics = null;\n  }\n  MMDAnimationHelper.prototype = {\n    constructor: MMDAnimationHelper,\n    /**\n     * Adds an Three.js Object to helper and setups animation.\n     * The anmation durations of added objects are synched\n     * if this.configuration.sync is true.\n     *\n     * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n     * @param {Object} params - (optional)\n     * @param {THREE.AnimationClip|Array<THREE.AnimationClip>} params.animation - Only for THREE.SkinnedMesh and THREE.Camera. Default is undefined.\n     * @param {boolean} params.physics - Only for THREE.SkinnedMesh. Default is true.\n     * @param {Integer} params.warmup - Only for THREE.SkinnedMesh and physics is true. Default is 60.\n     * @param {Number} params.unitStep - Only for THREE.SkinnedMesh and physics is true. Default is 1 / 65.\n     * @param {Integer} params.maxStepNum - Only for THREE.SkinnedMesh and physics is true. Default is 3.\n     * @param {Vector3} params.gravity - Only for THREE.SkinnedMesh and physics is true. Default ( 0, - 9.8 * 10, 0 ).\n     * @param {Number} params.delayTime - Only for THREE.Audio. Default is 0.0.\n     * @return {MMDAnimationHelper}\n     */\n    add: function add(object, params) {\n      params = params || {};\n      if (object.isSkinnedMesh) {\n        this._addMesh(object, params);\n      } else if (object.isCamera) {\n        this._setupCamera(object, params);\n      } else if (object.type === 'Audio') {\n        this._setupAudio(object, params);\n      } else {\n        throw new Error('THREE.MMDAnimationHelper.add: ' + 'accepts only ' + 'THREE.SkinnedMesh or ' + 'THREE.Camera or ' + 'THREE.Audio instance.');\n      }\n      if (this.configuration.sync) this._syncDuration();\n      return this;\n    },\n    /**\n     * Removes an Three.js Object from helper.\n     *\n     * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n     * @return {MMDAnimationHelper}\n     */\n    remove: function remove(object) {\n      if (object.isSkinnedMesh) {\n        this._removeMesh(object);\n      } else if (object.isCamera) {\n        this._clearCamera(object);\n      } else if (object.type === 'Audio') {\n        this._clearAudio(object);\n      } else {\n        throw new Error('THREE.MMDAnimationHelper.remove: ' + 'accepts only ' + 'THREE.SkinnedMesh or ' + 'THREE.Camera or ' + 'THREE.Audio instance.');\n      }\n      if (this.configuration.sync) this._syncDuration();\n      return this;\n    },\n    /**\n     * Updates the animation.\n     *\n     * @param {Number} delta\n     * @return {MMDAnimationHelper}\n     */\n    update: function update(delta) {\n      if (this.audioManager !== null) this.audioManager.control(delta);\n      for (var i = 0; i < this.meshes.length; i++) {\n        this._animateMesh(this.meshes[i], delta);\n      }\n      if (this.sharedPhysics) this._updateSharedPhysics(delta);\n      if (this.camera !== null) this._animateCamera(this.camera, delta);\n      return this;\n    },\n    /**\n     * Changes the pose of SkinnedMesh as VPD specifies.\n     *\n     * @param {THREE.SkinnedMesh} mesh\n     * @param {Object} vpd - VPD content parsed MMDParser\n     * @param {Object} params - (optional)\n     * @param {boolean} params.resetPose - Default is true.\n     * @param {boolean} params.ik - Default is true.\n     * @param {boolean} params.grant - Default is true.\n     * @return {MMDAnimationHelper}\n     */\n    pose: function pose(mesh, vpd, params) {\n      params = params || {};\n      if (params.resetPose !== false) mesh.pose();\n      var bones = mesh.skeleton.bones;\n      var boneParams = vpd.bones;\n      var boneNameDictionary = {};\n      for (var i = 0, il = bones.length; i < il; i++) {\n        boneNameDictionary[bones[i].name] = i;\n      }\n      var vector = new Vector3();\n      var quaternion = new Quaternion();\n      for (var _i = 0, _il = boneParams.length; _i < _il; _i++) {\n        var boneParam = boneParams[_i];\n        var boneIndex = boneNameDictionary[boneParam.name];\n        if (boneIndex === undefined) continue;\n        var bone = bones[boneIndex];\n        bone.position.add(vector.fromArray(boneParam.translation));\n        bone.quaternion.multiply(quaternion.fromArray(boneParam.quaternion));\n      }\n      mesh.updateMatrixWorld(true);\n      if (params.ik !== false) {\n        this._createCCDIKSolver(mesh).update(params.saveOriginalBonesBeforeIK); // this param is experimental\n      }\n\n      if (params.grant !== false) {\n        this.createGrantSolver(mesh).update();\n      }\n      return this;\n    },\n    /**\n     * Enabes/Disables an animation feature.\n     *\n     * @param {string} key\n     * @param {boolean} enabled\n     * @return {MMDAnimationHelper}\n     */\n    enable: function enable(key, enabled) {\n      if (this.enabled[key] === undefined) {\n        throw new Error(\"THREE.MMDAnimationHelper.enable: unknown key \".concat(key));\n      }\n      this.enabled[key] = enabled;\n      if (key === 'physics') {\n        for (var i = 0, il = this.meshes.length; i < il; i++) {\n          this._optimizeIK(this.meshes[i], enabled);\n        }\n      }\n      return this;\n    },\n    /**\n     * Creates an GrantSolver instance.\n     *\n     * @param {THREE.SkinnedMesh} mesh\n     * @return {GrantSolver}\n     */\n    createGrantSolver: function createGrantSolver(mesh) {\n      return new GrantSolver(mesh, mesh.geometry.userData.MMD.grants);\n    },\n    // private methods\n    _addMesh: function _addMesh(mesh, params) {\n      if (this.meshes.indexOf(mesh) >= 0) {\n        throw new Error(\"THREE.MMDAnimationHelper._addMesh: SkinnedMesh '\".concat(mesh.name, \"' has already been added.\"));\n      }\n      this.meshes.push(mesh);\n      this.objects.set(mesh, {\n        looped: false\n      });\n      this._setupMeshAnimation(mesh, params.animation);\n      if (params.physics !== false) {\n        this._setupMeshPhysics(mesh, params);\n      }\n      return this;\n    },\n    _setupCamera: function _setupCamera(camera, params) {\n      if (this.camera === camera) {\n        throw new Error(\"THREE.MMDAnimationHelper._setupCamera: Camera '\".concat(camera.name, \"' has already been set.\"));\n      }\n      if (this.camera) this.clearCamera(this.camera);\n      this.camera = camera;\n      camera.add(this.cameraTarget);\n      this.objects.set(camera, {});\n      if (params.animation !== undefined) {\n        this._setupCameraAnimation(camera, params.animation);\n      }\n      return this;\n    },\n    _setupAudio: function _setupAudio(audio, params) {\n      if (this.audio === audio) {\n        throw new Error(\"THREE.MMDAnimationHelper._setupAudio: Audio '\".concat(audio.name, \"' has already been set.\"));\n      }\n      if (this.audio) this.clearAudio(this.audio);\n      this.audio = audio;\n      this.audioManager = new AudioManager(audio, params);\n      this.objects.set(this.audioManager, {\n        duration: this.audioManager.duration\n      });\n      return this;\n    },\n    _removeMesh: function _removeMesh(mesh) {\n      var found = false;\n      var writeIndex = 0;\n      for (var i = 0, il = this.meshes.length; i < il; i++) {\n        if (this.meshes[i] === mesh) {\n          this.objects.delete(mesh);\n          found = true;\n          continue;\n        }\n        this.meshes[writeIndex++] = this.meshes[i];\n      }\n      if (!found) {\n        throw new Error(\"THREE.MMDAnimationHelper._removeMesh: SkinnedMesh '\".concat(mesh.name, \"' has not been added yet.\"));\n      }\n      this.meshes.length = writeIndex;\n      return this;\n    },\n    _clearCamera: function _clearCamera(camera) {\n      if (camera !== this.camera) {\n        throw new Error(\"THREE.MMDAnimationHelper._clearCamera: Camera '\".concat(camera.name, \"' has not been set yet.\"));\n      }\n      this.camera.remove(this.cameraTarget);\n      this.objects.delete(this.camera);\n      this.camera = null;\n      return this;\n    },\n    _clearAudio: function _clearAudio(audio) {\n      if (audio !== this.audio) {\n        throw new Error(\"THREE.MMDAnimationHelper._clearAudio: Audio '\".concat(audio.name, \"' has not been set yet.\"));\n      }\n      this.objects.delete(this.audioManager);\n      this.audio = null;\n      this.audioManager = null;\n      return this;\n    },\n    _setupMeshAnimation: function _setupMeshAnimation(mesh, animation) {\n      var objects = this.objects.get(mesh);\n      if (animation !== undefined) {\n        var animations = Array.isArray(animation) ? animation : [animation];\n        objects.mixer = new AnimationMixer(mesh);\n        for (var i = 0, il = animations.length; i < il; i++) {\n          objects.mixer.clipAction(animations[i]).play();\n        } // TODO: find a workaround not to access ._clip looking like a private property\n\n        objects.mixer.addEventListener('loop', function (event) {\n          var tracks = event.action._clip.tracks;\n          if (tracks.length > 0 && tracks[0].name.slice(0, 6) !== '.bones') return;\n          objects.looped = true;\n        });\n      }\n      objects.ikSolver = this._createCCDIKSolver(mesh);\n      objects.grantSolver = this.createGrantSolver(mesh);\n      return this;\n    },\n    _setupCameraAnimation: function _setupCameraAnimation(camera, animation) {\n      var animations = Array.isArray(animation) ? animation : [animation];\n      var objects = this.objects.get(camera);\n      objects.mixer = new AnimationMixer(camera);\n      for (var i = 0, il = animations.length; i < il; i++) {\n        objects.mixer.clipAction(animations[i]).play();\n      }\n    },\n    _setupMeshPhysics: function _setupMeshPhysics(mesh, params) {\n      var objects = this.objects.get(mesh); // shared physics is experimental\n\n      if (params.world === undefined && this.sharedPhysics) {\n        var masterPhysics = this._getMasterPhysics();\n        if (masterPhysics !== null) world = masterPhysics.world; // eslint-disable-line no-undef\n      }\n\n      objects.physics = this._createMMDPhysics(mesh, params);\n      if (objects.mixer && params.animationWarmup !== false) {\n        this._animateMesh(mesh, 0);\n        objects.physics.reset();\n      }\n      objects.physics.warmup(params.warmup !== undefined ? params.warmup : 60);\n      this._optimizeIK(mesh, true);\n    },\n    _animateMesh: function _animateMesh(mesh, delta) {\n      var objects = this.objects.get(mesh);\n      var mixer = objects.mixer;\n      var ikSolver = objects.ikSolver;\n      var grantSolver = objects.grantSolver;\n      var physics = objects.physics;\n      var looped = objects.looped; // alternate solution to save/restore bones but less performant?\n      //mesh.pose();\n      //this._updatePropertyMixersBuffer( mesh );\n\n      if (mixer && this.enabled.animation) {\n        this._restoreBones(mesh);\n        mixer.update(delta);\n        this._saveBones(mesh);\n        if (ikSolver && this.enabled.ik) {\n          mesh.updateMatrixWorld(true);\n          ikSolver.update();\n        }\n        if (grantSolver && this.enabled.grant) {\n          grantSolver.update();\n        }\n      }\n      if (looped === true && this.enabled.physics) {\n        if (physics && this.configuration.resetPhysicsOnLoop) physics.reset();\n        objects.looped = false;\n      }\n      if (physics && this.enabled.physics && !this.sharedPhysics) {\n        this.onBeforePhysics(mesh);\n        physics.update(delta);\n      }\n    },\n    _animateCamera: function _animateCamera(camera, delta) {\n      var mixer = this.objects.get(camera).mixer;\n      if (mixer && this.enabled.cameraAnimation) {\n        mixer.update(delta);\n        camera.updateProjectionMatrix();\n        camera.up.set(0, 1, 0);\n        camera.up.applyQuaternion(camera.quaternion);\n        camera.lookAt(this.cameraTarget.position);\n      }\n    },\n    _optimizeIK: function _optimizeIK(mesh, physicsEnabled) {\n      var iks = mesh.geometry.userData.MMD.iks;\n      var bones = mesh.geometry.userData.MMD.bones;\n      for (var i = 0, il = iks.length; i < il; i++) {\n        var ik = iks[i];\n        var links = ik.links;\n        for (var j = 0, jl = links.length; j < jl; j++) {\n          var link = links[j];\n          if (physicsEnabled === true) {\n            // disable IK of the bone the corresponding rigidBody type of which is 1 or 2\n            // because its rotation will be overriden by physics\n            link.enabled = bones[link.index].rigidBodyType > 0 ? false : true;\n          } else {\n            link.enabled = true;\n          }\n        }\n      }\n    },\n    _createCCDIKSolver: function _createCCDIKSolver(mesh) {\n      if (CCDIKSolver === undefined) {\n        throw new Error('THREE.MMDAnimationHelper: Import CCDIKSolver.');\n      }\n      return new CCDIKSolver(mesh, mesh.geometry.userData.MMD.iks);\n    },\n    _createMMDPhysics: function _createMMDPhysics(mesh, params) {\n      if (MMDPhysics === undefined) {\n        throw new Error('THREE.MMDPhysics: Import MMDPhysics.');\n      }\n      return new MMDPhysics(mesh, mesh.geometry.userData.MMD.rigidBodies, mesh.geometry.userData.MMD.constraints, params);\n    },\n    /*\n     * Detects the longest duration and then sets it to them to sync.\n     * TODO: Not to access private properties ( ._actions and ._clip )\n     */\n    _syncDuration: function _syncDuration() {\n      var max = 0.0;\n      var objects = this.objects;\n      var meshes = this.meshes;\n      var camera = this.camera;\n      var audioManager = this.audioManager; // get the longest duration\n\n      for (var i = 0, il = meshes.length; i < il; i++) {\n        var mixer = this.objects.get(meshes[i]).mixer;\n        if (mixer === undefined) continue;\n        for (var j = 0; j < mixer._actions.length; j++) {\n          var clip = mixer._actions[j]._clip;\n          if (!objects.has(clip)) {\n            objects.set(clip, {\n              duration: clip.duration\n            });\n          }\n          max = Math.max(max, objects.get(clip).duration);\n        }\n      }\n      if (camera !== null) {\n        var mixer = this.objects.get(camera).mixer;\n        if (mixer !== undefined) {\n          for (var _i2 = 0, _il2 = mixer._actions.length; _i2 < _il2; _i2++) {\n            var clip = mixer._actions[_i2]._clip;\n            if (!objects.has(clip)) {\n              objects.set(clip, {\n                duration: clip.duration\n              });\n            }\n            max = Math.max(max, objects.get(clip).duration);\n          }\n        }\n      }\n      if (audioManager !== null) {\n        max = Math.max(max, objects.get(audioManager).duration);\n      }\n      max += this.configuration.afterglow; // update the duration\n\n      for (var _i3 = 0, _il3 = this.meshes.length; _i3 < _il3; _i3++) {\n        var mixer = this.objects.get(this.meshes[_i3]).mixer;\n        if (mixer === undefined) continue;\n        for (var _j = 0, jl = mixer._actions.length; _j < jl; _j++) {\n          mixer._actions[_j]._clip.duration = max;\n        }\n      }\n      if (camera !== null) {\n        var mixer = this.objects.get(camera).mixer;\n        if (mixer !== undefined) {\n          for (var _i4 = 0, _il4 = mixer._actions.length; _i4 < _il4; _i4++) {\n            mixer._actions[_i4]._clip.duration = max;\n          }\n        }\n      }\n      if (audioManager !== null) {\n        audioManager.duration = max;\n      }\n    },\n    // workaround\n    _updatePropertyMixersBuffer: function _updatePropertyMixersBuffer(mesh) {\n      var mixer = this.objects.get(mesh).mixer;\n      var propertyMixers = mixer._bindings;\n      var accuIndex = mixer._accuIndex;\n      for (var i = 0, il = propertyMixers.length; i < il; i++) {\n        var propertyMixer = propertyMixers[i];\n        var buffer = propertyMixer.buffer;\n        var stride = propertyMixer.valueSize;\n        var offset = (accuIndex + 1) * stride;\n        propertyMixer.binding.getValue(buffer, offset);\n      }\n    },\n    /*\n     * Avoiding these two issues by restore/save bones before/after mixer animation.\n     *\n     * 1. PropertyMixer used by AnimationMixer holds cache value in .buffer.\n     *    Calculating IK, Grant, and Physics after mixer animation can break\n     *    the cache coherency.\n     *\n     * 2. Applying Grant two or more times without reset the posing breaks model.\n     */\n    _saveBones: function _saveBones(mesh) {\n      var objects = this.objects.get(mesh);\n      var bones = mesh.skeleton.bones;\n      var backupBones = objects.backupBones;\n      if (backupBones === undefined) {\n        backupBones = new Float32Array(bones.length * 7);\n        objects.backupBones = backupBones;\n      }\n      for (var i = 0, il = bones.length; i < il; i++) {\n        var bone = bones[i];\n        bone.position.toArray(backupBones, i * 7);\n        bone.quaternion.toArray(backupBones, i * 7 + 3);\n      }\n    },\n    _restoreBones: function _restoreBones(mesh) {\n      var objects = this.objects.get(mesh);\n      var backupBones = objects.backupBones;\n      if (backupBones === undefined) return;\n      var bones = mesh.skeleton.bones;\n      for (var i = 0, il = bones.length; i < il; i++) {\n        var bone = bones[i];\n        bone.position.fromArray(backupBones, i * 7);\n        bone.quaternion.fromArray(backupBones, i * 7 + 3);\n      }\n    },\n    // experimental\n    _getMasterPhysics: function _getMasterPhysics() {\n      if (this.masterPhysics !== null) return this.masterPhysics;\n      for (var i = 0, il = this.meshes.length; i < il; i++) {\n        var physics = this.meshes[i].physics;\n        if (physics !== undefined && physics !== null) {\n          this.masterPhysics = physics;\n          return this.masterPhysics;\n        }\n      }\n      return null;\n    },\n    _updateSharedPhysics: function _updateSharedPhysics(delta) {\n      if (this.meshes.length === 0 || !this.enabled.physics || !this.sharedPhysics) return;\n      var physics = this._getMasterPhysics();\n      if (physics === null) return;\n      for (var i = 0, il = this.meshes.length; i < il; i++) {\n        var p = this.meshes[i].physics;\n        if (p !== null && p !== undefined) {\n          p.updateRigidBodies();\n        }\n      }\n      physics.stepSimulation(delta);\n      for (var _i5 = 0, _il5 = this.meshes.length; _i5 < _il5; _i5++) {\n        var p = this.meshes[_i5].physics;\n        if (p !== null && p !== undefined) {\n          p.updateBones();\n        }\n      }\n    }\n  }; //\n\n  /**\n   * @param {THREE.Audio} audio\n   * @param {Object} params - (optional)\n   * @param {Nuumber} params.delayTime\n   */\n\n  function AudioManager(audio, params) {\n    params = params || {};\n    this.audio = audio;\n    this.elapsedTime = 0.0;\n    this.currentTime = 0.0;\n    this.delayTime = params.delayTime !== undefined ? params.delayTime : 0.0;\n    this.audioDuration = this.audio.buffer.duration;\n    this.duration = this.audioDuration + this.delayTime;\n  }\n  AudioManager.prototype = {\n    constructor: AudioManager,\n    /**\n     * @param {Number} delta\n     * @return {AudioManager}\n     */\n    control: function control(delta) {\n      this.elapsed += delta;\n      this.currentTime += delta;\n      if (this._shouldStopAudio()) this.audio.stop();\n      if (this._shouldStartAudio()) this.audio.play();\n      return this;\n    },\n    // private methods\n    _shouldStartAudio: function _shouldStartAudio() {\n      if (this.audio.isPlaying) return false;\n      while (this.currentTime >= this.duration) {\n        this.currentTime -= this.duration;\n      }\n      if (this.currentTime < this.delayTime) return false; // 'duration' can be bigger than 'audioDuration + delayTime' because of sync configuration\n\n      if (this.currentTime - this.delayTime > this.audioDuration) return false;\n      return true;\n    },\n    _shouldStopAudio: function _shouldStopAudio() {\n      return this.audio.isPlaying && this.currentTime >= this.duration;\n    }\n  };\n  /**\n   * @param {THREE.SkinnedMesh} mesh\n   * @param {Array<Object>} grants\n   */\n\n  function GrantSolver(mesh, grants) {\n    this.mesh = mesh;\n    this.grants = grants || [];\n  }\n  GrantSolver.prototype = {\n    constructor: GrantSolver,\n    /**\n     * @return {GrantSolver}\n     */\n    update: function () {\n      var quaternion = new Quaternion();\n      return function () {\n        var bones = this.mesh.skeleton.bones;\n        var grants = this.grants;\n        for (var i = 0, il = grants.length; i < il; i++) {\n          var grant = grants[i];\n          var bone = bones[grant.index];\n          var parentBone = bones[grant.parentIndex];\n          if (grant.isLocal) {\n            // TODO: implement\n            if (grant.affectPosition) ; // TODO: implement\n\n            if (grant.affectRotation) ;\n          } else {\n            // TODO: implement\n            if (grant.affectPosition) ;\n            if (grant.affectRotation) {\n              quaternion.set(0, 0, 0, 1);\n              quaternion.slerp(parentBone.quaternion, grant.ratio);\n              bone.quaternion.multiply(quaternion);\n            }\n          }\n        }\n        return this;\n      };\n    }()\n  };\n  return MMDAnimationHelper;\n}();\nexport { MMDAnimationHelper };","map":{"version":3,"names":["Quaternion","Object3D","Vector3","AnimationMixer","CCDIKSolver","MMDPhysics","MMDAnimationHelper","params","meshes","camera","cameraTarget","name","audio","audioManager","objects","WeakMap","configuration","sync","undefined","afterglow","resetPhysicsOnLoop","enabled","animation","ik","grant","physics","cameraAnimation","onBeforePhysics","sharedPhysics","masterPhysics","prototype","constructor","add","object","isSkinnedMesh","_addMesh","isCamera","_setupCamera","type","_setupAudio","Error","_syncDuration","remove","_removeMesh","_clearCamera","_clearAudio","update","delta","control","i","length","_animateMesh","_updateSharedPhysics","_animateCamera","pose","mesh","vpd","resetPose","bones","skeleton","boneParams","boneNameDictionary","il","vector","quaternion","boneParam","boneIndex","bone","position","fromArray","translation","multiply","updateMatrixWorld","_createCCDIKSolver","saveOriginalBonesBeforeIK","createGrantSolver","enable","key","concat","_optimizeIK","GrantSolver","geometry","userData","MMD","grants","indexOf","push","set","looped","_setupMeshAnimation","_setupMeshPhysics","clearCamera","_setupCameraAnimation","clearAudio","AudioManager","duration","found","writeIndex","delete","get","animations","Array","isArray","mixer","clipAction","play","addEventListener","event","tracks","action","_clip","slice","ikSolver","grantSolver","world","_getMasterPhysics","_createMMDPhysics","animationWarmup","reset","warmup","_restoreBones","_saveBones","updateProjectionMatrix","up","applyQuaternion","lookAt","physicsEnabled","iks","links","j","jl","link","index","rigidBodyType","rigidBodies","constraints","max","_actions","clip","has","Math","_updatePropertyMixersBuffer","propertyMixers","_bindings","accuIndex","_accuIndex","propertyMixer","buffer","stride","valueSize","offset","binding","getValue","backupBones","Float32Array","toArray","p","updateRigidBodies","stepSimulation","updateBones","elapsedTime","currentTime","delayTime","audioDuration","elapsed","_shouldStopAudio","stop","_shouldStartAudio","isPlaying","parentBone","parentIndex","isLocal","affectPosition","affectRotation","slerp","ratio"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/animation/MMDAnimationHelper.js"],"sourcesContent":["import { Quaternion, Object3D, Vector3, AnimationMixer } from 'three';\nimport { CCDIKSolver } from './CCDIKSolver.js';\nimport { MMDPhysics } from './MMDPhysics.js';\n\n/**\n * MMDAnimationHelper handles animation of MMD assets loaded by MMDLoader\n * with MMD special features as IK, Grant, and Physics.\n *\n * Dependencies\n *  - ammo.js https://github.com/kripken/ammo.js\n *  - MMDPhysics\n *  - CCDIKSolver\n *\n * TODO\n *  - more precise grant skinning support.\n */\n\nconst MMDAnimationHelper = (() => {\n  /**\n   * @param {Object} params - (optional)\n   * @param {boolean} params.sync - Whether animation durations of added objects are synched. Default is true.\n   * @param {Number} params.afterglow - Default is 0.0.\n   * @param {boolean} params.resetPhysicsOnLoop - Default is true.\n   */\n  function MMDAnimationHelper(params) {\n    params = params || {};\n    this.meshes = [];\n    this.camera = null;\n    this.cameraTarget = new Object3D();\n    this.cameraTarget.name = 'target';\n    this.audio = null;\n    this.audioManager = null;\n    this.objects = new WeakMap();\n    this.configuration = {\n      sync: params.sync !== undefined ? params.sync : true,\n      afterglow: params.afterglow !== undefined ? params.afterglow : 0.0,\n      resetPhysicsOnLoop: params.resetPhysicsOnLoop !== undefined ? params.resetPhysicsOnLoop : true\n    };\n    this.enabled = {\n      animation: true,\n      ik: true,\n      grant: true,\n      physics: true,\n      cameraAnimation: true\n    };\n\n    this.onBeforePhysics = () =>\n    /* mesh */\n    {}; // experimental\n\n\n    this.sharedPhysics = false;\n    this.masterPhysics = null;\n  }\n\n  MMDAnimationHelper.prototype = {\n    constructor: MMDAnimationHelper,\n\n    /**\n     * Adds an Three.js Object to helper and setups animation.\n     * The anmation durations of added objects are synched\n     * if this.configuration.sync is true.\n     *\n     * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n     * @param {Object} params - (optional)\n     * @param {THREE.AnimationClip|Array<THREE.AnimationClip>} params.animation - Only for THREE.SkinnedMesh and THREE.Camera. Default is undefined.\n     * @param {boolean} params.physics - Only for THREE.SkinnedMesh. Default is true.\n     * @param {Integer} params.warmup - Only for THREE.SkinnedMesh and physics is true. Default is 60.\n     * @param {Number} params.unitStep - Only for THREE.SkinnedMesh and physics is true. Default is 1 / 65.\n     * @param {Integer} params.maxStepNum - Only for THREE.SkinnedMesh and physics is true. Default is 3.\n     * @param {Vector3} params.gravity - Only for THREE.SkinnedMesh and physics is true. Default ( 0, - 9.8 * 10, 0 ).\n     * @param {Number} params.delayTime - Only for THREE.Audio. Default is 0.0.\n     * @return {MMDAnimationHelper}\n     */\n    add: function (object, params) {\n      params = params || {};\n\n      if (object.isSkinnedMesh) {\n        this._addMesh(object, params);\n      } else if (object.isCamera) {\n        this._setupCamera(object, params);\n      } else if (object.type === 'Audio') {\n        this._setupAudio(object, params);\n      } else {\n        throw new Error('THREE.MMDAnimationHelper.add: ' + 'accepts only ' + 'THREE.SkinnedMesh or ' + 'THREE.Camera or ' + 'THREE.Audio instance.');\n      }\n\n      if (this.configuration.sync) this._syncDuration();\n      return this;\n    },\n\n    /**\n     * Removes an Three.js Object from helper.\n     *\n     * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n     * @return {MMDAnimationHelper}\n     */\n    remove: function (object) {\n      if (object.isSkinnedMesh) {\n        this._removeMesh(object);\n      } else if (object.isCamera) {\n        this._clearCamera(object);\n      } else if (object.type === 'Audio') {\n        this._clearAudio(object);\n      } else {\n        throw new Error('THREE.MMDAnimationHelper.remove: ' + 'accepts only ' + 'THREE.SkinnedMesh or ' + 'THREE.Camera or ' + 'THREE.Audio instance.');\n      }\n\n      if (this.configuration.sync) this._syncDuration();\n      return this;\n    },\n\n    /**\n     * Updates the animation.\n     *\n     * @param {Number} delta\n     * @return {MMDAnimationHelper}\n     */\n    update: function (delta) {\n      if (this.audioManager !== null) this.audioManager.control(delta);\n\n      for (let i = 0; i < this.meshes.length; i++) {\n        this._animateMesh(this.meshes[i], delta);\n      }\n\n      if (this.sharedPhysics) this._updateSharedPhysics(delta);\n      if (this.camera !== null) this._animateCamera(this.camera, delta);\n      return this;\n    },\n\n    /**\n     * Changes the pose of SkinnedMesh as VPD specifies.\n     *\n     * @param {THREE.SkinnedMesh} mesh\n     * @param {Object} vpd - VPD content parsed MMDParser\n     * @param {Object} params - (optional)\n     * @param {boolean} params.resetPose - Default is true.\n     * @param {boolean} params.ik - Default is true.\n     * @param {boolean} params.grant - Default is true.\n     * @return {MMDAnimationHelper}\n     */\n    pose: function (mesh, vpd, params) {\n      params = params || {};\n      if (params.resetPose !== false) mesh.pose();\n      const bones = mesh.skeleton.bones;\n      const boneParams = vpd.bones;\n      const boneNameDictionary = {};\n\n      for (let i = 0, il = bones.length; i < il; i++) {\n        boneNameDictionary[bones[i].name] = i;\n      }\n\n      const vector = new Vector3();\n      const quaternion = new Quaternion();\n\n      for (let i = 0, il = boneParams.length; i < il; i++) {\n        const boneParam = boneParams[i];\n        const boneIndex = boneNameDictionary[boneParam.name];\n        if (boneIndex === undefined) continue;\n        const bone = bones[boneIndex];\n        bone.position.add(vector.fromArray(boneParam.translation));\n        bone.quaternion.multiply(quaternion.fromArray(boneParam.quaternion));\n      }\n\n      mesh.updateMatrixWorld(true);\n\n      if (params.ik !== false) {\n        this._createCCDIKSolver(mesh).update(params.saveOriginalBonesBeforeIK); // this param is experimental\n\n      }\n\n      if (params.grant !== false) {\n        this.createGrantSolver(mesh).update();\n      }\n\n      return this;\n    },\n\n    /**\n     * Enabes/Disables an animation feature.\n     *\n     * @param {string} key\n     * @param {boolean} enabled\n     * @return {MMDAnimationHelper}\n     */\n    enable: function (key, enabled) {\n      if (this.enabled[key] === undefined) {\n        throw new Error(`THREE.MMDAnimationHelper.enable: unknown key ${key}`);\n      }\n\n      this.enabled[key] = enabled;\n\n      if (key === 'physics') {\n        for (let i = 0, il = this.meshes.length; i < il; i++) {\n          this._optimizeIK(this.meshes[i], enabled);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Creates an GrantSolver instance.\n     *\n     * @param {THREE.SkinnedMesh} mesh\n     * @return {GrantSolver}\n     */\n    createGrantSolver: function (mesh) {\n      return new GrantSolver(mesh, mesh.geometry.userData.MMD.grants);\n    },\n    // private methods\n    _addMesh: function (mesh, params) {\n      if (this.meshes.indexOf(mesh) >= 0) {\n        throw new Error(`THREE.MMDAnimationHelper._addMesh: SkinnedMesh '${mesh.name}' has already been added.`);\n      }\n\n      this.meshes.push(mesh);\n      this.objects.set(mesh, {\n        looped: false\n      });\n\n      this._setupMeshAnimation(mesh, params.animation);\n\n      if (params.physics !== false) {\n        this._setupMeshPhysics(mesh, params);\n      }\n\n      return this;\n    },\n    _setupCamera: function (camera, params) {\n      if (this.camera === camera) {\n        throw new Error(`THREE.MMDAnimationHelper._setupCamera: Camera '${camera.name}' has already been set.`);\n      }\n\n      if (this.camera) this.clearCamera(this.camera);\n      this.camera = camera;\n      camera.add(this.cameraTarget);\n      this.objects.set(camera, {});\n\n      if (params.animation !== undefined) {\n        this._setupCameraAnimation(camera, params.animation);\n      }\n\n      return this;\n    },\n    _setupAudio: function (audio, params) {\n      if (this.audio === audio) {\n        throw new Error(`THREE.MMDAnimationHelper._setupAudio: Audio '${audio.name}' has already been set.`);\n      }\n\n      if (this.audio) this.clearAudio(this.audio);\n      this.audio = audio;\n      this.audioManager = new AudioManager(audio, params);\n      this.objects.set(this.audioManager, {\n        duration: this.audioManager.duration\n      });\n      return this;\n    },\n    _removeMesh: function (mesh) {\n      let found = false;\n      let writeIndex = 0;\n\n      for (let i = 0, il = this.meshes.length; i < il; i++) {\n        if (this.meshes[i] === mesh) {\n          this.objects.delete(mesh);\n          found = true;\n          continue;\n        }\n\n        this.meshes[writeIndex++] = this.meshes[i];\n      }\n\n      if (!found) {\n        throw new Error(`THREE.MMDAnimationHelper._removeMesh: SkinnedMesh '${mesh.name}' has not been added yet.`);\n      }\n\n      this.meshes.length = writeIndex;\n      return this;\n    },\n    _clearCamera: function (camera) {\n      if (camera !== this.camera) {\n        throw new Error(`THREE.MMDAnimationHelper._clearCamera: Camera '${camera.name}' has not been set yet.`);\n      }\n\n      this.camera.remove(this.cameraTarget);\n      this.objects.delete(this.camera);\n      this.camera = null;\n      return this;\n    },\n    _clearAudio: function (audio) {\n      if (audio !== this.audio) {\n        throw new Error(`THREE.MMDAnimationHelper._clearAudio: Audio '${audio.name}' has not been set yet.`);\n      }\n\n      this.objects.delete(this.audioManager);\n      this.audio = null;\n      this.audioManager = null;\n      return this;\n    },\n    _setupMeshAnimation: function (mesh, animation) {\n      const objects = this.objects.get(mesh);\n\n      if (animation !== undefined) {\n        const animations = Array.isArray(animation) ? animation : [animation];\n        objects.mixer = new AnimationMixer(mesh);\n\n        for (let i = 0, il = animations.length; i < il; i++) {\n          objects.mixer.clipAction(animations[i]).play();\n        } // TODO: find a workaround not to access ._clip looking like a private property\n\n\n        objects.mixer.addEventListener('loop', event => {\n          const tracks = event.action._clip.tracks;\n          if (tracks.length > 0 && tracks[0].name.slice(0, 6) !== '.bones') return;\n          objects.looped = true;\n        });\n      }\n\n      objects.ikSolver = this._createCCDIKSolver(mesh);\n      objects.grantSolver = this.createGrantSolver(mesh);\n      return this;\n    },\n    _setupCameraAnimation: function (camera, animation) {\n      const animations = Array.isArray(animation) ? animation : [animation];\n      const objects = this.objects.get(camera);\n      objects.mixer = new AnimationMixer(camera);\n\n      for (let i = 0, il = animations.length; i < il; i++) {\n        objects.mixer.clipAction(animations[i]).play();\n      }\n    },\n    _setupMeshPhysics: function (mesh, params) {\n      const objects = this.objects.get(mesh); // shared physics is experimental\n\n      if (params.world === undefined && this.sharedPhysics) {\n        const masterPhysics = this._getMasterPhysics();\n\n        if (masterPhysics !== null) world = masterPhysics.world; // eslint-disable-line no-undef\n      }\n\n      objects.physics = this._createMMDPhysics(mesh, params);\n\n      if (objects.mixer && params.animationWarmup !== false) {\n        this._animateMesh(mesh, 0);\n\n        objects.physics.reset();\n      }\n\n      objects.physics.warmup(params.warmup !== undefined ? params.warmup : 60);\n\n      this._optimizeIK(mesh, true);\n    },\n    _animateMesh: function (mesh, delta) {\n      const objects = this.objects.get(mesh);\n      const mixer = objects.mixer;\n      const ikSolver = objects.ikSolver;\n      const grantSolver = objects.grantSolver;\n      const physics = objects.physics;\n      const looped = objects.looped; // alternate solution to save/restore bones but less performant?\n      //mesh.pose();\n      //this._updatePropertyMixersBuffer( mesh );\n\n      if (mixer && this.enabled.animation) {\n        this._restoreBones(mesh);\n\n        mixer.update(delta);\n\n        this._saveBones(mesh);\n\n        if (ikSolver && this.enabled.ik) {\n          mesh.updateMatrixWorld(true);\n          ikSolver.update();\n        }\n\n        if (grantSolver && this.enabled.grant) {\n          grantSolver.update();\n        }\n      }\n\n      if (looped === true && this.enabled.physics) {\n        if (physics && this.configuration.resetPhysicsOnLoop) physics.reset();\n        objects.looped = false;\n      }\n\n      if (physics && this.enabled.physics && !this.sharedPhysics) {\n        this.onBeforePhysics(mesh);\n        physics.update(delta);\n      }\n    },\n    _animateCamera: function (camera, delta) {\n      const mixer = this.objects.get(camera).mixer;\n\n      if (mixer && this.enabled.cameraAnimation) {\n        mixer.update(delta);\n        camera.updateProjectionMatrix();\n        camera.up.set(0, 1, 0);\n        camera.up.applyQuaternion(camera.quaternion);\n        camera.lookAt(this.cameraTarget.position);\n      }\n    },\n    _optimizeIK: function (mesh, physicsEnabled) {\n      const iks = mesh.geometry.userData.MMD.iks;\n      const bones = mesh.geometry.userData.MMD.bones;\n\n      for (let i = 0, il = iks.length; i < il; i++) {\n        const ik = iks[i];\n        const links = ik.links;\n\n        for (let j = 0, jl = links.length; j < jl; j++) {\n          const link = links[j];\n\n          if (physicsEnabled === true) {\n            // disable IK of the bone the corresponding rigidBody type of which is 1 or 2\n            // because its rotation will be overriden by physics\n            link.enabled = bones[link.index].rigidBodyType > 0 ? false : true;\n          } else {\n            link.enabled = true;\n          }\n        }\n      }\n    },\n    _createCCDIKSolver: function (mesh) {\n      if (CCDIKSolver === undefined) {\n        throw new Error('THREE.MMDAnimationHelper: Import CCDIKSolver.');\n      }\n\n      return new CCDIKSolver(mesh, mesh.geometry.userData.MMD.iks);\n    },\n    _createMMDPhysics: function (mesh, params) {\n      if (MMDPhysics === undefined) {\n        throw new Error('THREE.MMDPhysics: Import MMDPhysics.');\n      }\n\n      return new MMDPhysics(mesh, mesh.geometry.userData.MMD.rigidBodies, mesh.geometry.userData.MMD.constraints, params);\n    },\n\n    /*\n     * Detects the longest duration and then sets it to them to sync.\n     * TODO: Not to access private properties ( ._actions and ._clip )\n     */\n    _syncDuration: function () {\n      let max = 0.0;\n      const objects = this.objects;\n      const meshes = this.meshes;\n      const camera = this.camera;\n      const audioManager = this.audioManager; // get the longest duration\n\n      for (let i = 0, il = meshes.length; i < il; i++) {\n        var mixer = this.objects.get(meshes[i]).mixer;\n        if (mixer === undefined) continue;\n\n        for (let j = 0; j < mixer._actions.length; j++) {\n          var clip = mixer._actions[j]._clip;\n\n          if (!objects.has(clip)) {\n            objects.set(clip, {\n              duration: clip.duration\n            });\n          }\n\n          max = Math.max(max, objects.get(clip).duration);\n        }\n      }\n\n      if (camera !== null) {\n        var mixer = this.objects.get(camera).mixer;\n\n        if (mixer !== undefined) {\n          for (let i = 0, il = mixer._actions.length; i < il; i++) {\n            var clip = mixer._actions[i]._clip;\n\n            if (!objects.has(clip)) {\n              objects.set(clip, {\n                duration: clip.duration\n              });\n            }\n\n            max = Math.max(max, objects.get(clip).duration);\n          }\n        }\n      }\n\n      if (audioManager !== null) {\n        max = Math.max(max, objects.get(audioManager).duration);\n      }\n\n      max += this.configuration.afterglow; // update the duration\n\n      for (let i = 0, il = this.meshes.length; i < il; i++) {\n        var mixer = this.objects.get(this.meshes[i]).mixer;\n        if (mixer === undefined) continue;\n\n        for (let j = 0, jl = mixer._actions.length; j < jl; j++) {\n          mixer._actions[j]._clip.duration = max;\n        }\n      }\n\n      if (camera !== null) {\n        var mixer = this.objects.get(camera).mixer;\n\n        if (mixer !== undefined) {\n          for (let i = 0, il = mixer._actions.length; i < il; i++) {\n            mixer._actions[i]._clip.duration = max;\n          }\n        }\n      }\n\n      if (audioManager !== null) {\n        audioManager.duration = max;\n      }\n    },\n    // workaround\n    _updatePropertyMixersBuffer: function (mesh) {\n      const mixer = this.objects.get(mesh).mixer;\n      const propertyMixers = mixer._bindings;\n      const accuIndex = mixer._accuIndex;\n\n      for (let i = 0, il = propertyMixers.length; i < il; i++) {\n        const propertyMixer = propertyMixers[i];\n        const buffer = propertyMixer.buffer;\n        const stride = propertyMixer.valueSize;\n        const offset = (accuIndex + 1) * stride;\n        propertyMixer.binding.getValue(buffer, offset);\n      }\n    },\n\n    /*\n     * Avoiding these two issues by restore/save bones before/after mixer animation.\n     *\n     * 1. PropertyMixer used by AnimationMixer holds cache value in .buffer.\n     *    Calculating IK, Grant, and Physics after mixer animation can break\n     *    the cache coherency.\n     *\n     * 2. Applying Grant two or more times without reset the posing breaks model.\n     */\n    _saveBones: function (mesh) {\n      const objects = this.objects.get(mesh);\n      const bones = mesh.skeleton.bones;\n      let backupBones = objects.backupBones;\n\n      if (backupBones === undefined) {\n        backupBones = new Float32Array(bones.length * 7);\n        objects.backupBones = backupBones;\n      }\n\n      for (let i = 0, il = bones.length; i < il; i++) {\n        const bone = bones[i];\n        bone.position.toArray(backupBones, i * 7);\n        bone.quaternion.toArray(backupBones, i * 7 + 3);\n      }\n    },\n    _restoreBones: function (mesh) {\n      const objects = this.objects.get(mesh);\n      const backupBones = objects.backupBones;\n      if (backupBones === undefined) return;\n      const bones = mesh.skeleton.bones;\n\n      for (let i = 0, il = bones.length; i < il; i++) {\n        const bone = bones[i];\n        bone.position.fromArray(backupBones, i * 7);\n        bone.quaternion.fromArray(backupBones, i * 7 + 3);\n      }\n    },\n    // experimental\n    _getMasterPhysics: function () {\n      if (this.masterPhysics !== null) return this.masterPhysics;\n\n      for (let i = 0, il = this.meshes.length; i < il; i++) {\n        const physics = this.meshes[i].physics;\n\n        if (physics !== undefined && physics !== null) {\n          this.masterPhysics = physics;\n          return this.masterPhysics;\n        }\n      }\n\n      return null;\n    },\n    _updateSharedPhysics: function (delta) {\n      if (this.meshes.length === 0 || !this.enabled.physics || !this.sharedPhysics) return;\n\n      const physics = this._getMasterPhysics();\n\n      if (physics === null) return;\n\n      for (let i = 0, il = this.meshes.length; i < il; i++) {\n        var p = this.meshes[i].physics;\n\n        if (p !== null && p !== undefined) {\n          p.updateRigidBodies();\n        }\n      }\n\n      physics.stepSimulation(delta);\n\n      for (let i = 0, il = this.meshes.length; i < il; i++) {\n        var p = this.meshes[i].physics;\n\n        if (p !== null && p !== undefined) {\n          p.updateBones();\n        }\n      }\n    }\n  }; //\n\n  /**\n   * @param {THREE.Audio} audio\n   * @param {Object} params - (optional)\n   * @param {Nuumber} params.delayTime\n   */\n\n  function AudioManager(audio, params) {\n    params = params || {};\n    this.audio = audio;\n    this.elapsedTime = 0.0;\n    this.currentTime = 0.0;\n    this.delayTime = params.delayTime !== undefined ? params.delayTime : 0.0;\n    this.audioDuration = this.audio.buffer.duration;\n    this.duration = this.audioDuration + this.delayTime;\n  }\n\n  AudioManager.prototype = {\n    constructor: AudioManager,\n\n    /**\n     * @param {Number} delta\n     * @return {AudioManager}\n     */\n    control: function (delta) {\n      this.elapsed += delta;\n      this.currentTime += delta;\n      if (this._shouldStopAudio()) this.audio.stop();\n      if (this._shouldStartAudio()) this.audio.play();\n      return this;\n    },\n    // private methods\n    _shouldStartAudio: function () {\n      if (this.audio.isPlaying) return false;\n\n      while (this.currentTime >= this.duration) {\n        this.currentTime -= this.duration;\n      }\n\n      if (this.currentTime < this.delayTime) return false; // 'duration' can be bigger than 'audioDuration + delayTime' because of sync configuration\n\n      if (this.currentTime - this.delayTime > this.audioDuration) return false;\n      return true;\n    },\n    _shouldStopAudio: function () {\n      return this.audio.isPlaying && this.currentTime >= this.duration;\n    }\n  };\n  /**\n   * @param {THREE.SkinnedMesh} mesh\n   * @param {Array<Object>} grants\n   */\n\n  function GrantSolver(mesh, grants) {\n    this.mesh = mesh;\n    this.grants = grants || [];\n  }\n\n  GrantSolver.prototype = {\n    constructor: GrantSolver,\n\n    /**\n     * @return {GrantSolver}\n     */\n    update: (() => {\n      const quaternion = new Quaternion();\n      return function () {\n        const bones = this.mesh.skeleton.bones;\n        const grants = this.grants;\n\n        for (let i = 0, il = grants.length; i < il; i++) {\n          const grant = grants[i];\n          const bone = bones[grant.index];\n          const parentBone = bones[grant.parentIndex];\n\n          if (grant.isLocal) {\n            // TODO: implement\n            if (grant.affectPosition) ; // TODO: implement\n\n\n            if (grant.affectRotation) ;\n          } else {\n            // TODO: implement\n            if (grant.affectPosition) ;\n\n            if (grant.affectRotation) {\n              quaternion.set(0, 0, 0, 1);\n              quaternion.slerp(parentBone.quaternion, grant.ratio);\n              bone.quaternion.multiply(quaternion);\n            }\n          }\n        }\n\n        return this;\n      };\n    })()\n  };\n  return MMDAnimationHelper;\n})();\n\nexport { MMDAnimationHelper };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}