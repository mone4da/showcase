{"ast":null,"code":"import{OrbitControls,PerspectiveCamera}from'@react-three/drei';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var control={target:[0,.35,0],angle:1.45};var camera={fov:50,position:[3,2,5]};var space=[4,1,4];var material={color:'#00FF00'};var Wall=function Wall(props){var x=props.x,h=props.h,z=props.z;return/*#__PURE__*/_jsxs(\"mesh\",{position:[x,0,z],children:[/*#__PURE__*/_jsx(\"boxGeometry\",{args:[1,h,1]}),/*#__PURE__*/_jsx(\"meshBasicMaterial\",{color:material.color})]});};var Maze=function Maze(props){var data=props.data;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(OrbitControls,{target:control.target,maxPolarAngle:control.angle}),/*#__PURE__*/_jsx(PerspectiveCamera,{makeDefault:true,fov:camera.fov,position:camera.position}),data.map(function(row,r){return row.map(function(w,c){return/*#__PURE__*/_jsx(Wall,{x:c,h:w,z:r});});})]});};export default Maze;","map":{"version":3,"names":["OrbitControls","PerspectiveCamera","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","control","target","angle","camera","fov","position","space","material","color","Wall","props","x","h","z","children","args","Maze","data","maxPolarAngle","makeDefault","map","row","r","w","c"],"sources":["/home/samuel/experiment/3d/farm/frontend/src/view/maze.js"],"sourcesContent":["\nimport {OrbitControls, PerspectiveCamera} from '@react-three/drei'\n\nlet control = {\n\ttarget : [0, .35, 0],\n\tangle: 1.45\n}\n\nlet camera = {\n\tfov: 50,\n\tposition : [3, 2, 5]\n}\n\nlet space = [4, 1, 4]\n\nlet material = {\n\tcolor: '#00FF00'\n}\n\nconst Wall = props => {\n\t\tlet {x,h,z} = props\nreturn\t\t<mesh position={[x,0,z]}>\n\t\t\t<boxGeometry args={ [1,h,1] } />\n\t\t\t<meshBasicMaterial color={material.color} />\n\t\t</mesh>\n\n}\n\nconst Maze = props => {\n\tlet {data} = props\n\n\treturn <>\n\t\t\t<OrbitControls target={control.target} maxPolarAngle={control.angle} />\n\t\t\t<PerspectiveCamera makeDefault fov={camera.fov} position={camera.position} />\n\n\t\t\t{ data.map( (row, r) => row.map((w,c) => <Wall x={c} h={w} z={r} /> )) }\n\t\t</>\n}\n\nexport default Maze\n"],"mappings":"AACA,OAAQA,aAAa,CAAEC,iBAAiB,KAAO,mBAAmB,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAElE,GAAI,CAAAC,OAAO,CAAG,CACbC,MAAM,CAAG,CAAC,CAAC,CAAE,GAAG,CAAE,CAAC,CAAC,CACpBC,KAAK,CAAE,IACR,CAAC,CAED,GAAI,CAAAC,MAAM,CAAG,CACZC,GAAG,CAAE,EAAE,CACPC,QAAQ,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACpB,CAAC,CAED,GAAI,CAAAC,KAAK,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAErB,GAAI,CAAAC,QAAQ,CAAG,CACdC,KAAK,CAAE,SACR,CAAC,CAED,GAAM,CAAAC,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAGC,KAAK,CAAI,CACpB,GAAK,CAAAC,CAAC,CAAQD,KAAK,CAAdC,CAAC,CAACC,CAAC,CAAMF,KAAK,CAAZE,CAAC,CAACC,CAAC,CAAIH,KAAK,CAAVG,CAAC,CACZ,mBAAQhB,KAAA,SAAMQ,QAAQ,CAAE,CAACM,CAAC,CAAC,CAAC,CAACE,CAAC,CAAE,CAAAC,QAAA,eAC7BnB,IAAA,gBAAaoB,IAAI,CAAG,CAAC,CAAC,CAACH,CAAC,CAAC,CAAC,CAAG,EAAG,cAChCjB,IAAA,sBAAmBa,KAAK,CAAED,QAAQ,CAACC,KAAM,EAAG,GACtC,CAET,CAAC,CAED,GAAM,CAAAQ,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAGN,KAAK,CAAI,CACrB,GAAK,CAAAO,IAAI,CAAIP,KAAK,CAAbO,IAAI,CAET,mBAAOpB,KAAA,CAAAE,SAAA,EAAAe,QAAA,eACLnB,IAAA,CAACH,aAAa,EAACS,MAAM,CAAED,OAAO,CAACC,MAAO,CAACiB,aAAa,CAAElB,OAAO,CAACE,KAAM,EAAG,cACvEP,IAAA,CAACF,iBAAiB,EAAC0B,WAAW,MAACf,GAAG,CAAED,MAAM,CAACC,GAAI,CAACC,QAAQ,CAAEF,MAAM,CAACE,QAAS,EAAG,CAE3EY,IAAI,CAACG,GAAG,CAAE,SAACC,GAAG,CAAEC,CAAC,QAAK,CAAAD,GAAG,CAACD,GAAG,CAAC,SAACG,CAAC,CAACC,CAAC,qBAAK7B,IAAA,CAACc,IAAI,EAACE,CAAC,CAAEa,CAAE,CAACZ,CAAC,CAAEW,CAAE,CAACV,CAAC,CAAES,CAAE,EAAG,GAAE,GAAC,GACpE,CACL,CAAC,CAED,cAAe,CAAAN,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}