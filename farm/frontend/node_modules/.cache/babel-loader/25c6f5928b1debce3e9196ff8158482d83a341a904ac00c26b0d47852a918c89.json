{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node from '../core/Node.js';\nimport ConstNode from '../core/ConstNode.js';\nimport UVNode from '../accessors/UVNode.js';\nimport MathNode from '../math/MathNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport SplitNode from './SplitNode.js';\nimport JoinNode from './JoinNode.js';\nvar SpriteSheetUVNode = /*#__PURE__*/function (_Node) {\n  _inherits(SpriteSheetUVNode, _Node);\n  var _super = _createSuper(SpriteSheetUVNode);\n  function SpriteSheetUVNode(countNode) {\n    var _this;\n    var uvNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new UVNode();\n    var frameNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new ConstNode(0);\n    _classCallCheck(this, SpriteSheetUVNode);\n    _this = _super.call(this, 'vec2');\n    _this.countNode = countNode;\n    _this.uvNode = uvNode;\n    _this.frameNode = frameNode;\n    return _this;\n  }\n  _createClass(SpriteSheetUVNode, [{\n    key: \"generate\",\n    value: function generate(builder) {\n      var count = this.countNode;\n      var uv = this.uvNode;\n      var frame = this.frameNode;\n      var one = new ConstNode(1);\n      var width = new SplitNode(count, 'x');\n      var height = new SplitNode(count, 'y');\n      var total = new OperatorNode('*', width, height);\n      var roundFrame = new MathNode(MathNode.FLOOR, new MathNode(MathNode.MOD, frame, total));\n      var frameNum = new OperatorNode('+', roundFrame, one);\n      var cell = new MathNode(MathNode.MOD, roundFrame, width);\n      var row = new MathNode(MathNode.CEIL, new OperatorNode('/', frameNum, width));\n      var rowInv = new OperatorNode('-', height, row);\n      var scale = new OperatorNode('/', one, count);\n      var uvFrameOffset = new JoinNode([new OperatorNode('*', cell, new SplitNode(scale, 'x')), new OperatorNode('*', rowInv, new SplitNode(scale, 'y'))]);\n      var uvScale = new OperatorNode('*', uv, scale);\n      var uvFrame = new OperatorNode('+', uvScale, uvFrameOffset);\n      return uvFrame.build(builder, this.getNodeType(builder));\n    }\n  }]);\n  return SpriteSheetUVNode;\n}(Node);\nexport default SpriteSheetUVNode;","map":{"version":3,"names":["Node","ConstNode","UVNode","MathNode","OperatorNode","SplitNode","JoinNode","SpriteSheetUVNode","_Node","_inherits","_super","_createSuper","countNode","_this","uvNode","arguments","length","undefined","frameNode","_classCallCheck","call","_createClass","key","value","generate","builder","count","uv","frame","one","width","height","total","roundFrame","FLOOR","MOD","frameNum","cell","row","CEIL","rowInv","scale","uvFrameOffset","uvScale","uvFrame","build","getNodeType"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/nodes/utils/SpriteSheetUVNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport ConstNode from '../core/ConstNode.js';\nimport UVNode from '../accessors/UVNode.js';\nimport MathNode from '../math/MathNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport SplitNode from './SplitNode.js';\nimport JoinNode from './JoinNode.js';\n\nclass SpriteSheetUVNode extends Node {\n  constructor(countNode, uvNode = new UVNode(), frameNode = new ConstNode(0)) {\n    super('vec2');\n    this.countNode = countNode;\n    this.uvNode = uvNode;\n    this.frameNode = frameNode;\n  }\n\n  generate(builder) {\n    const count = this.countNode;\n    const uv = this.uvNode;\n    const frame = this.frameNode;\n    const one = new ConstNode(1);\n    const width = new SplitNode(count, 'x');\n    const height = new SplitNode(count, 'y');\n    const total = new OperatorNode('*', width, height);\n    const roundFrame = new MathNode(MathNode.FLOOR, new MathNode(MathNode.MOD, frame, total));\n    const frameNum = new OperatorNode('+', roundFrame, one);\n    const cell = new MathNode(MathNode.MOD, roundFrame, width);\n    const row = new MathNode(MathNode.CEIL, new OperatorNode('/', frameNum, width));\n    const rowInv = new OperatorNode('-', height, row);\n    const scale = new OperatorNode('/', one, count);\n    const uvFrameOffset = new JoinNode([new OperatorNode('*', cell, new SplitNode(scale, 'x')), new OperatorNode('*', rowInv, new SplitNode(scale, 'y'))]);\n    const uvScale = new OperatorNode('*', uv, scale);\n    const uvFrame = new OperatorNode('+', uvScale, uvFrameOffset);\n    return uvFrame.build(builder, this.getNodeType(builder));\n  }\n\n}\n\nexport default SpriteSheetUVNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}