{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Object3D, Sphere, Box3 } from 'three';\nimport { XRHandMeshModel } from './XRHandMeshModel.js';\nvar TOUCH_RADIUS = 0.01;\nvar POINTING_JOINT = 'index-finger-tip';\nvar OculusHandModel = /*#__PURE__*/function (_Object3D) {\n  _inherits(OculusHandModel, _Object3D);\n  var _super = _createSuper(OculusHandModel);\n  function OculusHandModel(controller, leftModelPath, rightModelPath) {\n    var _this;\n    _classCallCheck(this, OculusHandModel);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"controller\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"motionController\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"envMap\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"mesh\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"xrInputSource\", void 0);\n    _this.controller = controller;\n    _this.motionController = null;\n    _this.envMap = null;\n    _this.mesh = null;\n    _this.xrInputSource = null;\n    controller.addEventListener('connected', function (event) {\n      var xrInputSource = event.data;\n      if (xrInputSource.hand && !_this.motionController) {\n        _this.xrInputSource = xrInputSource;\n        _this.motionController = new XRHandMeshModel(_assertThisInitialized(_this), controller, undefined, xrInputSource.handedness, xrInputSource.handedness === 'left' ? leftModelPath : rightModelPath);\n      }\n    });\n    controller.addEventListener('disconnected', function () {\n      _this.dispose();\n    });\n    return _this;\n  }\n  _createClass(OculusHandModel, [{\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld(force) {\n      _get(_getPrototypeOf(OculusHandModel.prototype), \"updateMatrixWorld\", this).call(this, force);\n      if (this.motionController) {\n        this.motionController.updateMesh();\n      }\n    }\n  }, {\n    key: \"getPointerPosition\",\n    value: function getPointerPosition() {\n      // @ts-ignore XRController needs to extend Group\n      var indexFingerTip = this.controller.joints[POINTING_JOINT];\n      if (indexFingerTip) {\n        return indexFingerTip.position;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"intersectBoxObject\",\n    value: function intersectBoxObject(boxObject) {\n      var pointerPosition = this.getPointerPosition();\n      if (pointerPosition) {\n        var indexSphere = new Sphere(pointerPosition, TOUCH_RADIUS);\n        var box = new Box3().setFromObject(boxObject);\n        return indexSphere.intersectsBox(box);\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"checkButton\",\n    value: function checkButton(button) {\n      if (this.intersectBoxObject(button)) {\n        button.onPress();\n      } else {\n        button.onClear();\n      }\n      if (button.isPressed()) {\n        button.whilePressed();\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.clear();\n      this.motionController = null;\n    }\n  }]);\n  return OculusHandModel;\n}(Object3D);\nexport { OculusHandModel };","map":{"version":3,"names":["_defineProperty","Object3D","Sphere","Box3","XRHandMeshModel","TOUCH_RADIUS","POINTING_JOINT","OculusHandModel","_Object3D","_inherits","_super","_createSuper","controller","leftModelPath","rightModelPath","_this","_classCallCheck","call","_assertThisInitialized","motionController","envMap","mesh","xrInputSource","addEventListener","event","data","hand","undefined","handedness","dispose","_createClass","key","value","updateMatrixWorld","force","_get","_getPrototypeOf","prototype","updateMesh","getPointerPosition","indexFingerTip","joints","position","intersectBoxObject","boxObject","pointerPosition","indexSphere","box","setFromObject","intersectsBox","checkButton","button","onPress","onClear","isPressed","whilePressed","clear"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/webxr/OculusHandModel.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Object3D, Sphere, Box3 } from 'three';\nimport { XRHandMeshModel } from './XRHandMeshModel.js';\n\nconst TOUCH_RADIUS = 0.01;\nconst POINTING_JOINT = 'index-finger-tip';\n\nclass OculusHandModel extends Object3D {\n  constructor(controller, leftModelPath, rightModelPath) {\n    super();\n\n    _defineProperty(this, \"controller\", void 0);\n\n    _defineProperty(this, \"motionController\", void 0);\n\n    _defineProperty(this, \"envMap\", void 0);\n\n    _defineProperty(this, \"mesh\", void 0);\n\n    _defineProperty(this, \"xrInputSource\", void 0);\n\n    this.controller = controller;\n    this.motionController = null;\n    this.envMap = null;\n    this.mesh = null;\n    this.xrInputSource = null;\n    controller.addEventListener('connected', event => {\n      const xrInputSource = event.data;\n\n      if (xrInputSource.hand && !this.motionController) {\n        this.xrInputSource = xrInputSource;\n        this.motionController = new XRHandMeshModel(this, controller, undefined, xrInputSource.handedness, xrInputSource.handedness === 'left' ? leftModelPath : rightModelPath);\n      }\n    });\n    controller.addEventListener('disconnected', () => {\n      this.dispose();\n    });\n  }\n\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n\n    if (this.motionController) {\n      this.motionController.updateMesh();\n    }\n  }\n\n  getPointerPosition() {\n    // @ts-ignore XRController needs to extend Group\n    const indexFingerTip = this.controller.joints[POINTING_JOINT];\n\n    if (indexFingerTip) {\n      return indexFingerTip.position;\n    } else {\n      return null;\n    }\n  }\n\n  intersectBoxObject(boxObject) {\n    const pointerPosition = this.getPointerPosition();\n\n    if (pointerPosition) {\n      const indexSphere = new Sphere(pointerPosition, TOUCH_RADIUS);\n      const box = new Box3().setFromObject(boxObject);\n      return indexSphere.intersectsBox(box);\n    } else {\n      return false;\n    }\n  }\n\n  checkButton(button) {\n    if (this.intersectBoxObject(button)) {\n      button.onPress();\n    } else {\n      button.onClear();\n    }\n\n    if (button.isPressed()) {\n      button.whilePressed();\n    }\n  }\n\n  dispose() {\n    this.clear();\n    this.motionController = null;\n  }\n\n}\n\nexport { OculusHandModel };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}