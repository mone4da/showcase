{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport TempNode from '../core/TempNode.js';\nimport ModelNode from '../accessors/ModelNode.js';\nimport { ShaderNode, dFdx, dFdy, cross, add, mul, max, dot, cond, inversesqrt, equal, normalize, sub, join, positionView, normalView, uv } from '../ShaderNode.js';\nimport { TangentSpaceNormalMap, ObjectSpaceNormalMap } from 'three';\n\n// http://www.thetenthplanet.de/archives/1180\n\nvar perturbNormal2ArbNode = new ShaderNode(function (inputs) {\n  var eye_pos = inputs.eye_pos,\n    surf_norm = inputs.surf_norm,\n    mapN = inputs.mapN,\n    faceDirection = inputs.faceDirection,\n    uv = inputs.uv;\n  var q0 = dFdx(eye_pos.xyz);\n  var q1 = dFdy(eye_pos.xyz);\n  var st0 = dFdx(uv.st);\n  var st1 = dFdy(uv.st);\n  var N = surf_norm; // normalized\n\n  var q1perp = cross(q1, N);\n  var q0perp = cross(N, q0);\n  var T = add(mul(q1perp, st0.x), mul(q0perp, st1.x));\n  var B = add(mul(q1perp, st0.y), mul(q0perp, st1.y));\n  var det = max(dot(T, T), dot(B, B));\n  var scale = cond(equal(det, 0), 0, mul(faceDirection, inversesqrt(det)));\n  return normalize(add(mul(T, mul(mapN.x, scale)), mul(B, mul(mapN.y, scale)), mul(N, mapN.z)));\n});\nvar NormalMapNode = /*#__PURE__*/function (_TempNode) {\n  _inherits(NormalMapNode, _TempNode);\n  var _super = _createSuper(NormalMapNode);\n  function NormalMapNode(node) {\n    var _this;\n    var scaleNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    _classCallCheck(this, NormalMapNode);\n    _this = _super.call(this, 'vec3');\n    _this.node = node;\n    _this.scaleNode = scaleNode;\n    _this.normalMapType = TangentSpaceNormalMap;\n    return _this;\n  }\n  _createClass(NormalMapNode, [{\n    key: \"generate\",\n    value: function generate(builder) {\n      var type = this.getNodeType(builder);\n      var normalMapType = this.normalMapType,\n        scaleNode = this.scaleNode;\n      var normalOP = mul(this.node, 2.0);\n      var normalMap = sub(normalOP, 1.0);\n      if (scaleNode !== null) {\n        var normalMapScale = mul(normalMap.xy, scaleNode);\n        normalMap = join(normalMapScale, normalMap.z);\n      }\n      if (normalMapType === ObjectSpaceNormalMap) {\n        var vertexNormalNode = mul(new ModelNode(ModelNode.NORMAL_MATRIX), normalMap);\n        var normal = normalize(vertexNormalNode);\n        return normal.build(builder, type);\n      } else if (normalMapType === TangentSpaceNormalMap) {\n        var perturbNormal2ArbCall = perturbNormal2ArbNode({\n          eye_pos: positionView,\n          surf_norm: normalView,\n          mapN: normalMap,\n          faceDirection: 1.0,\n          uv: uv()\n        });\n        return perturbNormal2ArbCall.build(builder, type);\n      }\n    }\n  }]);\n  return NormalMapNode;\n}(TempNode);\nexport default NormalMapNode;","map":{"version":3,"names":["TempNode","ModelNode","ShaderNode","dFdx","dFdy","cross","add","mul","max","dot","cond","inversesqrt","equal","normalize","sub","join","positionView","normalView","uv","TangentSpaceNormalMap","ObjectSpaceNormalMap","perturbNormal2ArbNode","inputs","eye_pos","surf_norm","mapN","faceDirection","q0","xyz","q1","st0","st","st1","N","q1perp","q0perp","T","x","B","y","det","scale","z","NormalMapNode","_TempNode","_inherits","_super","_createSuper","node","_this","scaleNode","arguments","length","undefined","_classCallCheck","call","normalMapType","_createClass","key","value","generate","builder","type","getNodeType","normalOP","normalMap","normalMapScale","xy","vertexNormalNode","NORMAL_MATRIX","normal","build","perturbNormal2ArbCall"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/nodes/display/NormalMapNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\nimport ModelNode from '../accessors/ModelNode.js';\nimport { ShaderNode, dFdx, dFdy, cross, add, mul, max, dot, cond, inversesqrt, equal, normalize, sub, join, positionView, normalView, uv } from '../ShaderNode.js';\nimport { TangentSpaceNormalMap, ObjectSpaceNormalMap } from 'three';\n\n// http://www.thetenthplanet.de/archives/1180\n\nconst perturbNormal2ArbNode = new ShaderNode(inputs => {\n  const {\n    eye_pos,\n    surf_norm,\n    mapN,\n    faceDirection,\n    uv\n  } = inputs;\n  const q0 = dFdx(eye_pos.xyz);\n  const q1 = dFdy(eye_pos.xyz);\n  const st0 = dFdx(uv.st);\n  const st1 = dFdy(uv.st);\n  const N = surf_norm; // normalized\n\n  const q1perp = cross(q1, N);\n  const q0perp = cross(N, q0);\n  const T = add(mul(q1perp, st0.x), mul(q0perp, st1.x));\n  const B = add(mul(q1perp, st0.y), mul(q0perp, st1.y));\n  const det = max(dot(T, T), dot(B, B));\n  const scale = cond(equal(det, 0), 0, mul(faceDirection, inversesqrt(det)));\n  return normalize(add(mul(T, mul(mapN.x, scale)), mul(B, mul(mapN.y, scale)), mul(N, mapN.z)));\n});\n\nclass NormalMapNode extends TempNode {\n  constructor(node, scaleNode = null) {\n    super('vec3');\n    this.node = node;\n    this.scaleNode = scaleNode;\n    this.normalMapType = TangentSpaceNormalMap;\n  }\n\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const {\n      normalMapType,\n      scaleNode\n    } = this;\n    const normalOP = mul(this.node, 2.0);\n    let normalMap = sub(normalOP, 1.0);\n\n    if (scaleNode !== null) {\n      const normalMapScale = mul(normalMap.xy, scaleNode);\n      normalMap = join(normalMapScale, normalMap.z);\n    }\n\n    if (normalMapType === ObjectSpaceNormalMap) {\n      const vertexNormalNode = mul(new ModelNode(ModelNode.NORMAL_MATRIX), normalMap);\n      const normal = normalize(vertexNormalNode);\n      return normal.build(builder, type);\n    } else if (normalMapType === TangentSpaceNormalMap) {\n      const perturbNormal2ArbCall = perturbNormal2ArbNode({\n        eye_pos: positionView,\n        surf_norm: normalView,\n        mapN: normalMap,\n        faceDirection: 1.0,\n        uv: uv()\n      });\n      return perturbNormal2ArbCall.build(builder, type);\n    }\n  }\n\n}\n\nexport default NormalMapNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}