{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { UniformsUtils, ShaderMaterial } from 'three';\nimport { FilmShader } from '../shaders/FilmShader.js';\nvar FilmPass = /*#__PURE__*/function (_Pass) {\n  _inherits(FilmPass, _Pass);\n  var _super = _createSuper(FilmPass);\n  function FilmPass(noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale) {\n    var _this;\n    _classCallCheck(this, FilmPass);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"material\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"fsQuad\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"uniforms\", void 0);\n    if (FilmShader === undefined) console.error('THREE.FilmPass relies on FilmShader');\n    var shader = FilmShader;\n    _this.uniforms = UniformsUtils.clone(shader.uniforms);\n    _this.material = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    if (grayscale !== undefined) _this.uniforms.grayscale.value = grayscale;\n    if (noiseIntensity !== undefined) _this.uniforms.nIntensity.value = noiseIntensity;\n    if (scanlinesIntensity !== undefined) _this.uniforms.sIntensity.value = scanlinesIntensity;\n    if (scanlinesCount !== undefined) _this.uniforms.sCount.value = scanlinesCount;\n    _this.fsQuad = new FullScreenQuad(_this.material);\n    return _this;\n  }\n  _createClass(FilmPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer, deltaTime) {\n      this.uniforms['tDiffuse'].value = readBuffer.texture;\n      this.uniforms['time'].value += deltaTime;\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        if (this.clear) renderer.clear();\n        this.fsQuad.render(renderer);\n      }\n    }\n  }]);\n  return FilmPass;\n}(Pass);\nexport { FilmPass };","map":{"version":3,"names":["_defineProperty","Pass","FullScreenQuad","UniformsUtils","ShaderMaterial","FilmShader","FilmPass","_Pass","_inherits","_super","_createSuper","noiseIntensity","scanlinesIntensity","scanlinesCount","grayscale","_this","_classCallCheck","call","_assertThisInitialized","undefined","console","error","shader","uniforms","clone","material","vertexShader","fragmentShader","value","nIntensity","sIntensity","sCount","fsQuad","_createClass","key","render","renderer","writeBuffer","readBuffer","deltaTime","texture","renderToScreen","setRenderTarget","clear"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/postprocessing/FilmPass.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { UniformsUtils, ShaderMaterial } from 'three';\nimport { FilmShader } from '../shaders/FilmShader.js';\n\nclass FilmPass extends Pass {\n  constructor(noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale) {\n    super();\n\n    _defineProperty(this, \"material\", void 0);\n\n    _defineProperty(this, \"fsQuad\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    if (FilmShader === undefined) console.error('THREE.FilmPass relies on FilmShader');\n    const shader = FilmShader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    if (grayscale !== undefined) this.uniforms.grayscale.value = grayscale;\n    if (noiseIntensity !== undefined) this.uniforms.nIntensity.value = noiseIntensity;\n    if (scanlinesIntensity !== undefined) this.uniforms.sIntensity.value = scanlinesIntensity;\n    if (scanlinesCount !== undefined) this.uniforms.sCount.value = scanlinesCount;\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n\n  render(renderer, writeBuffer, readBuffer, deltaTime) {\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['time'].value += deltaTime;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n\n}\n\nexport { FilmPass };\n"],"mappings":";;;;;AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,SAASC,IAAI,EAAEC,cAAc,QAAQ,WAAW;AAChD,SAASC,aAAa,EAAEC,cAAc,QAAQ,OAAO;AACrD,SAASC,UAAU,QAAQ,0BAA0B;AAAC,IAEhDC,QAAQ,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,QAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,QAAA;EACZ,SAAAA,SAAYK,cAAc,EAAEC,kBAAkB,EAAEC,cAAc,EAAEC,SAAS,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAV,QAAA;IACzES,KAAA,GAAAN,MAAA,CAAAQ,IAAA;IAEAjB,eAAe,CAAAkB,sBAAA,CAAAH,KAAA,GAAO,UAAU,EAAE,KAAK,CAAC,CAAC;IAEzCf,eAAe,CAAAkB,sBAAA,CAAAH,KAAA,GAAO,QAAQ,EAAE,KAAK,CAAC,CAAC;IAEvCf,eAAe,CAAAkB,sBAAA,CAAAH,KAAA,GAAO,UAAU,EAAE,KAAK,CAAC,CAAC;IAEzC,IAAIV,UAAU,KAAKc,SAAS,EAAEC,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAC;IAClF,IAAMC,MAAM,GAAGjB,UAAU;IACzBU,KAAA,CAAKQ,QAAQ,GAAGpB,aAAa,CAACqB,KAAK,CAACF,MAAM,CAACC,QAAQ,CAAC;IACpDR,KAAA,CAAKU,QAAQ,GAAG,IAAIrB,cAAc,CAAC;MACjCmB,QAAQ,EAAER,KAAA,CAAKQ,QAAQ;MACvBG,YAAY,EAAEJ,MAAM,CAACI,YAAY;MACjCC,cAAc,EAAEL,MAAM,CAACK;IACzB,CAAC,CAAC;IACF,IAAIb,SAAS,KAAKK,SAAS,EAAEJ,KAAA,CAAKQ,QAAQ,CAACT,SAAS,CAACc,KAAK,GAAGd,SAAS;IACtE,IAAIH,cAAc,KAAKQ,SAAS,EAAEJ,KAAA,CAAKQ,QAAQ,CAACM,UAAU,CAACD,KAAK,GAAGjB,cAAc;IACjF,IAAIC,kBAAkB,KAAKO,SAAS,EAAEJ,KAAA,CAAKQ,QAAQ,CAACO,UAAU,CAACF,KAAK,GAAGhB,kBAAkB;IACzF,IAAIC,cAAc,KAAKM,SAAS,EAAEJ,KAAA,CAAKQ,QAAQ,CAACQ,MAAM,CAACH,KAAK,GAAGf,cAAc;IAC7EE,KAAA,CAAKiB,MAAM,GAAG,IAAI9B,cAAc,CAACa,KAAA,CAAKU,QAAQ,CAAC;IAAC,OAAAV,KAAA;EAClD;EAACkB,YAAA,CAAA3B,QAAA;IAAA4B,GAAA;IAAAN,KAAA,EAED,SAAAO,OAAOC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAE;MACnD,IAAI,CAAChB,QAAQ,CAAC,UAAU,CAAC,CAACK,KAAK,GAAGU,UAAU,CAACE,OAAO;MACpD,IAAI,CAACjB,QAAQ,CAAC,MAAM,CAAC,CAACK,KAAK,IAAIW,SAAS;MAExC,IAAI,IAAI,CAACE,cAAc,EAAE;QACvBL,QAAQ,CAACM,eAAe,CAAC,IAAI,CAAC;QAC9B,IAAI,CAACV,MAAM,CAACG,MAAM,CAACC,QAAQ,CAAC;MAC9B,CAAC,MAAM;QACLA,QAAQ,CAACM,eAAe,CAACL,WAAW,CAAC;QACrC,IAAI,IAAI,CAACM,KAAK,EAAEP,QAAQ,CAACO,KAAK,EAAE;QAChC,IAAI,CAACX,MAAM,CAACG,MAAM,CAACC,QAAQ,CAAC;MAC9B;IACF;EAAC;EAAA,OAAA9B,QAAA;AAAA,EArCoBL,IAAI;AAyC3B,SAASK,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}