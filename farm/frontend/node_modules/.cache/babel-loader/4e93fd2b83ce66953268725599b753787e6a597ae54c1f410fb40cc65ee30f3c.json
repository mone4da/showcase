{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Node from '../core/Node.js';\nimport { vector } from '../core/NodeBuilder.js';\nvar SplitNode = /*#__PURE__*/function (_Node) {\n  _inherits(SplitNode, _Node);\n  var _super = _createSuper(SplitNode);\n  function SplitNode(node) {\n    var _this;\n    var components = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';\n    _classCallCheck(this, SplitNode);\n    _this = _super.call(this);\n    _this.node = node;\n    _this.components = components;\n    return _this;\n  }\n  _createClass(SplitNode, [{\n    key: \"getVectorLength\",\n    value: function getVectorLength() {\n      var vectorLength = this.components.length;\n      var _iterator = _createForOfIteratorHelper(this.components),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var c = _step.value;\n          vectorLength = Math.max(vector.indexOf(c) + 1, vectorLength);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return vectorLength;\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      return builder.getTypeFromLength(this.components.length);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var node = this.node;\n      var nodeTypeLength = builder.getTypeLength(node.getNodeType(builder));\n      if (nodeTypeLength > 1) {\n        var type = null;\n        var componentsLength = this.getVectorLength();\n        if (componentsLength >= nodeTypeLength) {\n          // need expand the input node\n          type = builder.getTypeFromLength(this.getVectorLength());\n        }\n        var nodeSnippet = node.build(builder, type);\n        return \"\".concat(nodeSnippet, \".\").concat(this.components);\n      } else {\n        // ignore components if node is a float\n        return node.build(builder);\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(SplitNode.prototype), \"serialize\", this).call(this, data);\n      data.components = this.components;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(SplitNode.prototype), \"deserialize\", this).call(this, data);\n      this.components = data.components;\n    }\n  }]);\n  return SplitNode;\n}(Node);\nexport default SplitNode;","map":{"version":3,"names":["Node","vector","SplitNode","_Node","_inherits","_super","_createSuper","node","_this","components","arguments","length","undefined","_classCallCheck","call","_createClass","key","value","getVectorLength","vectorLength","_iterator","_createForOfIteratorHelper","_step","s","n","done","c","Math","max","indexOf","err","e","f","getNodeType","builder","getTypeFromLength","generate","nodeTypeLength","getTypeLength","type","componentsLength","nodeSnippet","build","concat","serialize","data","_get","_getPrototypeOf","prototype","deserialize"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/nodes/utils/SplitNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport { vector } from '../core/NodeBuilder.js';\n\nclass SplitNode extends Node {\n  constructor(node, components = 'x') {\n    super();\n    this.node = node;\n    this.components = components;\n  }\n\n  getVectorLength() {\n    let vectorLength = this.components.length;\n\n    for (const c of this.components) {\n      vectorLength = Math.max(vector.indexOf(c) + 1, vectorLength);\n    }\n\n    return vectorLength;\n  }\n\n  getNodeType(builder) {\n    return builder.getTypeFromLength(this.components.length);\n  }\n\n  generate(builder) {\n    const node = this.node;\n    const nodeTypeLength = builder.getTypeLength(node.getNodeType(builder));\n\n    if (nodeTypeLength > 1) {\n      let type = null;\n      const componentsLength = this.getVectorLength();\n\n      if (componentsLength >= nodeTypeLength) {\n        // need expand the input node\n        type = builder.getTypeFromLength(this.getVectorLength());\n      }\n\n      const nodeSnippet = node.build(builder, type);\n      return `${nodeSnippet}.${this.components}`;\n    } else {\n      // ignore components if node is a float\n      return node.build(builder);\n    }\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.components = this.components;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.components = data.components;\n  }\n\n}\n\nexport default SplitNode;\n"],"mappings":";;;;;;;AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAClC,SAASC,MAAM,QAAQ,wBAAwB;AAAC,IAE1CC,SAAS,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,SAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,SAAA;EACb,SAAAA,UAAYK,IAAI,EAAoB;IAAA,IAAAC,KAAA;IAAA,IAAlBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,GAAG;IAAAG,eAAA,OAAAX,SAAA;IAChCM,KAAA,GAAAH,MAAA,CAAAS,IAAA;IACAN,KAAA,CAAKD,IAAI,GAAGA,IAAI;IAChBC,KAAA,CAAKC,UAAU,GAAGA,UAAU;IAAC,OAAAD,KAAA;EAC/B;EAACO,YAAA,CAAAb,SAAA;IAAAc,GAAA;IAAAC,KAAA,EAED,SAAAC,gBAAA,EAAkB;MAChB,IAAIC,YAAY,GAAG,IAAI,CAACV,UAAU,CAACE,MAAM;MAAC,IAAAS,SAAA,GAAAC,0BAAA,CAE1B,IAAI,CAACZ,UAAU;QAAAa,KAAA;MAAA;QAA/B,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAiC;UAAA,IAAtBC,CAAC,GAAAJ,KAAA,CAAAL,KAAA;UACVE,YAAY,GAAGQ,IAAI,CAACC,GAAG,CAAC3B,MAAM,CAAC4B,OAAO,CAACH,CAAC,CAAC,GAAG,CAAC,EAAEP,YAAY,CAAC;QAC9D;MAAC,SAAAW,GAAA;QAAAV,SAAA,CAAAW,CAAA,CAAAD,GAAA;MAAA;QAAAV,SAAA,CAAAY,CAAA;MAAA;MAED,OAAOb,YAAY;IACrB;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAgB,YAAYC,OAAO,EAAE;MACnB,OAAOA,OAAO,CAACC,iBAAiB,CAAC,IAAI,CAAC1B,UAAU,CAACE,MAAM,CAAC;IAC1D;EAAC;IAAAK,GAAA;IAAAC,KAAA,EAED,SAAAmB,SAASF,OAAO,EAAE;MAChB,IAAM3B,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,IAAM8B,cAAc,GAAGH,OAAO,CAACI,aAAa,CAAC/B,IAAI,CAAC0B,WAAW,CAACC,OAAO,CAAC,CAAC;MAEvE,IAAIG,cAAc,GAAG,CAAC,EAAE;QACtB,IAAIE,IAAI,GAAG,IAAI;QACf,IAAMC,gBAAgB,GAAG,IAAI,CAACtB,eAAe,EAAE;QAE/C,IAAIsB,gBAAgB,IAAIH,cAAc,EAAE;UACtC;UACAE,IAAI,GAAGL,OAAO,CAACC,iBAAiB,CAAC,IAAI,CAACjB,eAAe,EAAE,CAAC;QAC1D;QAEA,IAAMuB,WAAW,GAAGlC,IAAI,CAACmC,KAAK,CAACR,OAAO,EAAEK,IAAI,CAAC;QAC7C,UAAAI,MAAA,CAAUF,WAAW,OAAAE,MAAA,CAAI,IAAI,CAAClC,UAAU;MAC1C,CAAC,MAAM;QACL;QACA,OAAOF,IAAI,CAACmC,KAAK,CAACR,OAAO,CAAC;MAC5B;IACF;EAAC;IAAAlB,GAAA;IAAAC,KAAA,EAED,SAAA2B,UAAUC,IAAI,EAAE;MACdC,IAAA,CAAAC,eAAA,CAAA7C,SAAA,CAAA8C,SAAA,sBAAAlC,IAAA,OAAgB+B,IAAI;MACpBA,IAAI,CAACpC,UAAU,GAAG,IAAI,CAACA,UAAU;IACnC;EAAC;IAAAO,GAAA;IAAAC,KAAA,EAED,SAAAgC,YAAYJ,IAAI,EAAE;MAChBC,IAAA,CAAAC,eAAA,CAAA7C,SAAA,CAAA8C,SAAA,wBAAAlC,IAAA,OAAkB+B,IAAI;MACtB,IAAI,CAACpC,UAAU,GAAGoC,IAAI,CAACpC,UAAU;IACnC;EAAC;EAAA,OAAAP,SAAA;AAAA,EAlDqBF,IAAI;AAsD5B,eAAeE,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}