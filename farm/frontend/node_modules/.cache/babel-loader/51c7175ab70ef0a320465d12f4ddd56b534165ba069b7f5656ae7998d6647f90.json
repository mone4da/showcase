{"ast":null,"code":"import _classCallCheck from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/samuel/experiment/3d/farm/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Vector3, Loader, FileLoader, Group, BufferGeometry, Float32BufferAttribute, LineBasicMaterial, Material, PointsMaterial, MeshPhongMaterial, LineSegments, Points, Mesh } from 'three';\nvar _object_pattern = /^[og]\\s*(.+)?/; // mtllib file_reference\n\nvar _material_library_pattern = /^mtllib /; // usemtl material_name\n\nvar _material_use_pattern = /^usemtl /; // usemap map_name\n\nvar _map_use_pattern = /^usemap /;\nvar _vA = new Vector3();\nvar _vB = new Vector3();\nvar _vC = new Vector3();\nvar _ab = new Vector3();\nvar _cb = new Vector3();\nfunction ParserState() {\n  var state = {\n    objects: [],\n    object: {},\n    vertices: [],\n    normals: [],\n    colors: [],\n    uvs: [],\n    materials: {},\n    materialLibraries: [],\n    startObject: function startObject(name, fromDeclaration) {\n      // If the current object (initial from reset) is not from a g/o declaration in the parsed\n      // file. We need to use it for the first parsed g/o to keep things in sync.\n      if (this.object && this.object.fromDeclaration === false) {\n        this.object.name = name;\n        this.object.fromDeclaration = fromDeclaration !== false;\n        return;\n      }\n      var previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\n      if (this.object && typeof this.object._finalize === 'function') {\n        this.object._finalize(true);\n      }\n      this.object = {\n        name: name || '',\n        fromDeclaration: fromDeclaration !== false,\n        geometry: {\n          vertices: [],\n          normals: [],\n          colors: [],\n          uvs: [],\n          hasUVIndices: false\n        },\n        materials: [],\n        smooth: true,\n        startMaterial: function startMaterial(name, libraries) {\n          var previous = this._finalize(false); // New usemtl declaration overwrites an inherited material, except if faces were declared\n          // after the material, then it must be preserved for proper MultiMaterial continuation.\n\n          if (previous && (previous.inherited || previous.groupCount <= 0)) {\n            this.materials.splice(previous.index, 1);\n          }\n          var material = {\n            index: this.materials.length,\n            name: name || '',\n            mtllib: Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n            smooth: previous !== undefined ? previous.smooth : this.smooth,\n            groupStart: previous !== undefined ? previous.groupEnd : 0,\n            groupEnd: -1,\n            groupCount: -1,\n            inherited: false,\n            clone: function clone(index) {\n              var cloned = {\n                index: typeof index === 'number' ? index : this.index,\n                name: this.name,\n                mtllib: this.mtllib,\n                smooth: this.smooth,\n                groupStart: 0,\n                groupEnd: -1,\n                groupCount: -1,\n                inherited: false\n              };\n              cloned.clone = this.clone.bind(cloned);\n              return cloned;\n            }\n          };\n          this.materials.push(material);\n          return material;\n        },\n        currentMaterial: function currentMaterial() {\n          if (this.materials.length > 0) {\n            return this.materials[this.materials.length - 1];\n          }\n          return undefined;\n        },\n        _finalize: function _finalize(end) {\n          var lastMultiMaterial = this.currentMaterial();\n          if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n            lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n            lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n            lastMultiMaterial.inherited = false;\n          } // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\n          if (end && this.materials.length > 1) {\n            for (var mi = this.materials.length - 1; mi >= 0; mi--) {\n              if (this.materials[mi].groupCount <= 0) {\n                this.materials.splice(mi, 1);\n              }\n            }\n          } // Guarantee at least one empty material, this makes the creation later more straight forward.\n\n          if (end && this.materials.length === 0) {\n            this.materials.push({\n              name: '',\n              smooth: this.smooth\n            });\n          }\n          return lastMultiMaterial;\n        }\n      }; // Inherit previous objects material.\n      // Spec tells us that a declared material must be set to all objects until a new material is declared.\n      // If a usemtl declaration is encountered while this new object is being parsed, it will\n      // overwrite the inherited material. Exception being that there was already face declarations\n      // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n      if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n        var declared = previousMaterial.clone(0);\n        declared.inherited = true;\n        this.object.materials.push(declared);\n      }\n      this.objects.push(this.object);\n    },\n    finalize: function finalize() {\n      if (this.object && typeof this.object._finalize === 'function') {\n        this.object._finalize(true);\n      }\n    },\n    parseVertexIndex: function parseVertexIndex(value, len) {\n      var index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 3) * 3;\n    },\n    parseNormalIndex: function parseNormalIndex(value, len) {\n      var index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 3) * 3;\n    },\n    parseUVIndex: function parseUVIndex(value, len) {\n      var index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 2) * 2;\n    },\n    addVertex: function addVertex(a, b, c) {\n      var src = this.vertices;\n      var dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addVertexPoint: function addVertexPoint(a) {\n      var src = this.vertices;\n      var dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n    },\n    addVertexLine: function addVertexLine(a) {\n      var src = this.vertices;\n      var dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n    },\n    addNormal: function addNormal(a, b, c) {\n      var src = this.normals;\n      var dst = this.object.geometry.normals;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addFaceNormal: function addFaceNormal(a, b, c) {\n      var src = this.vertices;\n      var dst = this.object.geometry.normals;\n      _vA.fromArray(src, a);\n      _vB.fromArray(src, b);\n      _vC.fromArray(src, c);\n      _cb.subVectors(_vC, _vB);\n      _ab.subVectors(_vA, _vB);\n      _cb.cross(_ab);\n      _cb.normalize();\n      dst.push(_cb.x, _cb.y, _cb.z);\n      dst.push(_cb.x, _cb.y, _cb.z);\n      dst.push(_cb.x, _cb.y, _cb.z);\n    },\n    addColor: function addColor(a, b, c) {\n      var src = this.colors;\n      var dst = this.object.geometry.colors;\n      if (src[a] !== undefined) dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      if (src[b] !== undefined) dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      if (src[c] !== undefined) dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addUV: function addUV(a, b, c) {\n      var src = this.uvs;\n      var dst = this.object.geometry.uvs;\n      dst.push(src[a + 0], src[a + 1]);\n      dst.push(src[b + 0], src[b + 1]);\n      dst.push(src[c + 0], src[c + 1]);\n    },\n    addDefaultUV: function addDefaultUV() {\n      var dst = this.object.geometry.uvs;\n      dst.push(0, 0);\n      dst.push(0, 0);\n      dst.push(0, 0);\n    },\n    addUVLine: function addUVLine(a) {\n      var src = this.uvs;\n      var dst = this.object.geometry.uvs;\n      dst.push(src[a + 0], src[a + 1]);\n    },\n    addFace: function addFace(a, b, c, ua, ub, uc, na, nb, nc) {\n      var vLen = this.vertices.length;\n      var ia = this.parseVertexIndex(a, vLen);\n      var ib = this.parseVertexIndex(b, vLen);\n      var ic = this.parseVertexIndex(c, vLen);\n      this.addVertex(ia, ib, ic);\n      this.addColor(ia, ib, ic); // normals\n\n      if (na !== undefined && na !== '') {\n        var nLen = this.normals.length;\n        ia = this.parseNormalIndex(na, nLen);\n        ib = this.parseNormalIndex(nb, nLen);\n        ic = this.parseNormalIndex(nc, nLen);\n        this.addNormal(ia, ib, ic);\n      } else {\n        this.addFaceNormal(ia, ib, ic);\n      } // uvs\n\n      if (ua !== undefined && ua !== '') {\n        var uvLen = this.uvs.length;\n        ia = this.parseUVIndex(ua, uvLen);\n        ib = this.parseUVIndex(ub, uvLen);\n        ic = this.parseUVIndex(uc, uvLen);\n        this.addUV(ia, ib, ic);\n        this.object.geometry.hasUVIndices = true;\n      } else {\n        // add placeholder values (for inconsistent face definitions)\n        this.addDefaultUV();\n      }\n    },\n    addPointGeometry: function addPointGeometry(vertices) {\n      this.object.geometry.type = 'Points';\n      var vLen = this.vertices.length;\n      for (var vi = 0, l = vertices.length; vi < l; vi++) {\n        var index = this.parseVertexIndex(vertices[vi], vLen);\n        this.addVertexPoint(index);\n        this.addColor(index);\n      }\n    },\n    addLineGeometry: function addLineGeometry(vertices, uvs) {\n      this.object.geometry.type = 'Line';\n      var vLen = this.vertices.length;\n      var uvLen = this.uvs.length;\n      for (var vi = 0, l = vertices.length; vi < l; vi++) {\n        this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n      }\n      for (var uvi = 0, _l = uvs.length; uvi < _l; uvi++) {\n        this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n      }\n    }\n  };\n  state.startObject('', false);\n  return state;\n} //\nvar OBJLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(OBJLoader, _Loader);\n  var _super = _createSuper(OBJLoader);\n  function OBJLoader(manager) {\n    var _this;\n    _classCallCheck(this, OBJLoader);\n    _this = _super.call(this, manager);\n    _this.materials = null;\n    return _this;\n  }\n  _createClass(OBJLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"setMaterials\",\n    value: function setMaterials(materials) {\n      this.materials = materials;\n      return this;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(text) {\n      var state = new ParserState();\n      if (text.indexOf('\\r\\n') !== -1) {\n        // This is faster than String.split with regex that splits on both\n        text = text.replace(/\\r\\n/g, '\\n');\n      }\n      if (text.indexOf('\\\\\\n') !== -1) {\n        // join lines separated by a line continuation character (\\)\n        text = text.replace(/\\\\\\n/g, '');\n      }\n      var lines = text.split('\\n');\n      var line = '',\n        lineFirstChar = '';\n      var lineLength = 0;\n      var result = []; // Faster to just trim left side of the line. Use if available.\n\n      var trimLeft = typeof ''.trimLeft === 'function';\n      for (var i = 0, l = lines.length; i < l; i++) {\n        line = lines[i];\n        line = trimLeft ? line.trimLeft() : line.trim();\n        lineLength = line.length;\n        if (lineLength === 0) continue;\n        lineFirstChar = line.charAt(0); // @todo invoke passed in handler if any\n\n        if (lineFirstChar === '#') continue;\n        if (lineFirstChar === 'v') {\n          var data = line.split(/\\s+/);\n          switch (data[0]) {\n            case 'v':\n              state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n              if (data.length >= 7) {\n                state.colors.push(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]));\n              } else {\n                // if no colors are defined, add placeholders so color and vertex indices match\n                state.colors.push(undefined, undefined, undefined);\n              }\n              break;\n            case 'vn':\n              state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n              break;\n            case 'vt':\n              state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n              break;\n          }\n        } else if (lineFirstChar === 'f') {\n          var lineData = line.substr(1).trim();\n          var vertexData = lineData.split(/\\s+/);\n          var faceVertices = []; // Parse the face vertex data into an easy to work with format\n\n          for (var j = 0, jl = vertexData.length; j < jl; j++) {\n            var vertex = vertexData[j];\n            if (vertex.length > 0) {\n              var vertexParts = vertex.split('/');\n              faceVertices.push(vertexParts);\n            }\n          } // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n          var v1 = faceVertices[0];\n          for (var _j = 1, _jl = faceVertices.length - 1; _j < _jl; _j++) {\n            var v2 = faceVertices[_j];\n            var v3 = faceVertices[_j + 1];\n            state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n          }\n        } else if (lineFirstChar === 'l') {\n          var lineParts = line.substring(1).trim().split(' ');\n          var lineVertices = [];\n          var lineUVs = [];\n          if (line.indexOf('/') === -1) {\n            lineVertices = lineParts;\n          } else {\n            for (var li = 0, llen = lineParts.length; li < llen; li++) {\n              var parts = lineParts[li].split('/');\n              if (parts[0] !== '') lineVertices.push(parts[0]);\n              if (parts[1] !== '') lineUVs.push(parts[1]);\n            }\n          }\n          state.addLineGeometry(lineVertices, lineUVs);\n        } else if (lineFirstChar === 'p') {\n          var _lineData = line.substr(1).trim();\n          var pointData = _lineData.split(' ');\n          state.addPointGeometry(pointData);\n        } else if ((result = _object_pattern.exec(line)) !== null) {\n          // o object_name\n          // or\n          // g group_name\n          // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n          // let name = result[ 0 ].substr( 1 ).trim();\n          var name = (' ' + result[0].substr(1).trim()).substr(1);\n          state.startObject(name);\n        } else if (_material_use_pattern.test(line)) {\n          // material\n          state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n        } else if (_material_library_pattern.test(line)) {\n          // mtl file\n          state.materialLibraries.push(line.substring(7).trim());\n        } else if (_map_use_pattern.test(line)) {\n          // the line is parsed but ignored since the loader assumes textures are defined MTL files\n          // (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n          console.warn('THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.');\n        } else if (lineFirstChar === 's') {\n          result = line.split(' '); // smooth shading\n          // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n          // but does not define a usemtl for each face set.\n          // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n          // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n          // where explicit usemtl defines geometry groups.\n          // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n          /*\n           * http://paulbourke.net/dataformats/obj/\n           * or\n           * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n           *\n           * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n           * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n           * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n           * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n           * than 0.\"\n           */\n\n          if (result.length > 1) {\n            var value = result[1].trim().toLowerCase();\n            state.object.smooth = value !== '0' && value !== 'off';\n          } else {\n            // ZBrush can produce \"s\" lines #11707\n            state.object.smooth = true;\n          }\n          var material = state.object.currentMaterial();\n          if (material) material.smooth = state.object.smooth;\n        } else {\n          // Handle null terminated files without exception\n          if (line === '\\0') continue;\n          console.warn('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n        }\n      }\n      state.finalize();\n      var container = new Group();\n      container.materialLibraries = [].concat(state.materialLibraries);\n      var hasPrimitives = !(state.objects.length === 1 && state.objects[0].geometry.vertices.length === 0);\n      if (hasPrimitives === true) {\n        for (var _i = 0, _l2 = state.objects.length; _i < _l2; _i++) {\n          var object = state.objects[_i];\n          var geometry = object.geometry;\n          var materials = object.materials;\n          var isLine = geometry.type === 'Line';\n          var isPoints = geometry.type === 'Points';\n          var hasVertexColors = false; // Skip o/g line declarations that did not follow with any faces\n\n          if (geometry.vertices.length === 0) continue;\n          var buffergeometry = new BufferGeometry();\n          buffergeometry.setAttribute('position', new Float32BufferAttribute(geometry.vertices, 3));\n          if (geometry.normals.length > 0) {\n            buffergeometry.setAttribute('normal', new Float32BufferAttribute(geometry.normals, 3));\n          }\n          if (geometry.colors.length > 0) {\n            hasVertexColors = true;\n            buffergeometry.setAttribute('color', new Float32BufferAttribute(geometry.colors, 3));\n          }\n          if (geometry.hasUVIndices === true) {\n            buffergeometry.setAttribute('uv', new Float32BufferAttribute(geometry.uvs, 2));\n          } // Create materials\n\n          var createdMaterials = [];\n          for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n            var sourceMaterial = materials[mi];\n            var materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n            var _material = state.materials[materialHash];\n            if (this.materials !== null) {\n              _material = this.materials.create(sourceMaterial.name); // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\n              if (isLine && _material && !(_material instanceof LineBasicMaterial)) {\n                var materialLine = new LineBasicMaterial();\n                Material.prototype.copy.call(materialLine, _material);\n                materialLine.color.copy(_material.color);\n                _material = materialLine;\n              } else if (isPoints && _material && !(_material instanceof PointsMaterial)) {\n                var materialPoints = new PointsMaterial({\n                  size: 10,\n                  sizeAttenuation: false\n                });\n                Material.prototype.copy.call(materialPoints, _material);\n                materialPoints.color.copy(_material.color);\n                materialPoints.map = _material.map;\n                _material = materialPoints;\n              }\n            }\n            if (_material === undefined) {\n              if (isLine) {\n                _material = new LineBasicMaterial();\n              } else if (isPoints) {\n                _material = new PointsMaterial({\n                  size: 1,\n                  sizeAttenuation: false\n                });\n              } else {\n                _material = new MeshPhongMaterial();\n              }\n              _material.name = sourceMaterial.name;\n              _material.flatShading = sourceMaterial.smooth ? false : true;\n              _material.vertexColors = hasVertexColors;\n              state.materials[materialHash] = _material;\n            }\n            createdMaterials.push(_material);\n          } // Create mesh\n\n          var mesh = void 0;\n          if (createdMaterials.length > 1) {\n            for (var _mi = 0, _miLen = materials.length; _mi < _miLen; _mi++) {\n              var _sourceMaterial = materials[_mi];\n              buffergeometry.addGroup(_sourceMaterial.groupStart, _sourceMaterial.groupCount, _mi);\n            }\n            if (isLine) {\n              mesh = new LineSegments(buffergeometry, createdMaterials);\n            } else if (isPoints) {\n              mesh = new Points(buffergeometry, createdMaterials);\n            } else {\n              mesh = new Mesh(buffergeometry, createdMaterials);\n            }\n          } else {\n            if (isLine) {\n              mesh = new LineSegments(buffergeometry, createdMaterials[0]);\n            } else if (isPoints) {\n              mesh = new Points(buffergeometry, createdMaterials[0]);\n            } else {\n              mesh = new Mesh(buffergeometry, createdMaterials[0]);\n            }\n          }\n          mesh.name = object.name;\n          container.add(mesh);\n        }\n      } else {\n        // if there is only the default parser state object with no geometry data, interpret data as point cloud\n        if (state.vertices.length > 0) {\n          var _material2 = new PointsMaterial({\n            size: 1,\n            sizeAttenuation: false\n          });\n          var _buffergeometry = new BufferGeometry();\n          _buffergeometry.setAttribute('position', new Float32BufferAttribute(state.vertices, 3));\n          if (state.colors.length > 0 && state.colors[0] !== undefined) {\n            _buffergeometry.setAttribute('color', new Float32BufferAttribute(state.colors, 3));\n            _material2.vertexColors = true;\n          }\n          var points = new Points(_buffergeometry, _material2);\n          container.add(points);\n        }\n      }\n      return container;\n    }\n  }]);\n  return OBJLoader;\n}(Loader);\nexport { OBJLoader };","map":{"version":3,"names":["Vector3","Loader","FileLoader","Group","BufferGeometry","Float32BufferAttribute","LineBasicMaterial","Material","PointsMaterial","MeshPhongMaterial","LineSegments","Points","Mesh","_object_pattern","_material_library_pattern","_material_use_pattern","_map_use_pattern","_vA","_vB","_vC","_ab","_cb","ParserState","state","objects","object","vertices","normals","colors","uvs","materials","materialLibraries","startObject","name","fromDeclaration","previousMaterial","currentMaterial","undefined","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addFaceNormal","fromArray","subVectors","cross","normalize","x","y","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","OBJLoader","_Loader","_inherits","_super","_createSuper","manager","_this","_classCallCheck","call","_createClass","key","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","setMaterials","indexOf","replace","lines","split","line","lineFirstChar","lineLength","result","trimLeft","i","trim","charAt","data","parseFloat","lineData","substr","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","warn","toLowerCase","container","concat","hasPrimitives","isLine","isPoints","hasVertexColors","buffergeometry","setAttribute","createdMaterials","miLen","sourceMaterial","materialHash","create","materialLine","prototype","copy","color","materialPoints","size","sizeAttenuation","map","flatShading","vertexColors","mesh","addGroup","add","points"],"sources":["/home/samuel/experiment/3d/farm/frontend/node_modules/three-stdlib/loaders/OBJLoader.js"],"sourcesContent":["import { Vector3, Loader, FileLoader, Group, BufferGeometry, Float32BufferAttribute, LineBasicMaterial, Material, PointsMaterial, MeshPhongMaterial, LineSegments, Points, Mesh } from 'three';\n\nconst _object_pattern = /^[og]\\s*(.+)?/; // mtllib file_reference\n\nconst _material_library_pattern = /^mtllib /; // usemtl material_name\n\nconst _material_use_pattern = /^usemtl /; // usemap map_name\n\nconst _map_use_pattern = /^usemap /;\n\nconst _vA = new Vector3();\n\nconst _vB = new Vector3();\n\nconst _vC = new Vector3();\n\nconst _ab = new Vector3();\n\nconst _cb = new Vector3();\n\nfunction ParserState() {\n  const state = {\n    objects: [],\n    object: {},\n    vertices: [],\n    normals: [],\n    colors: [],\n    uvs: [],\n    materials: {},\n    materialLibraries: [],\n    startObject: function (name, fromDeclaration) {\n      // If the current object (initial from reset) is not from a g/o declaration in the parsed\n      // file. We need to use it for the first parsed g/o to keep things in sync.\n      if (this.object && this.object.fromDeclaration === false) {\n        this.object.name = name;\n        this.object.fromDeclaration = fromDeclaration !== false;\n        return;\n      }\n\n      const previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\n\n      if (this.object && typeof this.object._finalize === 'function') {\n        this.object._finalize(true);\n      }\n\n      this.object = {\n        name: name || '',\n        fromDeclaration: fromDeclaration !== false,\n        geometry: {\n          vertices: [],\n          normals: [],\n          colors: [],\n          uvs: [],\n          hasUVIndices: false\n        },\n        materials: [],\n        smooth: true,\n        startMaterial: function (name, libraries) {\n          const previous = this._finalize(false); // New usemtl declaration overwrites an inherited material, except if faces were declared\n          // after the material, then it must be preserved for proper MultiMaterial continuation.\n\n\n          if (previous && (previous.inherited || previous.groupCount <= 0)) {\n            this.materials.splice(previous.index, 1);\n          }\n\n          const material = {\n            index: this.materials.length,\n            name: name || '',\n            mtllib: Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n            smooth: previous !== undefined ? previous.smooth : this.smooth,\n            groupStart: previous !== undefined ? previous.groupEnd : 0,\n            groupEnd: -1,\n            groupCount: -1,\n            inherited: false,\n            clone: function (index) {\n              const cloned = {\n                index: typeof index === 'number' ? index : this.index,\n                name: this.name,\n                mtllib: this.mtllib,\n                smooth: this.smooth,\n                groupStart: 0,\n                groupEnd: -1,\n                groupCount: -1,\n                inherited: false\n              };\n              cloned.clone = this.clone.bind(cloned);\n              return cloned;\n            }\n          };\n          this.materials.push(material);\n          return material;\n        },\n        currentMaterial: function () {\n          if (this.materials.length > 0) {\n            return this.materials[this.materials.length - 1];\n          }\n\n          return undefined;\n        },\n        _finalize: function (end) {\n          const lastMultiMaterial = this.currentMaterial();\n\n          if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n            lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n            lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n            lastMultiMaterial.inherited = false;\n          } // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\n\n          if (end && this.materials.length > 1) {\n            for (let mi = this.materials.length - 1; mi >= 0; mi--) {\n              if (this.materials[mi].groupCount <= 0) {\n                this.materials.splice(mi, 1);\n              }\n            }\n          } // Guarantee at least one empty material, this makes the creation later more straight forward.\n\n\n          if (end && this.materials.length === 0) {\n            this.materials.push({\n              name: '',\n              smooth: this.smooth\n            });\n          }\n\n          return lastMultiMaterial;\n        }\n      }; // Inherit previous objects material.\n      // Spec tells us that a declared material must be set to all objects until a new material is declared.\n      // If a usemtl declaration is encountered while this new object is being parsed, it will\n      // overwrite the inherited material. Exception being that there was already face declarations\n      // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n      if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n        const declared = previousMaterial.clone(0);\n        declared.inherited = true;\n        this.object.materials.push(declared);\n      }\n\n      this.objects.push(this.object);\n    },\n    finalize: function () {\n      if (this.object && typeof this.object._finalize === 'function') {\n        this.object._finalize(true);\n      }\n    },\n    parseVertexIndex: function (value, len) {\n      const index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 3) * 3;\n    },\n    parseNormalIndex: function (value, len) {\n      const index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 3) * 3;\n    },\n    parseUVIndex: function (value, len) {\n      const index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 2) * 2;\n    },\n    addVertex: function (a, b, c) {\n      const src = this.vertices;\n      const dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addVertexPoint: function (a) {\n      const src = this.vertices;\n      const dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n    },\n    addVertexLine: function (a) {\n      const src = this.vertices;\n      const dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n    },\n    addNormal: function (a, b, c) {\n      const src = this.normals;\n      const dst = this.object.geometry.normals;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addFaceNormal: function (a, b, c) {\n      const src = this.vertices;\n      const dst = this.object.geometry.normals;\n\n      _vA.fromArray(src, a);\n\n      _vB.fromArray(src, b);\n\n      _vC.fromArray(src, c);\n\n      _cb.subVectors(_vC, _vB);\n\n      _ab.subVectors(_vA, _vB);\n\n      _cb.cross(_ab);\n\n      _cb.normalize();\n\n      dst.push(_cb.x, _cb.y, _cb.z);\n      dst.push(_cb.x, _cb.y, _cb.z);\n      dst.push(_cb.x, _cb.y, _cb.z);\n    },\n    addColor: function (a, b, c) {\n      const src = this.colors;\n      const dst = this.object.geometry.colors;\n      if (src[a] !== undefined) dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      if (src[b] !== undefined) dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      if (src[c] !== undefined) dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addUV: function (a, b, c) {\n      const src = this.uvs;\n      const dst = this.object.geometry.uvs;\n      dst.push(src[a + 0], src[a + 1]);\n      dst.push(src[b + 0], src[b + 1]);\n      dst.push(src[c + 0], src[c + 1]);\n    },\n    addDefaultUV: function () {\n      const dst = this.object.geometry.uvs;\n      dst.push(0, 0);\n      dst.push(0, 0);\n      dst.push(0, 0);\n    },\n    addUVLine: function (a) {\n      const src = this.uvs;\n      const dst = this.object.geometry.uvs;\n      dst.push(src[a + 0], src[a + 1]);\n    },\n    addFace: function (a, b, c, ua, ub, uc, na, nb, nc) {\n      const vLen = this.vertices.length;\n      let ia = this.parseVertexIndex(a, vLen);\n      let ib = this.parseVertexIndex(b, vLen);\n      let ic = this.parseVertexIndex(c, vLen);\n      this.addVertex(ia, ib, ic);\n      this.addColor(ia, ib, ic); // normals\n\n      if (na !== undefined && na !== '') {\n        const nLen = this.normals.length;\n        ia = this.parseNormalIndex(na, nLen);\n        ib = this.parseNormalIndex(nb, nLen);\n        ic = this.parseNormalIndex(nc, nLen);\n        this.addNormal(ia, ib, ic);\n      } else {\n        this.addFaceNormal(ia, ib, ic);\n      } // uvs\n\n\n      if (ua !== undefined && ua !== '') {\n        const uvLen = this.uvs.length;\n        ia = this.parseUVIndex(ua, uvLen);\n        ib = this.parseUVIndex(ub, uvLen);\n        ic = this.parseUVIndex(uc, uvLen);\n        this.addUV(ia, ib, ic);\n        this.object.geometry.hasUVIndices = true;\n      } else {\n        // add placeholder values (for inconsistent face definitions)\n        this.addDefaultUV();\n      }\n    },\n    addPointGeometry: function (vertices) {\n      this.object.geometry.type = 'Points';\n      const vLen = this.vertices.length;\n\n      for (let vi = 0, l = vertices.length; vi < l; vi++) {\n        const index = this.parseVertexIndex(vertices[vi], vLen);\n        this.addVertexPoint(index);\n        this.addColor(index);\n      }\n    },\n    addLineGeometry: function (vertices, uvs) {\n      this.object.geometry.type = 'Line';\n      const vLen = this.vertices.length;\n      const uvLen = this.uvs.length;\n\n      for (let vi = 0, l = vertices.length; vi < l; vi++) {\n        this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n      }\n\n      for (let uvi = 0, l = uvs.length; uvi < l; uvi++) {\n        this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n      }\n    }\n  };\n  state.startObject('', false);\n  return state;\n} //\n\n\nclass OBJLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.materials = null;\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  setMaterials(materials) {\n    this.materials = materials;\n    return this;\n  }\n\n  parse(text) {\n    const state = new ParserState();\n\n    if (text.indexOf('\\r\\n') !== -1) {\n      // This is faster than String.split with regex that splits on both\n      text = text.replace(/\\r\\n/g, '\\n');\n    }\n\n    if (text.indexOf('\\\\\\n') !== -1) {\n      // join lines separated by a line continuation character (\\)\n      text = text.replace(/\\\\\\n/g, '');\n    }\n\n    const lines = text.split('\\n');\n    let line = '',\n        lineFirstChar = '';\n    let lineLength = 0;\n    let result = []; // Faster to just trim left side of the line. Use if available.\n\n    const trimLeft = typeof ''.trimLeft === 'function';\n\n    for (let i = 0, l = lines.length; i < l; i++) {\n      line = lines[i];\n      line = trimLeft ? line.trimLeft() : line.trim();\n      lineLength = line.length;\n      if (lineLength === 0) continue;\n      lineFirstChar = line.charAt(0); // @todo invoke passed in handler if any\n\n      if (lineFirstChar === '#') continue;\n\n      if (lineFirstChar === 'v') {\n        const data = line.split(/\\s+/);\n\n        switch (data[0]) {\n          case 'v':\n            state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n\n            if (data.length >= 7) {\n              state.colors.push(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]));\n            } else {\n              // if no colors are defined, add placeholders so color and vertex indices match\n              state.colors.push(undefined, undefined, undefined);\n            }\n\n            break;\n\n          case 'vn':\n            state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n            break;\n\n          case 'vt':\n            state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n            break;\n        }\n      } else if (lineFirstChar === 'f') {\n        const lineData = line.substr(1).trim();\n        const vertexData = lineData.split(/\\s+/);\n        const faceVertices = []; // Parse the face vertex data into an easy to work with format\n\n        for (let j = 0, jl = vertexData.length; j < jl; j++) {\n          const vertex = vertexData[j];\n\n          if (vertex.length > 0) {\n            const vertexParts = vertex.split('/');\n            faceVertices.push(vertexParts);\n          }\n        } // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\n        const v1 = faceVertices[0];\n\n        for (let j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n          const v2 = faceVertices[j];\n          const v3 = faceVertices[j + 1];\n          state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n        }\n      } else if (lineFirstChar === 'l') {\n        const lineParts = line.substring(1).trim().split(' ');\n        let lineVertices = [];\n        const lineUVs = [];\n\n        if (line.indexOf('/') === -1) {\n          lineVertices = lineParts;\n        } else {\n          for (let li = 0, llen = lineParts.length; li < llen; li++) {\n            const parts = lineParts[li].split('/');\n            if (parts[0] !== '') lineVertices.push(parts[0]);\n            if (parts[1] !== '') lineUVs.push(parts[1]);\n          }\n        }\n\n        state.addLineGeometry(lineVertices, lineUVs);\n      } else if (lineFirstChar === 'p') {\n        const lineData = line.substr(1).trim();\n        const pointData = lineData.split(' ');\n        state.addPointGeometry(pointData);\n      } else if ((result = _object_pattern.exec(line)) !== null) {\n        // o object_name\n        // or\n        // g group_name\n        // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n        // let name = result[ 0 ].substr( 1 ).trim();\n        const name = (' ' + result[0].substr(1).trim()).substr(1);\n        state.startObject(name);\n      } else if (_material_use_pattern.test(line)) {\n        // material\n        state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n      } else if (_material_library_pattern.test(line)) {\n        // mtl file\n        state.materialLibraries.push(line.substring(7).trim());\n      } else if (_map_use_pattern.test(line)) {\n        // the line is parsed but ignored since the loader assumes textures are defined MTL files\n        // (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n        console.warn('THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.');\n      } else if (lineFirstChar === 's') {\n        result = line.split(' '); // smooth shading\n        // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n        // but does not define a usemtl for each face set.\n        // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n        // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n        // where explicit usemtl defines geometry groups.\n        // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n        /*\n         * http://paulbourke.net/dataformats/obj/\n         * or\n         * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n         *\n         * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n         * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n         * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n         * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n         * than 0.\"\n         */\n\n        if (result.length > 1) {\n          const value = result[1].trim().toLowerCase();\n          state.object.smooth = value !== '0' && value !== 'off';\n        } else {\n          // ZBrush can produce \"s\" lines #11707\n          state.object.smooth = true;\n        }\n\n        const material = state.object.currentMaterial();\n        if (material) material.smooth = state.object.smooth;\n      } else {\n        // Handle null terminated files without exception\n        if (line === '\\0') continue;\n        console.warn('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n      }\n    }\n\n    state.finalize();\n    const container = new Group();\n    container.materialLibraries = [].concat(state.materialLibraries);\n    const hasPrimitives = !(state.objects.length === 1 && state.objects[0].geometry.vertices.length === 0);\n\n    if (hasPrimitives === true) {\n      for (let i = 0, l = state.objects.length; i < l; i++) {\n        const object = state.objects[i];\n        const geometry = object.geometry;\n        const materials = object.materials;\n        const isLine = geometry.type === 'Line';\n        const isPoints = geometry.type === 'Points';\n        let hasVertexColors = false; // Skip o/g line declarations that did not follow with any faces\n\n        if (geometry.vertices.length === 0) continue;\n        const buffergeometry = new BufferGeometry();\n        buffergeometry.setAttribute('position', new Float32BufferAttribute(geometry.vertices, 3));\n\n        if (geometry.normals.length > 0) {\n          buffergeometry.setAttribute('normal', new Float32BufferAttribute(geometry.normals, 3));\n        }\n\n        if (geometry.colors.length > 0) {\n          hasVertexColors = true;\n          buffergeometry.setAttribute('color', new Float32BufferAttribute(geometry.colors, 3));\n        }\n\n        if (geometry.hasUVIndices === true) {\n          buffergeometry.setAttribute('uv', new Float32BufferAttribute(geometry.uvs, 2));\n        } // Create materials\n\n\n        const createdMaterials = [];\n\n        for (let mi = 0, miLen = materials.length; mi < miLen; mi++) {\n          const sourceMaterial = materials[mi];\n          const materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n          let material = state.materials[materialHash];\n\n          if (this.materials !== null) {\n            material = this.materials.create(sourceMaterial.name); // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\n            if (isLine && material && !(material instanceof LineBasicMaterial)) {\n              const materialLine = new LineBasicMaterial();\n              Material.prototype.copy.call(materialLine, material);\n              materialLine.color.copy(material.color);\n              material = materialLine;\n            } else if (isPoints && material && !(material instanceof PointsMaterial)) {\n              const materialPoints = new PointsMaterial({\n                size: 10,\n                sizeAttenuation: false\n              });\n              Material.prototype.copy.call(materialPoints, material);\n              materialPoints.color.copy(material.color);\n              materialPoints.map = material.map;\n              material = materialPoints;\n            }\n          }\n\n          if (material === undefined) {\n            if (isLine) {\n              material = new LineBasicMaterial();\n            } else if (isPoints) {\n              material = new PointsMaterial({\n                size: 1,\n                sizeAttenuation: false\n              });\n            } else {\n              material = new MeshPhongMaterial();\n            }\n\n            material.name = sourceMaterial.name;\n            material.flatShading = sourceMaterial.smooth ? false : true;\n            material.vertexColors = hasVertexColors;\n            state.materials[materialHash] = material;\n          }\n\n          createdMaterials.push(material);\n        } // Create mesh\n\n\n        let mesh;\n\n        if (createdMaterials.length > 1) {\n          for (let mi = 0, miLen = materials.length; mi < miLen; mi++) {\n            const sourceMaterial = materials[mi];\n            buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, mi);\n          }\n\n          if (isLine) {\n            mesh = new LineSegments(buffergeometry, createdMaterials);\n          } else if (isPoints) {\n            mesh = new Points(buffergeometry, createdMaterials);\n          } else {\n            mesh = new Mesh(buffergeometry, createdMaterials);\n          }\n        } else {\n          if (isLine) {\n            mesh = new LineSegments(buffergeometry, createdMaterials[0]);\n          } else if (isPoints) {\n            mesh = new Points(buffergeometry, createdMaterials[0]);\n          } else {\n            mesh = new Mesh(buffergeometry, createdMaterials[0]);\n          }\n        }\n\n        mesh.name = object.name;\n        container.add(mesh);\n      }\n    } else {\n      // if there is only the default parser state object with no geometry data, interpret data as point cloud\n      if (state.vertices.length > 0) {\n        const material = new PointsMaterial({\n          size: 1,\n          sizeAttenuation: false\n        });\n        const buffergeometry = new BufferGeometry();\n        buffergeometry.setAttribute('position', new Float32BufferAttribute(state.vertices, 3));\n\n        if (state.colors.length > 0 && state.colors[0] !== undefined) {\n          buffergeometry.setAttribute('color', new Float32BufferAttribute(state.colors, 3));\n          material.vertexColors = true;\n        }\n\n        const points = new Points(buffergeometry, material);\n        container.add(points);\n      }\n    }\n\n    return container;\n  }\n\n}\n\nexport { OBJLoader };\n"],"mappings":";;;;AAAA,SAASA,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,EAAEC,cAAc,EAAEC,sBAAsB,EAAEC,iBAAiB,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,YAAY,EAAEC,MAAM,EAAEC,IAAI,QAAQ,OAAO;AAE9L,IAAMC,eAAe,GAAG,eAAe,CAAC,CAAC;;AAEzC,IAAMC,yBAAyB,GAAG,UAAU,CAAC,CAAC;;AAE9C,IAAMC,qBAAqB,GAAG,UAAU,CAAC,CAAC;;AAE1C,IAAMC,gBAAgB,GAAG,UAAU;AAEnC,IAAMC,GAAG,GAAG,IAAIjB,OAAO,EAAE;AAEzB,IAAMkB,GAAG,GAAG,IAAIlB,OAAO,EAAE;AAEzB,IAAMmB,GAAG,GAAG,IAAInB,OAAO,EAAE;AAEzB,IAAMoB,GAAG,GAAG,IAAIpB,OAAO,EAAE;AAEzB,IAAMqB,GAAG,GAAG,IAAIrB,OAAO,EAAE;AAEzB,SAASsB,WAAWA,CAAA,EAAG;EACrB,IAAMC,KAAK,GAAG;IACZC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,CAAC,CAAC;IACVC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,GAAG,EAAE,EAAE;IACPC,SAAS,EAAE,CAAC,CAAC;IACbC,iBAAiB,EAAE,EAAE;IACrBC,WAAW,EAAE,SAAAA,YAAUC,IAAI,EAAEC,eAAe,EAAE;MAC5C;MACA;MACA,IAAI,IAAI,CAACT,MAAM,IAAI,IAAI,CAACA,MAAM,CAACS,eAAe,KAAK,KAAK,EAAE;QACxD,IAAI,CAACT,MAAM,CAACQ,IAAI,GAAGA,IAAI;QACvB,IAAI,CAACR,MAAM,CAACS,eAAe,GAAGA,eAAe,KAAK,KAAK;QACvD;MACF;MAEA,IAAMC,gBAAgB,GAAG,IAAI,CAACV,MAAM,IAAI,OAAO,IAAI,CAACA,MAAM,CAACW,eAAe,KAAK,UAAU,GAAG,IAAI,CAACX,MAAM,CAACW,eAAe,EAAE,GAAGC,SAAS;MAErI,IAAI,IAAI,CAACZ,MAAM,IAAI,OAAO,IAAI,CAACA,MAAM,CAACa,SAAS,KAAK,UAAU,EAAE;QAC9D,IAAI,CAACb,MAAM,CAACa,SAAS,CAAC,IAAI,CAAC;MAC7B;MAEA,IAAI,CAACb,MAAM,GAAG;QACZQ,IAAI,EAAEA,IAAI,IAAI,EAAE;QAChBC,eAAe,EAAEA,eAAe,KAAK,KAAK;QAC1CK,QAAQ,EAAE;UACRb,QAAQ,EAAE,EAAE;UACZC,OAAO,EAAE,EAAE;UACXC,MAAM,EAAE,EAAE;UACVC,GAAG,EAAE,EAAE;UACPW,YAAY,EAAE;QAChB,CAAC;QACDV,SAAS,EAAE,EAAE;QACbW,MAAM,EAAE,IAAI;QACZC,aAAa,EAAE,SAAAA,cAAUT,IAAI,EAAEU,SAAS,EAAE;UACxC,IAAMC,QAAQ,GAAG,IAAI,CAACN,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;UACxC;;UAGA,IAAIM,QAAQ,KAAKA,QAAQ,CAACC,SAAS,IAAID,QAAQ,CAACE,UAAU,IAAI,CAAC,CAAC,EAAE;YAChE,IAAI,CAAChB,SAAS,CAACiB,MAAM,CAACH,QAAQ,CAACI,KAAK,EAAE,CAAC,CAAC;UAC1C;UAEA,IAAMC,QAAQ,GAAG;YACfD,KAAK,EAAE,IAAI,CAAClB,SAAS,CAACoB,MAAM;YAC5BjB,IAAI,EAAEA,IAAI,IAAI,EAAE;YAChBkB,MAAM,EAAEC,KAAK,CAACC,OAAO,CAACV,SAAS,CAAC,IAAIA,SAAS,CAACO,MAAM,GAAG,CAAC,GAAGP,SAAS,CAACA,SAAS,CAACO,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;YAC/FT,MAAM,EAAEG,QAAQ,KAAKP,SAAS,GAAGO,QAAQ,CAACH,MAAM,GAAG,IAAI,CAACA,MAAM;YAC9Da,UAAU,EAAEV,QAAQ,KAAKP,SAAS,GAAGO,QAAQ,CAACW,QAAQ,GAAG,CAAC;YAC1DA,QAAQ,EAAE,CAAC,CAAC;YACZT,UAAU,EAAE,CAAC,CAAC;YACdD,SAAS,EAAE,KAAK;YAChBW,KAAK,EAAE,SAAAA,MAAUR,KAAK,EAAE;cACtB,IAAMS,MAAM,GAAG;gBACbT,KAAK,EAAE,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,IAAI,CAACA,KAAK;gBACrDf,IAAI,EAAE,IAAI,CAACA,IAAI;gBACfkB,MAAM,EAAE,IAAI,CAACA,MAAM;gBACnBV,MAAM,EAAE,IAAI,CAACA,MAAM;gBACnBa,UAAU,EAAE,CAAC;gBACbC,QAAQ,EAAE,CAAC,CAAC;gBACZT,UAAU,EAAE,CAAC,CAAC;gBACdD,SAAS,EAAE;cACb,CAAC;cACDY,MAAM,CAACD,KAAK,GAAG,IAAI,CAACA,KAAK,CAACE,IAAI,CAACD,MAAM,CAAC;cACtC,OAAOA,MAAM;YACf;UACF,CAAC;UACD,IAAI,CAAC3B,SAAS,CAAC6B,IAAI,CAACV,QAAQ,CAAC;UAC7B,OAAOA,QAAQ;QACjB,CAAC;QACDb,eAAe,EAAE,SAAAA,gBAAA,EAAY;UAC3B,IAAI,IAAI,CAACN,SAAS,CAACoB,MAAM,GAAG,CAAC,EAAE;YAC7B,OAAO,IAAI,CAACpB,SAAS,CAAC,IAAI,CAACA,SAAS,CAACoB,MAAM,GAAG,CAAC,CAAC;UAClD;UAEA,OAAOb,SAAS;QAClB,CAAC;QACDC,SAAS,EAAE,SAAAA,UAAUsB,GAAG,EAAE;UACxB,IAAMC,iBAAiB,GAAG,IAAI,CAACzB,eAAe,EAAE;UAEhD,IAAIyB,iBAAiB,IAAIA,iBAAiB,CAACN,QAAQ,KAAK,CAAC,CAAC,EAAE;YAC1DM,iBAAiB,CAACN,QAAQ,GAAG,IAAI,CAAChB,QAAQ,CAACb,QAAQ,CAACwB,MAAM,GAAG,CAAC;YAC9DW,iBAAiB,CAACf,UAAU,GAAGe,iBAAiB,CAACN,QAAQ,GAAGM,iBAAiB,CAACP,UAAU;YACxFO,iBAAiB,CAAChB,SAAS,GAAG,KAAK;UACrC,CAAC,CAAC;;UAGF,IAAIe,GAAG,IAAI,IAAI,CAAC9B,SAAS,CAACoB,MAAM,GAAG,CAAC,EAAE;YACpC,KAAK,IAAIY,EAAE,GAAG,IAAI,CAAChC,SAAS,CAACoB,MAAM,GAAG,CAAC,EAAEY,EAAE,IAAI,CAAC,EAAEA,EAAE,EAAE,EAAE;cACtD,IAAI,IAAI,CAAChC,SAAS,CAACgC,EAAE,CAAC,CAAChB,UAAU,IAAI,CAAC,EAAE;gBACtC,IAAI,CAAChB,SAAS,CAACiB,MAAM,CAACe,EAAE,EAAE,CAAC,CAAC;cAC9B;YACF;UACF,CAAC,CAAC;;UAGF,IAAIF,GAAG,IAAI,IAAI,CAAC9B,SAAS,CAACoB,MAAM,KAAK,CAAC,EAAE;YACtC,IAAI,CAACpB,SAAS,CAAC6B,IAAI,CAAC;cAClB1B,IAAI,EAAE,EAAE;cACRQ,MAAM,EAAE,IAAI,CAACA;YACf,CAAC,CAAC;UACJ;UAEA,OAAOoB,iBAAiB;QAC1B;MACF,CAAC,CAAC,CAAC;MACH;MACA;MACA;MACA;;MAEA,IAAI1B,gBAAgB,IAAIA,gBAAgB,CAACF,IAAI,IAAI,OAAOE,gBAAgB,CAACqB,KAAK,KAAK,UAAU,EAAE;QAC7F,IAAMO,QAAQ,GAAG5B,gBAAgB,CAACqB,KAAK,CAAC,CAAC,CAAC;QAC1CO,QAAQ,CAAClB,SAAS,GAAG,IAAI;QACzB,IAAI,CAACpB,MAAM,CAACK,SAAS,CAAC6B,IAAI,CAACI,QAAQ,CAAC;MACtC;MAEA,IAAI,CAACvC,OAAO,CAACmC,IAAI,CAAC,IAAI,CAAClC,MAAM,CAAC;IAChC,CAAC;IACDuC,QAAQ,EAAE,SAAAA,SAAA,EAAY;MACpB,IAAI,IAAI,CAACvC,MAAM,IAAI,OAAO,IAAI,CAACA,MAAM,CAACa,SAAS,KAAK,UAAU,EAAE;QAC9D,IAAI,CAACb,MAAM,CAACa,SAAS,CAAC,IAAI,CAAC;MAC7B;IACF,CAAC;IACD2B,gBAAgB,EAAE,SAAAA,iBAAUC,KAAK,EAAEC,GAAG,EAAE;MACtC,IAAMnB,KAAK,GAAGoB,QAAQ,CAACF,KAAK,EAAE,EAAE,CAAC;MACjC,OAAO,CAAClB,KAAK,IAAI,CAAC,GAAGA,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAGmB,GAAG,GAAG,CAAC,IAAI,CAAC;IACvD,CAAC;IACDE,gBAAgB,EAAE,SAAAA,iBAAUH,KAAK,EAAEC,GAAG,EAAE;MACtC,IAAMnB,KAAK,GAAGoB,QAAQ,CAACF,KAAK,EAAE,EAAE,CAAC;MACjC,OAAO,CAAClB,KAAK,IAAI,CAAC,GAAGA,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAGmB,GAAG,GAAG,CAAC,IAAI,CAAC;IACvD,CAAC;IACDG,YAAY,EAAE,SAAAA,aAAUJ,KAAK,EAAEC,GAAG,EAAE;MAClC,IAAMnB,KAAK,GAAGoB,QAAQ,CAACF,KAAK,EAAE,EAAE,CAAC;MACjC,OAAO,CAAClB,KAAK,IAAI,CAAC,GAAGA,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAGmB,GAAG,GAAG,CAAC,IAAI,CAAC;IACvD,CAAC;IACDI,SAAS,EAAE,SAAAA,UAAUC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;MAC5B,IAAMC,GAAG,GAAG,IAAI,CAACjD,QAAQ;MACzB,IAAMkD,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACb,QAAQ;MACzCkD,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,EAAEG,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,EAAEG,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,CAAC;MAC5CI,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACF,CAAC,GAAG,CAAC,CAAC,EAAEE,GAAG,CAACF,CAAC,GAAG,CAAC,CAAC,EAAEE,GAAG,CAACF,CAAC,GAAG,CAAC,CAAC,CAAC;MAC5CG,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,EAAEC,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,EAAEC,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9C,CAAC;IACDG,cAAc,EAAE,SAAAA,eAAUL,CAAC,EAAE;MAC3B,IAAMG,GAAG,GAAG,IAAI,CAACjD,QAAQ;MACzB,IAAMkD,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACb,QAAQ;MACzCkD,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,EAAEG,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,EAAEG,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9C,CAAC;IACDM,aAAa,EAAE,SAAAA,cAAUN,CAAC,EAAE;MAC1B,IAAMG,GAAG,GAAG,IAAI,CAACjD,QAAQ;MACzB,IAAMkD,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACb,QAAQ;MACzCkD,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,EAAEG,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,EAAEG,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9C,CAAC;IACDO,SAAS,EAAE,SAAAA,UAAUP,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;MAC5B,IAAMC,GAAG,GAAG,IAAI,CAAChD,OAAO;MACxB,IAAMiD,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACZ,OAAO;MACxCiD,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,EAAEG,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,EAAEG,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,CAAC;MAC5CI,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACF,CAAC,GAAG,CAAC,CAAC,EAAEE,GAAG,CAACF,CAAC,GAAG,CAAC,CAAC,EAAEE,GAAG,CAACF,CAAC,GAAG,CAAC,CAAC,CAAC;MAC5CG,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,EAAEC,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,EAAEC,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9C,CAAC;IACDM,aAAa,EAAE,SAAAA,cAAUR,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;MAChC,IAAMC,GAAG,GAAG,IAAI,CAACjD,QAAQ;MACzB,IAAMkD,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACZ,OAAO;MAExCV,GAAG,CAACgE,SAAS,CAACN,GAAG,EAAEH,CAAC,CAAC;MAErBtD,GAAG,CAAC+D,SAAS,CAACN,GAAG,EAAEF,CAAC,CAAC;MAErBtD,GAAG,CAAC8D,SAAS,CAACN,GAAG,EAAED,CAAC,CAAC;MAErBrD,GAAG,CAAC6D,UAAU,CAAC/D,GAAG,EAAED,GAAG,CAAC;MAExBE,GAAG,CAAC8D,UAAU,CAACjE,GAAG,EAAEC,GAAG,CAAC;MAExBG,GAAG,CAAC8D,KAAK,CAAC/D,GAAG,CAAC;MAEdC,GAAG,CAAC+D,SAAS,EAAE;MAEfR,GAAG,CAACjB,IAAI,CAACtC,GAAG,CAACgE,CAAC,EAAEhE,GAAG,CAACiE,CAAC,EAAEjE,GAAG,CAACkE,CAAC,CAAC;MAC7BX,GAAG,CAACjB,IAAI,CAACtC,GAAG,CAACgE,CAAC,EAAEhE,GAAG,CAACiE,CAAC,EAAEjE,GAAG,CAACkE,CAAC,CAAC;MAC7BX,GAAG,CAACjB,IAAI,CAACtC,GAAG,CAACgE,CAAC,EAAEhE,GAAG,CAACiE,CAAC,EAAEjE,GAAG,CAACkE,CAAC,CAAC;IAC/B,CAAC;IACDC,QAAQ,EAAE,SAAAA,SAAUhB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;MAC3B,IAAMC,GAAG,GAAG,IAAI,CAAC/C,MAAM;MACvB,IAAMgD,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACX,MAAM;MACvC,IAAI+C,GAAG,CAACH,CAAC,CAAC,KAAKnC,SAAS,EAAEuC,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,EAAEG,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,EAAEG,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,CAAC;MACtE,IAAIG,GAAG,CAACF,CAAC,CAAC,KAAKpC,SAAS,EAAEuC,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACF,CAAC,GAAG,CAAC,CAAC,EAAEE,GAAG,CAACF,CAAC,GAAG,CAAC,CAAC,EAAEE,GAAG,CAACF,CAAC,GAAG,CAAC,CAAC,CAAC;MACtE,IAAIE,GAAG,CAACD,CAAC,CAAC,KAAKrC,SAAS,EAAEuC,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,EAAEC,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,EAAEC,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,CAAC;IACxE,CAAC;IACDe,KAAK,EAAE,SAAAA,MAAUjB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;MACxB,IAAMC,GAAG,GAAG,IAAI,CAAC9C,GAAG;MACpB,IAAM+C,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACV,GAAG;MACpC+C,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,EAAEG,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,CAAC;MAChCI,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACF,CAAC,GAAG,CAAC,CAAC,EAAEE,GAAG,CAACF,CAAC,GAAG,CAAC,CAAC,CAAC;MAChCG,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,EAAEC,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,CAAC;IAClC,CAAC;IACDgB,YAAY,EAAE,SAAAA,aAAA,EAAY;MACxB,IAAMd,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACV,GAAG;MACpC+C,GAAG,CAACjB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;MACdiB,GAAG,CAACjB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;MACdiB,GAAG,CAACjB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IAChB,CAAC;IACDgC,SAAS,EAAE,SAAAA,UAAUnB,CAAC,EAAE;MACtB,IAAMG,GAAG,GAAG,IAAI,CAAC9C,GAAG;MACpB,IAAM+C,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACV,GAAG;MACpC+C,GAAG,CAACjB,IAAI,CAACgB,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,EAAEG,GAAG,CAACH,CAAC,GAAG,CAAC,CAAC,CAAC;IAClC,CAAC;IACDoB,OAAO,EAAE,SAAAA,QAAUpB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEmB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;MAClD,IAAMC,IAAI,GAAG,IAAI,CAACzE,QAAQ,CAACwB,MAAM;MACjC,IAAIkD,EAAE,GAAG,IAAI,CAACnC,gBAAgB,CAACO,CAAC,EAAE2B,IAAI,CAAC;MACvC,IAAIE,EAAE,GAAG,IAAI,CAACpC,gBAAgB,CAACQ,CAAC,EAAE0B,IAAI,CAAC;MACvC,IAAIG,EAAE,GAAG,IAAI,CAACrC,gBAAgB,CAACS,CAAC,EAAEyB,IAAI,CAAC;MACvC,IAAI,CAAC5B,SAAS,CAAC6B,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;MAC1B,IAAI,CAACd,QAAQ,CAACY,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,CAAC,CAAC;;MAE3B,IAAIN,EAAE,KAAK3D,SAAS,IAAI2D,EAAE,KAAK,EAAE,EAAE;QACjC,IAAMO,IAAI,GAAG,IAAI,CAAC5E,OAAO,CAACuB,MAAM;QAChCkD,EAAE,GAAG,IAAI,CAAC/B,gBAAgB,CAAC2B,EAAE,EAAEO,IAAI,CAAC;QACpCF,EAAE,GAAG,IAAI,CAAChC,gBAAgB,CAAC4B,EAAE,EAAEM,IAAI,CAAC;QACpCD,EAAE,GAAG,IAAI,CAACjC,gBAAgB,CAAC6B,EAAE,EAAEK,IAAI,CAAC;QACpC,IAAI,CAACxB,SAAS,CAACqB,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;MAC5B,CAAC,MAAM;QACL,IAAI,CAACtB,aAAa,CAACoB,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;MAChC,CAAC,CAAC;;MAGF,IAAIT,EAAE,KAAKxD,SAAS,IAAIwD,EAAE,KAAK,EAAE,EAAE;QACjC,IAAMW,KAAK,GAAG,IAAI,CAAC3E,GAAG,CAACqB,MAAM;QAC7BkD,EAAE,GAAG,IAAI,CAAC9B,YAAY,CAACuB,EAAE,EAAEW,KAAK,CAAC;QACjCH,EAAE,GAAG,IAAI,CAAC/B,YAAY,CAACwB,EAAE,EAAEU,KAAK,CAAC;QACjCF,EAAE,GAAG,IAAI,CAAChC,YAAY,CAACyB,EAAE,EAAES,KAAK,CAAC;QACjC,IAAI,CAACf,KAAK,CAACW,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;QACtB,IAAI,CAAC7E,MAAM,CAACc,QAAQ,CAACC,YAAY,GAAG,IAAI;MAC1C,CAAC,MAAM;QACL;QACA,IAAI,CAACkD,YAAY,EAAE;MACrB;IACF,CAAC;IACDe,gBAAgB,EAAE,SAAAA,iBAAU/E,QAAQ,EAAE;MACpC,IAAI,CAACD,MAAM,CAACc,QAAQ,CAACmE,IAAI,GAAG,QAAQ;MACpC,IAAMP,IAAI,GAAG,IAAI,CAACzE,QAAQ,CAACwB,MAAM;MAEjC,KAAK,IAAIyD,EAAE,GAAG,CAAC,EAAEC,CAAC,GAAGlF,QAAQ,CAACwB,MAAM,EAAEyD,EAAE,GAAGC,CAAC,EAAED,EAAE,EAAE,EAAE;QAClD,IAAM3D,KAAK,GAAG,IAAI,CAACiB,gBAAgB,CAACvC,QAAQ,CAACiF,EAAE,CAAC,EAAER,IAAI,CAAC;QACvD,IAAI,CAACtB,cAAc,CAAC7B,KAAK,CAAC;QAC1B,IAAI,CAACwC,QAAQ,CAACxC,KAAK,CAAC;MACtB;IACF,CAAC;IACD6D,eAAe,EAAE,SAAAA,gBAAUnF,QAAQ,EAAEG,GAAG,EAAE;MACxC,IAAI,CAACJ,MAAM,CAACc,QAAQ,CAACmE,IAAI,GAAG,MAAM;MAClC,IAAMP,IAAI,GAAG,IAAI,CAACzE,QAAQ,CAACwB,MAAM;MACjC,IAAMsD,KAAK,GAAG,IAAI,CAAC3E,GAAG,CAACqB,MAAM;MAE7B,KAAK,IAAIyD,EAAE,GAAG,CAAC,EAAEC,CAAC,GAAGlF,QAAQ,CAACwB,MAAM,EAAEyD,EAAE,GAAGC,CAAC,EAAED,EAAE,EAAE,EAAE;QAClD,IAAI,CAAC7B,aAAa,CAAC,IAAI,CAACb,gBAAgB,CAACvC,QAAQ,CAACiF,EAAE,CAAC,EAAER,IAAI,CAAC,CAAC;MAC/D;MAEA,KAAK,IAAIW,GAAG,GAAG,CAAC,EAAEF,EAAC,GAAG/E,GAAG,CAACqB,MAAM,EAAE4D,GAAG,GAAGF,EAAC,EAAEE,GAAG,EAAE,EAAE;QAChD,IAAI,CAACnB,SAAS,CAAC,IAAI,CAACrB,YAAY,CAACzC,GAAG,CAACiF,GAAG,CAAC,EAAEN,KAAK,CAAC,CAAC;MACpD;IACF;EACF,CAAC;EACDjF,KAAK,CAACS,WAAW,CAAC,EAAE,EAAE,KAAK,CAAC;EAC5B,OAAOT,KAAK;AACd,CAAC,CAAC;AAAA,IAGIwF,SAAS,0BAAAC,OAAA;EAAAC,SAAA,CAAAF,SAAA,EAAAC,OAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,SAAA;EACb,SAAAA,UAAYK,OAAO,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,SAAA;IACnBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,OAAO;IACbC,KAAA,CAAKvF,SAAS,GAAG,IAAI;IAAC,OAAAuF,KAAA;EACxB;EAACG,YAAA,CAAAT,SAAA;IAAAU,GAAA;IAAAvD,KAAA,EAED,SAAAwD,KAAKC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAE;MACrC,IAAMC,KAAK,GAAG,IAAI;MAClB,IAAMC,MAAM,GAAG,IAAI9H,UAAU,CAAC,IAAI,CAACkH,OAAO,CAAC;MAC3CY,MAAM,CAACC,OAAO,CAAC,IAAI,CAACC,IAAI,CAAC;MACzBF,MAAM,CAACG,gBAAgB,CAAC,IAAI,CAACC,aAAa,CAAC;MAC3CJ,MAAM,CAACK,kBAAkB,CAAC,IAAI,CAACC,eAAe,CAAC;MAC/CN,MAAM,CAACN,IAAI,CAACC,GAAG,EAAE,UAAUY,IAAI,EAAE;QAC/B,IAAI;UACFX,MAAM,CAACG,KAAK,CAACS,KAAK,CAACD,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,OAAOE,CAAC,EAAE;UACV,IAAIX,OAAO,EAAE;YACXA,OAAO,CAACW,CAAC,CAAC;UACZ,CAAC,MAAM;YACLC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;UAClB;UAEAV,KAAK,CAACX,OAAO,CAACwB,SAAS,CAACjB,GAAG,CAAC;QAC9B;MACF,CAAC,EAAEE,UAAU,EAAEC,OAAO,CAAC;IACzB;EAAC;IAAAL,GAAA;IAAAvD,KAAA,EAED,SAAA2E,aAAa/G,SAAS,EAAE;MACtB,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC1B,OAAO,IAAI;IACb;EAAC;IAAA2F,GAAA;IAAAvD,KAAA,EAED,SAAAsE,MAAMD,IAAI,EAAE;MACV,IAAMhH,KAAK,GAAG,IAAID,WAAW,EAAE;MAE/B,IAAIiH,IAAI,CAACO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;QAC/B;QACAP,IAAI,GAAGA,IAAI,CAACQ,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;MACpC;MAEA,IAAIR,IAAI,CAACO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;QAC/B;QACAP,IAAI,GAAGA,IAAI,CAACQ,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;MAClC;MAEA,IAAMC,KAAK,GAAGT,IAAI,CAACU,KAAK,CAAC,IAAI,CAAC;MAC9B,IAAIC,IAAI,GAAG,EAAE;QACTC,aAAa,GAAG,EAAE;MACtB,IAAIC,UAAU,GAAG,CAAC;MAClB,IAAIC,MAAM,GAAG,EAAE,CAAC,CAAC;;MAEjB,IAAMC,QAAQ,GAAG,OAAO,EAAE,CAACA,QAAQ,KAAK,UAAU;MAElD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAE3C,CAAC,GAAGoC,KAAK,CAAC9F,MAAM,EAAEqG,CAAC,GAAG3C,CAAC,EAAE2C,CAAC,EAAE,EAAE;QAC5CL,IAAI,GAAGF,KAAK,CAACO,CAAC,CAAC;QACfL,IAAI,GAAGI,QAAQ,GAAGJ,IAAI,CAACI,QAAQ,EAAE,GAAGJ,IAAI,CAACM,IAAI,EAAE;QAC/CJ,UAAU,GAAGF,IAAI,CAAChG,MAAM;QACxB,IAAIkG,UAAU,KAAK,CAAC,EAAE;QACtBD,aAAa,GAAGD,IAAI,CAACO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEhC,IAAIN,aAAa,KAAK,GAAG,EAAE;QAE3B,IAAIA,aAAa,KAAK,GAAG,EAAE;UACzB,IAAMO,IAAI,GAAGR,IAAI,CAACD,KAAK,CAAC,KAAK,CAAC;UAE9B,QAAQS,IAAI,CAAC,CAAC,CAAC;YACb,KAAK,GAAG;cACNnI,KAAK,CAACG,QAAQ,CAACiC,IAAI,CAACgG,UAAU,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEC,UAAU,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEC,UAAU,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;cAElF,IAAIA,IAAI,CAACxG,MAAM,IAAI,CAAC,EAAE;gBACpB3B,KAAK,CAACK,MAAM,CAAC+B,IAAI,CAACgG,UAAU,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEC,UAAU,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEC,UAAU,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;cAClF,CAAC,MAAM;gBACL;gBACAnI,KAAK,CAACK,MAAM,CAAC+B,IAAI,CAACtB,SAAS,EAAEA,SAAS,EAAEA,SAAS,CAAC;cACpD;cAEA;YAEF,KAAK,IAAI;cACPd,KAAK,CAACI,OAAO,CAACgC,IAAI,CAACgG,UAAU,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEC,UAAU,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEC,UAAU,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;cACjF;YAEF,KAAK,IAAI;cACPnI,KAAK,CAACM,GAAG,CAAC8B,IAAI,CAACgG,UAAU,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEC,UAAU,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;cACxD;UAAM;QAEZ,CAAC,MAAM,IAAIP,aAAa,KAAK,GAAG,EAAE;UAChC,IAAMS,QAAQ,GAAGV,IAAI,CAACW,MAAM,CAAC,CAAC,CAAC,CAACL,IAAI,EAAE;UACtC,IAAMM,UAAU,GAAGF,QAAQ,CAACX,KAAK,CAAC,KAAK,CAAC;UACxC,IAAMc,YAAY,GAAG,EAAE,CAAC,CAAC;;UAEzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGH,UAAU,CAAC5G,MAAM,EAAE8G,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAE;YACnD,IAAME,MAAM,GAAGJ,UAAU,CAACE,CAAC,CAAC;YAE5B,IAAIE,MAAM,CAAChH,MAAM,GAAG,CAAC,EAAE;cACrB,IAAMiH,WAAW,GAAGD,MAAM,CAACjB,KAAK,CAAC,GAAG,CAAC;cACrCc,YAAY,CAACpG,IAAI,CAACwG,WAAW,CAAC;YAChC;UACF,CAAC,CAAC;;UAGF,IAAMC,EAAE,GAAGL,YAAY,CAAC,CAAC,CAAC;UAE1B,KAAK,IAAIC,EAAC,GAAG,CAAC,EAAEC,GAAE,GAAGF,YAAY,CAAC7G,MAAM,GAAG,CAAC,EAAE8G,EAAC,GAAGC,GAAE,EAAED,EAAC,EAAE,EAAE;YACzD,IAAMK,EAAE,GAAGN,YAAY,CAACC,EAAC,CAAC;YAC1B,IAAMM,EAAE,GAAGP,YAAY,CAACC,EAAC,GAAG,CAAC,CAAC;YAC9BzI,KAAK,CAACqE,OAAO,CAACwE,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAEF,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC;UAC9E;QACF,CAAC,MAAM,IAAInB,aAAa,KAAK,GAAG,EAAE;UAChC,IAAMoB,SAAS,GAAGrB,IAAI,CAACsB,SAAS,CAAC,CAAC,CAAC,CAAChB,IAAI,EAAE,CAACP,KAAK,CAAC,GAAG,CAAC;UACrD,IAAIwB,YAAY,GAAG,EAAE;UACrB,IAAMC,OAAO,GAAG,EAAE;UAElB,IAAIxB,IAAI,CAACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;YAC5B2B,YAAY,GAAGF,SAAS;UAC1B,CAAC,MAAM;YACL,KAAK,IAAII,EAAE,GAAG,CAAC,EAAEC,IAAI,GAAGL,SAAS,CAACrH,MAAM,EAAEyH,EAAE,GAAGC,IAAI,EAAED,EAAE,EAAE,EAAE;cACzD,IAAME,KAAK,GAAGN,SAAS,CAACI,EAAE,CAAC,CAAC1B,KAAK,CAAC,GAAG,CAAC;cACtC,IAAI4B,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,EAAEJ,YAAY,CAAC9G,IAAI,CAACkH,KAAK,CAAC,CAAC,CAAC,CAAC;cAChD,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,EAAEH,OAAO,CAAC/G,IAAI,CAACkH,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7C;UACF;UAEAtJ,KAAK,CAACsF,eAAe,CAAC4D,YAAY,EAAEC,OAAO,CAAC;QAC9C,CAAC,MAAM,IAAIvB,aAAa,KAAK,GAAG,EAAE;UAChC,IAAMS,SAAQ,GAAGV,IAAI,CAACW,MAAM,CAAC,CAAC,CAAC,CAACL,IAAI,EAAE;UACtC,IAAMsB,SAAS,GAAGlB,SAAQ,CAACX,KAAK,CAAC,GAAG,CAAC;UACrC1H,KAAK,CAACkF,gBAAgB,CAACqE,SAAS,CAAC;QACnC,CAAC,MAAM,IAAI,CAACzB,MAAM,GAAGxI,eAAe,CAACkK,IAAI,CAAC7B,IAAI,CAAC,MAAM,IAAI,EAAE;UACzD;UACA;UACA;UACA;UACA;UACA,IAAMjH,IAAI,GAAG,CAAC,GAAG,GAAGoH,MAAM,CAAC,CAAC,CAAC,CAACQ,MAAM,CAAC,CAAC,CAAC,CAACL,IAAI,EAAE,EAAEK,MAAM,CAAC,CAAC,CAAC;UACzDtI,KAAK,CAACS,WAAW,CAACC,IAAI,CAAC;QACzB,CAAC,MAAM,IAAIlB,qBAAqB,CAACiK,IAAI,CAAC9B,IAAI,CAAC,EAAE;UAC3C;UACA3H,KAAK,CAACE,MAAM,CAACiB,aAAa,CAACwG,IAAI,CAACsB,SAAS,CAAC,CAAC,CAAC,CAAChB,IAAI,EAAE,EAAEjI,KAAK,CAACQ,iBAAiB,CAAC;QAC/E,CAAC,MAAM,IAAIjB,yBAAyB,CAACkK,IAAI,CAAC9B,IAAI,CAAC,EAAE;UAC/C;UACA3H,KAAK,CAACQ,iBAAiB,CAAC4B,IAAI,CAACuF,IAAI,CAACsB,SAAS,CAAC,CAAC,CAAC,CAAChB,IAAI,EAAE,CAAC;QACxD,CAAC,MAAM,IAAIxI,gBAAgB,CAACgK,IAAI,CAAC9B,IAAI,CAAC,EAAE;UACtC;UACA;UACAR,OAAO,CAACuC,IAAI,CAAC,sGAAsG,CAAC;QACtH,CAAC,MAAM,IAAI9B,aAAa,KAAK,GAAG,EAAE;UAChCE,MAAM,GAAGH,IAAI,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;UAC1B;UACA;UACA;UACA;UACA;UACA;;UAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;UAEQ,IAAII,MAAM,CAACnG,MAAM,GAAG,CAAC,EAAE;YACrB,IAAMgB,KAAK,GAAGmF,MAAM,CAAC,CAAC,CAAC,CAACG,IAAI,EAAE,CAAC0B,WAAW,EAAE;YAC5C3J,KAAK,CAACE,MAAM,CAACgB,MAAM,GAAGyB,KAAK,KAAK,GAAG,IAAIA,KAAK,KAAK,KAAK;UACxD,CAAC,MAAM;YACL;YACA3C,KAAK,CAACE,MAAM,CAACgB,MAAM,GAAG,IAAI;UAC5B;UAEA,IAAMQ,QAAQ,GAAG1B,KAAK,CAACE,MAAM,CAACW,eAAe,EAAE;UAC/C,IAAIa,QAAQ,EAAEA,QAAQ,CAACR,MAAM,GAAGlB,KAAK,CAACE,MAAM,CAACgB,MAAM;QACrD,CAAC,MAAM;UACL;UACA,IAAIyG,IAAI,KAAK,IAAI,EAAE;UACnBR,OAAO,CAACuC,IAAI,CAAC,qCAAqC,GAAG/B,IAAI,GAAG,GAAG,CAAC;QAClE;MACF;MAEA3H,KAAK,CAACyC,QAAQ,EAAE;MAChB,IAAMmH,SAAS,GAAG,IAAIhL,KAAK,EAAE;MAC7BgL,SAAS,CAACpJ,iBAAiB,GAAG,EAAE,CAACqJ,MAAM,CAAC7J,KAAK,CAACQ,iBAAiB,CAAC;MAChE,IAAMsJ,aAAa,GAAG,EAAE9J,KAAK,CAACC,OAAO,CAAC0B,MAAM,KAAK,CAAC,IAAI3B,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAACe,QAAQ,CAACb,QAAQ,CAACwB,MAAM,KAAK,CAAC,CAAC;MAEtG,IAAImI,aAAa,KAAK,IAAI,EAAE;QAC1B,KAAK,IAAI9B,EAAC,GAAG,CAAC,EAAE3C,GAAC,GAAGrF,KAAK,CAACC,OAAO,CAAC0B,MAAM,EAAEqG,EAAC,GAAG3C,GAAC,EAAE2C,EAAC,EAAE,EAAE;UACpD,IAAM9H,MAAM,GAAGF,KAAK,CAACC,OAAO,CAAC+H,EAAC,CAAC;UAC/B,IAAMhH,QAAQ,GAAGd,MAAM,CAACc,QAAQ;UAChC,IAAMT,SAAS,GAAGL,MAAM,CAACK,SAAS;UAClC,IAAMwJ,MAAM,GAAG/I,QAAQ,CAACmE,IAAI,KAAK,MAAM;UACvC,IAAM6E,QAAQ,GAAGhJ,QAAQ,CAACmE,IAAI,KAAK,QAAQ;UAC3C,IAAI8E,eAAe,GAAG,KAAK,CAAC,CAAC;;UAE7B,IAAIjJ,QAAQ,CAACb,QAAQ,CAACwB,MAAM,KAAK,CAAC,EAAE;UACpC,IAAMuI,cAAc,GAAG,IAAIrL,cAAc,EAAE;UAC3CqL,cAAc,CAACC,YAAY,CAAC,UAAU,EAAE,IAAIrL,sBAAsB,CAACkC,QAAQ,CAACb,QAAQ,EAAE,CAAC,CAAC,CAAC;UAEzF,IAAIa,QAAQ,CAACZ,OAAO,CAACuB,MAAM,GAAG,CAAC,EAAE;YAC/BuI,cAAc,CAACC,YAAY,CAAC,QAAQ,EAAE,IAAIrL,sBAAsB,CAACkC,QAAQ,CAACZ,OAAO,EAAE,CAAC,CAAC,CAAC;UACxF;UAEA,IAAIY,QAAQ,CAACX,MAAM,CAACsB,MAAM,GAAG,CAAC,EAAE;YAC9BsI,eAAe,GAAG,IAAI;YACtBC,cAAc,CAACC,YAAY,CAAC,OAAO,EAAE,IAAIrL,sBAAsB,CAACkC,QAAQ,CAACX,MAAM,EAAE,CAAC,CAAC,CAAC;UACtF;UAEA,IAAIW,QAAQ,CAACC,YAAY,KAAK,IAAI,EAAE;YAClCiJ,cAAc,CAACC,YAAY,CAAC,IAAI,EAAE,IAAIrL,sBAAsB,CAACkC,QAAQ,CAACV,GAAG,EAAE,CAAC,CAAC,CAAC;UAChF,CAAC,CAAC;;UAGF,IAAM8J,gBAAgB,GAAG,EAAE;UAE3B,KAAK,IAAI7H,EAAE,GAAG,CAAC,EAAE8H,KAAK,GAAG9J,SAAS,CAACoB,MAAM,EAAEY,EAAE,GAAG8H,KAAK,EAAE9H,EAAE,EAAE,EAAE;YAC3D,IAAM+H,cAAc,GAAG/J,SAAS,CAACgC,EAAE,CAAC;YACpC,IAAMgI,YAAY,GAAGD,cAAc,CAAC5J,IAAI,GAAG,GAAG,GAAG4J,cAAc,CAACpJ,MAAM,GAAG,GAAG,GAAG+I,eAAe;YAC9F,IAAIvI,SAAQ,GAAG1B,KAAK,CAACO,SAAS,CAACgK,YAAY,CAAC;YAE5C,IAAI,IAAI,CAAChK,SAAS,KAAK,IAAI,EAAE;cAC3BmB,SAAQ,GAAG,IAAI,CAACnB,SAAS,CAACiK,MAAM,CAACF,cAAc,CAAC5J,IAAI,CAAC,CAAC,CAAC;;cAEvD,IAAIqJ,MAAM,IAAIrI,SAAQ,IAAI,EAAEA,SAAQ,YAAY3C,iBAAiB,CAAC,EAAE;gBAClE,IAAM0L,YAAY,GAAG,IAAI1L,iBAAiB,EAAE;gBAC5CC,QAAQ,CAAC0L,SAAS,CAACC,IAAI,CAAC3E,IAAI,CAACyE,YAAY,EAAE/I,SAAQ,CAAC;gBACpD+I,YAAY,CAACG,KAAK,CAACD,IAAI,CAACjJ,SAAQ,CAACkJ,KAAK,CAAC;gBACvClJ,SAAQ,GAAG+I,YAAY;cACzB,CAAC,MAAM,IAAIT,QAAQ,IAAItI,SAAQ,IAAI,EAAEA,SAAQ,YAAYzC,cAAc,CAAC,EAAE;gBACxE,IAAM4L,cAAc,GAAG,IAAI5L,cAAc,CAAC;kBACxC6L,IAAI,EAAE,EAAE;kBACRC,eAAe,EAAE;gBACnB,CAAC,CAAC;gBACF/L,QAAQ,CAAC0L,SAAS,CAACC,IAAI,CAAC3E,IAAI,CAAC6E,cAAc,EAAEnJ,SAAQ,CAAC;gBACtDmJ,cAAc,CAACD,KAAK,CAACD,IAAI,CAACjJ,SAAQ,CAACkJ,KAAK,CAAC;gBACzCC,cAAc,CAACG,GAAG,GAAGtJ,SAAQ,CAACsJ,GAAG;gBACjCtJ,SAAQ,GAAGmJ,cAAc;cAC3B;YACF;YAEA,IAAInJ,SAAQ,KAAKZ,SAAS,EAAE;cAC1B,IAAIiJ,MAAM,EAAE;gBACVrI,SAAQ,GAAG,IAAI3C,iBAAiB,EAAE;cACpC,CAAC,MAAM,IAAIiL,QAAQ,EAAE;gBACnBtI,SAAQ,GAAG,IAAIzC,cAAc,CAAC;kBAC5B6L,IAAI,EAAE,CAAC;kBACPC,eAAe,EAAE;gBACnB,CAAC,CAAC;cACJ,CAAC,MAAM;gBACLrJ,SAAQ,GAAG,IAAIxC,iBAAiB,EAAE;cACpC;cAEAwC,SAAQ,CAAChB,IAAI,GAAG4J,cAAc,CAAC5J,IAAI;cACnCgB,SAAQ,CAACuJ,WAAW,GAAGX,cAAc,CAACpJ,MAAM,GAAG,KAAK,GAAG,IAAI;cAC3DQ,SAAQ,CAACwJ,YAAY,GAAGjB,eAAe;cACvCjK,KAAK,CAACO,SAAS,CAACgK,YAAY,CAAC,GAAG7I,SAAQ;YAC1C;YAEA0I,gBAAgB,CAAChI,IAAI,CAACV,SAAQ,CAAC;UACjC,CAAC,CAAC;;UAGF,IAAIyJ,IAAI;UAER,IAAIf,gBAAgB,CAACzI,MAAM,GAAG,CAAC,EAAE;YAC/B,KAAK,IAAIY,GAAE,GAAG,CAAC,EAAE8H,MAAK,GAAG9J,SAAS,CAACoB,MAAM,EAAEY,GAAE,GAAG8H,MAAK,EAAE9H,GAAE,EAAE,EAAE;cAC3D,IAAM+H,eAAc,GAAG/J,SAAS,CAACgC,GAAE,CAAC;cACpC2H,cAAc,CAACkB,QAAQ,CAACd,eAAc,CAACvI,UAAU,EAAEuI,eAAc,CAAC/I,UAAU,EAAEgB,GAAE,CAAC;YACnF;YAEA,IAAIwH,MAAM,EAAE;cACVoB,IAAI,GAAG,IAAIhM,YAAY,CAAC+K,cAAc,EAAEE,gBAAgB,CAAC;YAC3D,CAAC,MAAM,IAAIJ,QAAQ,EAAE;cACnBmB,IAAI,GAAG,IAAI/L,MAAM,CAAC8K,cAAc,EAAEE,gBAAgB,CAAC;YACrD,CAAC,MAAM;cACLe,IAAI,GAAG,IAAI9L,IAAI,CAAC6K,cAAc,EAAEE,gBAAgB,CAAC;YACnD;UACF,CAAC,MAAM;YACL,IAAIL,MAAM,EAAE;cACVoB,IAAI,GAAG,IAAIhM,YAAY,CAAC+K,cAAc,EAAEE,gBAAgB,CAAC,CAAC,CAAC,CAAC;YAC9D,CAAC,MAAM,IAAIJ,QAAQ,EAAE;cACnBmB,IAAI,GAAG,IAAI/L,MAAM,CAAC8K,cAAc,EAAEE,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACxD,CAAC,MAAM;cACLe,IAAI,GAAG,IAAI9L,IAAI,CAAC6K,cAAc,EAAEE,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACtD;UACF;UAEAe,IAAI,CAACzK,IAAI,GAAGR,MAAM,CAACQ,IAAI;UACvBkJ,SAAS,CAACyB,GAAG,CAACF,IAAI,CAAC;QACrB;MACF,CAAC,MAAM;QACL;QACA,IAAInL,KAAK,CAACG,QAAQ,CAACwB,MAAM,GAAG,CAAC,EAAE;UAC7B,IAAMD,UAAQ,GAAG,IAAIzC,cAAc,CAAC;YAClC6L,IAAI,EAAE,CAAC;YACPC,eAAe,EAAE;UACnB,CAAC,CAAC;UACF,IAAMb,eAAc,GAAG,IAAIrL,cAAc,EAAE;UAC3CqL,eAAc,CAACC,YAAY,CAAC,UAAU,EAAE,IAAIrL,sBAAsB,CAACkB,KAAK,CAACG,QAAQ,EAAE,CAAC,CAAC,CAAC;UAEtF,IAAIH,KAAK,CAACK,MAAM,CAACsB,MAAM,GAAG,CAAC,IAAI3B,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC,KAAKS,SAAS,EAAE;YAC5DoJ,eAAc,CAACC,YAAY,CAAC,OAAO,EAAE,IAAIrL,sBAAsB,CAACkB,KAAK,CAACK,MAAM,EAAE,CAAC,CAAC,CAAC;YACjFqB,UAAQ,CAACwJ,YAAY,GAAG,IAAI;UAC9B;UAEA,IAAMI,MAAM,GAAG,IAAIlM,MAAM,CAAC8K,eAAc,EAAExI,UAAQ,CAAC;UACnDkI,SAAS,CAACyB,GAAG,CAACC,MAAM,CAAC;QACvB;MACF;MAEA,OAAO1B,SAAS;IAClB;EAAC;EAAA,OAAApE,SAAA;AAAA,EA1TqB9G,MAAM;AA8T9B,SAAS8G,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}