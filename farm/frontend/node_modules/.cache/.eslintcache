[{"/home/samuel/experiment/3d/farm/frontend/src/index.js":"1","/home/samuel/experiment/3d/farm/frontend/src/renderer.js":"2","/home/samuel/experiment/3d/farm/frontend/src/app.js":"3","/home/samuel/experiment/3d/farm/frontend/src/model/index.js":"4","/home/samuel/experiment/3d/farm/frontend/src/view/index.js":"5","/home/samuel/experiment/3d/farm/frontend/src/model/state.js":"6","/home/samuel/experiment/3d/farm/frontend/src/model/session.js":"7","/home/samuel/experiment/3d/farm/frontend/src/model/rest.js":"8","/home/samuel/experiment/3d/farm/frontend/src/view/style.js":"9","/home/samuel/experiment/3d/farm/frontend/src/view/maze.js":"10","/home/samuel/experiment/3d/farm/frontend/src/view/useKeyboard.js":"11","/home/samuel/experiment/3d/farm/frontend/src/view/chicken/index.js":"12","/home/samuel/experiment/3d/farm/frontend/src/view/effect/index.js":"13"},{"size":183,"mtime":1684537103233,"results":"14","hashOfConfig":"15"},{"size":177,"mtime":1684537103233,"results":"16","hashOfConfig":"15"},{"size":627,"mtime":1684537103233,"results":"17","hashOfConfig":"15"},{"size":556,"mtime":1684537103233,"results":"18","hashOfConfig":"15"},{"size":431,"mtime":1684672257113,"results":"19","hashOfConfig":"15"},{"size":317,"mtime":1684624112053,"results":"20","hashOfConfig":"15"},{"size":919,"mtime":1684537103233,"results":"21","hashOfConfig":"15"},{"size":638,"mtime":1684537103233,"results":"22","hashOfConfig":"15"},{"size":253,"mtime":1684678658243,"results":"23","hashOfConfig":"15"},{"size":1989,"mtime":1684686757623,"results":"24","hashOfConfig":"15"},{"size":793,"mtime":1684680902803,"results":"25","hashOfConfig":"15"},{"size":712,"mtime":1684686685143,"results":"26","hashOfConfig":"15"},{"size":177,"mtime":1684684925483,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w1b49",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/samuel/experiment/3d/farm/frontend/src/index.js",[],[],"/home/samuel/experiment/3d/farm/frontend/src/renderer.js",[],[],"/home/samuel/experiment/3d/farm/frontend/src/app.js",["70"],[],"\nimport {useState} from 'react'\n\nlet sameEvents = (a,b) => {\n\treturn a.source === b.source &&\n\t\tJSON.stringify(a.data) === JSON.stringify(b.data)\n}\n\nlet App = props => {\n\tlet model = props.model\n\tlet View = props.View\n\n\tlet [state, setState] = useState(model.state)\n\tlet [event, setEvent] = useState({source:'', data:''})\n\n\tlet handleUpdate = (data,id) => {\n\t\tmodel.update(data, id)\n\t}\n\n\tmodel.onUpdate = (data, source) => {\n\t\tlet newEvent = {data, source}\n\t\t!sameEvents(event, newEvent) && setEvent(newEvent)\n\t}\n\n\treturn (\n\t\t<View\n\t\t\tstate={state}\n\t\t\tonUpdate = {handleUpdate}\n\t\t\tevent={event}\n\t\t\t/>\n\n\t)\n}\n\nexport default App\n","/home/samuel/experiment/3d/farm/frontend/src/model/index.js",[],[],"/home/samuel/experiment/3d/farm/frontend/src/view/index.js",["71"],[],"import React from 'react'\nimport Maze from './maze'\n\nimport style from './style'\n\nlet View = props => {\n\tlet {state, event, onUpdate} = props\n\n\treturn <div style={style}>\n\t\t\t<Maze\n\t\t\t\tstyle={style.scene}\n\t\t\t\tdata={state.system.maze}\n\t\t\t\tchickens={state.system.chickens}\n\t\t\t\timpacts = {state.system.impacts}\n\t\t\t\ttargets = {state.user.targets}\n\t\t\t\tplayer = {state.user.player}\n\t\t\t\tevent={event}\n\t\t\t/>\n\t\t</div>\n}\n\nexport default View\n","/home/samuel/experiment/3d/farm/frontend/src/model/state.js",[],[],"/home/samuel/experiment/3d/farm/frontend/src/model/session.js",["72","73"],[],"import Rest from './rest'\n\nclass Session{\n\tconstructor(){}\n\n\tyaala(from, data){\n\t\tthis.rest.yaala({from, data})\n\t}\n\n\tyoole(from, to, data){\n\t\tthis.rest.yoole({from, to, data})\n\t}\n\n\n\tconnect(path){\n\t\tlet source = new EventSource(path)\n\t\tsource.addEventListener('message', msg => this.onMessage(msg.data) )\n\t}\n\n\tonMessage(data){\n\t\ttry{\n\t\t\tlet msg = JSON.parse(data)\n\t\t\tswitch(msg.id){\n\t\t\t\tcase 'welcome' : this.onWelcome(msg); break;\n\t\t\t\tcase 'yaala' : this.onIn(msg); break;\n\t\t\t}\n\t\t}catch(e){\n\t\t\tconsole.log(e)\n\t\t}\n\t}\n\n\tonWelcome(msg){}\n\n\tonIn(msg){\n\t\tconsole.log('yaala', msg)\n\t}\n\n\tasync initialize(initialized ){\n\t\tthis.rest = new Rest()\n\t\tlet config = await this.loadConfig()\n\n\t\tthis.state.ok = config.ok\n\n\t\tif (this.state.ok){\n\t\t\tthis.state.system.maze = config.data.maze\n\t\t}\n\n\t\tthis.connect('/goyaala')\n\n\t\tinitialized( this )\n\t}\n\n\tasync loadConfig(){\n\t\treturn await this.rest.config()\n\t}\n\n}\n\nexport default Session\n","/home/samuel/experiment/3d/farm/frontend/src/model/rest.js",[],[],"/home/samuel/experiment/3d/farm/frontend/src/view/style.js",[],[],"/home/samuel/experiment/3d/farm/frontend/src/view/maze.js",["74"],[],"/home/samuel/experiment/3d/farm/frontend/src/view/useKeyboard.js",[],[],"/home/samuel/experiment/3d/farm/frontend/src/view/chicken/index.js",["75","76"],[],"/home/samuel/experiment/3d/farm/frontend/src/view/effect/index.js",[],[],{"ruleId":"77","severity":1,"message":"78","line":13,"column":14,"nodeType":"79","messageId":"80","endLine":13,"endColumn":22},{"ruleId":"77","severity":1,"message":"81","line":7,"column":21,"nodeType":"79","messageId":"80","endLine":7,"endColumn":29},{"ruleId":"82","severity":1,"message":"83","line":4,"column":2,"nodeType":"84","messageId":"85","endLine":4,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":23,"column":4,"nodeType":"88","messageId":"89","endLine":26,"endColumn":5},{"ruleId":"77","severity":1,"message":"90","line":2,"column":9,"nodeType":"79","messageId":"80","endLine":2,"endColumn":14},{"ruleId":"77","severity":1,"message":"91","line":7,"column":17,"nodeType":"79","messageId":"80","endLine":7,"endColumn":28},{"ruleId":"77","severity":1,"message":"91","line":25,"column":17,"nodeType":"79","messageId":"80","endLine":25,"endColumn":28},"no-unused-vars","'setState' is assigned a value but never used.","Identifier","unusedVar","'onUpdate' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Rufus' is defined but never used.","'setPosition' is assigned a value but never used."]